{"version":3,"sources":["logo.svg","serviceWorker.js","problems/coin-change/coins.jsx","problems/coin-change/coins_grid.jsx","sidenav.jsx","problems/LCS/LCS_tree.jsx","problems/LCS/lcs_edges.jsx","problems/LCS/LCS.jsx","problems/LIS/LIS_array.jsx","problems/LIS/LIS_SVG.jsx","problems/LIS/LIS.jsx","start_homepage.jsx","dp_info.jsx","contactUS.jsx","problems/ED/ED_tree.jsx","problems/ED/ED_edges.jsx","problems/ED/ED.jsx","problems/01KS/01_KS.jsx","homepage.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","CoinDiv","state","this","props","value","id","reachable","isvisited","coin_values","onClick","classes","className","Component","timeoutArray","Coins","coinArray","coin_we_have","idx","x","temp","i","length","push","setState","coin_combo","j","myvar","setTimeout","node","document","getElementById","classList","remove","add","node1","hope1","slice","style","borderColor","placeholder_1","hope","placeholder_2","parseInt","sort","a","b","new_hope","coin_array","coinMaker_given","coin_taker","remover","coin_Array","total_coins","coinMaker_all","clearTimeout","type","required","placeholder","setCoin","map","valueidx","key","details","visualize","clearCoins","SideNav","width","href","closeNav","to","fontSize","cursor","openNav","LCSTree","parent","str1_idx","str2_idx","y","left","right","mod","thread","returned_value","calculated","color_back","color_text","cx","cy","r","fill","stroke","strokeWidth","LCSEdges","x_1","y_1","x_2","y_2","time","markerWidth","markerHeight","refX","refY","orient","markerUnits","d","x1","y1","x2","y2","markerEnd","attributeName","from","begin","dur","repeatCount","restart","treearray","treeEdge","fullrec","str1","str2","timeout_array","x_place","y_place","edge","child","slope","temp_x2","Math","sqrt","temp_y2","temp_x1","temp_y1","traverse","xx","yy","treenode","fn","dp","temp1","temp2","max","Array","LCS","tree","modsum","addmod","setup","depth","temp_tree","left_tree","right_tree","fix_subtrees","contour","li","ri","diff","maxoffset","loffset","roffset","lo","left_outer","ro","right_outer","delta","nextleft","nextright","nodes","edges","time1","edge_new","temp_id","index","icon1","icon2","beginElement","splice","clearScreen","layout","animate","spellCheck","help","viewBox","nodeidx","edgeidx","LIS_array","font","incheck","b_color","height","LIScurve","curve","midpx","midpy","check","comp","numbers","font_size","LIS","n","DP_array","createobj","p1x","p1y","p2x","p2y","theta","atan2","PI","c1x","cos","c1y","sin","arr","count","temp_curve_array","maxval","numbers_array","dp_array","curve_obj","curveSetter","svg_array","pop","val","maximum","takeValues","setArray","lis","homepage","DpInfo","ContactUs","EDTree","middle","EDEdges","ED","temp3","min","value_array","weight_array","KS","sum","Home","path","exact","component","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cce43118.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\nclass CoinDiv extends Component {\r\n  state = {};\r\n  render() {\r\n    const {\r\n      value,\r\n      id,\r\n      reachable,\r\n      isvisited,\r\n      coin_values,\r\n      onClick,\r\n    } = this.props;\r\n    let classes = \"coin-color\";\r\n    if (isvisited == 1) {\r\n      if (reachable) {\r\n        classes = \"coinreachable\";\r\n      } else {\r\n        classes = \"coinunreachable\";\r\n      }\r\n    } else if (isvisited == 2) {\r\n      if (reachable) {\r\n        classes = \"coinreachable_done\";\r\n      } else {\r\n        classes = \"coinunreachable_done\";\r\n      }\r\n    }\r\n    return (\r\n      <div\r\n        id={id}\r\n        value={value}\r\n        className={`coin  ${classes}`}\r\n        coin_values={coin_values}\r\n        onClick={() => onClick()}\r\n      >\r\n        {value}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CoinDiv;\r\n","import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\nimport CoinDiv from \"./coins\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\n\r\n//let total_coins = 10;\r\nlet timeoutArray = [];\r\nfunction coinMaker_all(total_coins) {\r\n  let coinArray = [];\r\n  for (let i = 0; i <= total_coins; i++) {\r\n    coinArray.push(coin1(i));\r\n  }\r\n  return coinArray;\r\n}\r\nfunction coinMaker_given(coin_array) {\r\n  let coinArray = [];\r\n  for (let i = 0; i < coin_array.length; i++) {\r\n    coinArray.push(coin2(coin_array[i]));\r\n  }\r\n  return coinArray;\r\n}\r\nfunction coin1(value) {\r\n  return {\r\n    value: value,\r\n    coin_values: [],\r\n    id: `coin1-${value}`,\r\n    reachable: false,\r\n    isvisited: 0,\r\n  };\r\n}\r\nfunction coin2(value) {\r\n  return {\r\n    value: value,\r\n    coin_values: [],\r\n    id: `coin2-${value}`,\r\n    reachable: false,\r\n    isvisited: 0,\r\n  };\r\n}\r\nclass Coins extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      coinArray: [],\r\n      coin_we_have: [],\r\n    };\r\n  }\r\n  details(idx, coinArray) {\r\n    let x = coinArray[idx];\r\n    if (x.isvisited) {\r\n      let temp = [];\r\n      for (let i = 0; i < x.coin_values.length; i++) {\r\n        temp.push(x.coin_values[i]);\r\n        if (i != x.coin_values.length - 1) {\r\n          temp.push(\",\");\r\n        }\r\n      }\r\n      this.setState({ coin_combo: temp });\r\n    }\r\n  }\r\n  visualize(coinArray, coin_we_have) {\r\n    coinArray[0].isvisited = 0;\r\n    coinArray[0].reachable = true;\r\n\r\n    for (let i = 0; i < coinArray.length; i++) {\r\n      for (let j = 0; j < coin_we_have.length; j++) {\r\n        if (coinArray[i].value - coin_we_have[j].value >= 0) {\r\n          coinArray[i].reachable =\r\n            coinArray[coinArray[i].value - coin_we_have[j].value].reachable;\r\n          let x = coinArray[coinArray[i].value - coin_we_have[j].value];\r\n\r\n          let myvar = setTimeout(() => {\r\n            x.isvisited = 0;\r\n            this.setState({ coinArray });\r\n          }, 500 * i);\r\n          timeoutArray.push(myvar);\r\n          myvar = setTimeout(() => {\r\n            const node = coinArray[coinArray[i].value - coin_we_have[j].value];\r\n            document\r\n              .getElementById(`${node.id}`)\r\n              .classList.remove(\"coin-color\");\r\n            document.getElementById(`${node.id}`).classList.add(\"visited\");\r\n            const node1 = coin_we_have[j];\r\n            document\r\n              .getElementById(`${node1.id}`)\r\n              .classList.remove(\"coin-color\");\r\n            document.getElementById(`${node1.id}`).classList.add(\"visited\");\r\n          }, 500 * i);\r\n          timeoutArray.push(myvar);\r\n          this.setState({ coinArray });\r\n\r\n          myvar = setTimeout(() => {\r\n            const node = coinArray[coinArray[i].value - coin_we_have[j].value];\r\n            document.getElementById(`${node.id}`).classList.remove(\"visited\");\r\n            const node1 = coin_we_have[j];\r\n            document.getElementById(`${node1.id}`).classList.remove(\"visited\");\r\n            document.getElementById(`${node1.id}`).classList.add(\"coin-color\");\r\n          }, 500 * i + 500);\r\n          timeoutArray.push(myvar);\r\n          this.setState({ coinArray });\r\n\r\n          myvar = setTimeout(() => {\r\n            x.isvisited = 2;\r\n            this.setState({ coinArray });\r\n          }, 500 * i + 500);\r\n          timeoutArray.push(myvar);\r\n          if (coinArray[i].reachable) {\r\n            let hope =\r\n              coinArray[coinArray[i].value - coin_we_have[j].value].coin_values;\r\n\r\n            let hope1 = hope.slice();\r\n            hope1.push(coin_we_have[j].value);\r\n            coinArray[i].coin_values = hope1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      let myvar = setTimeout(() => {\r\n        coinArray[i].isvisited = 1;\r\n        this.setState({ coinArray });\r\n      }, 500 * i + 600);\r\n      timeoutArray.push(myvar);\r\n    }\r\n  }\r\n  /*\r\n\r\n*/\r\n  setCoin() {\r\n    /*----------------------input 1--------------------------------*/\r\n    let x = document.getElementById(\"input_number_1\").value;\r\n    if (x === \"\") {\r\n      let z = document.getElementById(\"input_number_1\");\r\n      z.style.borderColor = \"red\";\r\n      let y = document.getElementById(\"input_number_1\");\r\n      y.classList.add(\"danger\");\r\n      let text = \"this field is required\";\r\n      this.setState({ placeholder_1: text });\r\n      let ele = document.getElementById(\"input_number_1\");\r\n      ele.value = \"\";\r\n    } else if (x < 0) {\r\n      let z = document.getElementById(\"input_number_1\");\r\n      z.style.borderColor = \"red\";\r\n      let y = document.getElementById(\"input_number_1\");\r\n      y.classList.add(\"danger\");\r\n      let text = \"value must be a positive number\";\r\n      this.setState({ placeholder_1: text });\r\n      let ele = document.getElementById(\"input_number_1\");\r\n      ele.value = \"\";\r\n    } else if (x > 100) {\r\n      let z = document.getElementById(\"input_number_1\");\r\n      z.style.borderColor = \"red\";\r\n      let y = document.getElementById(\"input_number_1\");\r\n      y.classList.add(\"danger\");\r\n      let text = \"value should be less than 100\";\r\n      this.setState({ placeholder_1: text });\r\n      let ele = document.getElementById(\"input_number_1\");\r\n      ele.value = \"\";\r\n    } else {\r\n      /*-----------------------input 2---------------------------------*/\r\n      let val = document.getElementById(\"input_number_2\").value;\r\n      let number_pattern = /\\d+/g;\r\n      let hope = val.match(number_pattern);\r\n      if (hope === null) {\r\n        let temp = document.getElementById(\"input_number_2\");\r\n        temp.classList.add(\"danger\");\r\n        temp.style.borderColor = \"red\";\r\n        this.setState({ placeholder_2: \"invalid values\" });\r\n      } else {\r\n        for (let i = 0; i < hope.length; i++) {\r\n          hope[i] = parseInt(hope[i], 10);\r\n        }\r\n        hope.sort(function (a, b) {\r\n          return a - b;\r\n        });\r\n        let new_hope = coinMaker_given(hope);\r\n        this.setState({ coin_we_have: new_hope });\r\n        this.setState({\r\n          placeholder_2:\r\n            \"enter values of coins you have seperated by comma (,)\",\r\n        });\r\n        //  console.log(new_hope, hope);\r\n\r\n        this.setState({ coin_taker: <div></div> });\r\n        let remover = document.getElementById(\"back_button\");\r\n        remover.classList.remove(\"remove\");\r\n        remover = document.getElementById(\"visualize_button\");\r\n        remover.classList.remove(\"remove\");\r\n        remover = document.getElementById(\"color_helper\");\r\n        remover.classList.remove(\"remove\");\r\n        let coin_Array = coinMaker_all(x);\r\n        this.setState({ coinArray: coin_Array });\r\n        this.setState({\r\n          placeholder_1: \"enter coin value you want to check\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  clearCoins() {\r\n    for (let i = 0; i < timeoutArray.length; i++) {\r\n      clearTimeout(timeoutArray[i]);\r\n    }\r\n    this.setState({ coinArray: [] });\r\n    this.setState({ coin_we_have: [] });\r\n    let remover = document.getElementById(\"back_button\");\r\n    remover.classList.add(\"remove\");\r\n    remover = document.getElementById(\"visualize_button\");\r\n    remover.classList.add(\"remove\");\r\n    remover = document.getElementById(\"color_helper\");\r\n    remover.classList.add(\"remove\");\r\n    let x = (\r\n      <div id=\"coin_input\" className=\"coin_input\">\r\n        <div className=\"input_item\">\r\n          <input\r\n            className=\"input_field_size\"\r\n            type=\"number\"\r\n            required={true}\r\n            id=\"input_number_1\"\r\n            placeholder=\"enter coin value you want to check\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"input_item\">\r\n          <input\r\n            className=\"input_field_size\"\r\n            type=\"text\"\r\n            required={true}\r\n            id=\"input_number_2\"\r\n            placeholder=\"enter values of coins you have seperated by comma (,)\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"input_item\">\r\n          <button onClick={() => this.setCoin()} className=\"create_coin_button\">\r\n            <b>create coins</b>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n    this.setState({ coin_taker: x });\r\n  }\r\n  render() {\r\n    const {\r\n      coinArray = [],\r\n      placeholder_1 = \"enter coin value you want to check\",\r\n      placeholder_2 = \"enter values of coins you have seperated by comma (,)\",\r\n      coin_taker = (\r\n        <div id=\"coin_input\" className=\"coin_input\">\r\n          <div className=\"input_item\">\r\n            <input\r\n              className=\"input_field_size\"\r\n              type=\"number\"\r\n              required\r\n              id=\"input_number_1\"\r\n              placeholder={placeholder_1}\r\n            ></input>\r\n          </div>\r\n          <div className=\"input_item\">\r\n            <input\r\n              className=\"input_field_size\"\r\n              type=\"text\"\r\n              required\r\n              id=\"input_number_2\"\r\n              placeholder={placeholder_2}\r\n            ></input>\r\n          </div>\r\n          <div className=\"input_item\">\r\n            <button\r\n              onClick={() => this.setCoin()}\r\n              className=\"create_coin_button\"\r\n            >\r\n              <b> create coins</b>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ),\r\n      coin_we_have = [],\r\n      coin_combo = [],\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"problem\">\r\n          <p>\r\n            <h1> PROBLEM STATEMENT :-</h1>\r\n            <h2>\r\n              Given an unlimited supply of coins of given denominations, find if\r\n              it is possible to the desired change(sum) from these coins.\r\n            </h2>\r\n          </p>\r\n        </div>\r\n        <div className=\"problem remove\" id=\"color_helper\">\r\n          <div className=\"coin visited marginer row\"></div>\r\n          <div className=\"row square rightgap\">\r\n            <h1>= visited</h1>\r\n          </div>\r\n          <div className=\"coin coinreachable marginer row\"></div>\r\n          <div className=\"row square rightgap\">\r\n            <h1>= reachable</h1>\r\n          </div>\r\n          <div className=\"coin coinunreachable marginer row\"></div>\r\n          <div className=\"row square rightgap\">\r\n            <h1>= unreachable</h1>\r\n          </div>\r\n          <div className=\"coin coin-color marginer row\"></div>\r\n          <div className=\"row square rightgap\">\r\n            <h1>= unchecked</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Possible coin combinational sum = [{this.state.coin_combo}]</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"next\">\r\n          {coinArray.map((idx, valueidx) => {\r\n            const { coin_values, value, id, reachable, isvisited } = idx;\r\n            return (\r\n              <div className=\"row padder\">\r\n                <CoinDiv\r\n                  key={valueidx}\r\n                  coin_values={coin_values}\r\n                  id={id}\r\n                  value={value}\r\n                  reachable={reachable}\r\n                  isvisited={isvisited}\r\n                  onClick={() => this.details(idx.value, coinArray)}\r\n                >\r\n                  {value}\r\n                </CoinDiv>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"next\">\r\n          {coin_we_have.map((idx, valueidx) => {\r\n            const { coin_values, value, id, reachable, isvisited } = idx;\r\n            return (\r\n              <div className=\"row padder\">\r\n                <CoinDiv\r\n                  key={valueidx}\r\n                  coin_values={coin_values}\r\n                  id={id}\r\n                  value={value}\r\n                  reachable={reachable}\r\n                  isvisited={isvisited}\r\n                  onClick={() => this.details(idx.value, coinArray)}\r\n                >\r\n                  {value}\r\n                </CoinDiv>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"next\">{coin_taker}</div>\r\n\r\n        <div className=\"next\">\r\n          <div className=\"button_div\">\r\n            <button\r\n              onClick={() =>\r\n                this.visualize(this.state.coinArray, this.state.coin_we_have)\r\n              }\r\n              id=\"visualize_button\"\r\n              className=\"remove visualize_button\"\r\n            >\r\n              <b>visualize</b>\r\n            </button>\r\n          </div>\r\n          <div className=\"button_div\">\r\n            <button\r\n              onClick={() => this.clearCoins()}\r\n              id=\"back_button\"\r\n              className=\"remove back_button\"\r\n            >\r\n              <b> Back</b>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Coins;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\n\r\nclass SideNav extends Component {\r\n  state = {};\r\n  openNav() {\r\n    document.getElementById(\"myNav\").style.width = \"100%\";\r\n  }\r\n\r\n  closeNav() {\r\n    let x = document.getElementById(\"myNav\");\r\n    x.style.width = \"0%\";\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div id=\"myNav\" className=\"overlay\">\r\n          <a\r\n            href=\"javascript:void(0)\"\r\n            className=\"closebtn\"\r\n            onClick={() => this.closeNav()}\r\n          >\r\n            &times;\r\n          </a>\r\n          <div className=\"overlay-content\">\r\n            <Link to=\"/dpvisual\" onClick={() => this.closeNav()}>\r\n              <a href=\"#\">HomePage</a>\r\n            </Link>\r\n            <Link to=\"/dpvisual/info\" onClick={() => this.closeNav()}>\r\n              <a href=\"#\">What is Dynamic Programming(DP)</a>\r\n            </Link>\r\n            <Link to=\"/dpvisual/problem\" onClick={() => this.closeNav()}>\r\n              <a href=\"#\">Visualize Dynamic Programming</a>\r\n            </Link>\r\n            <Link to=\"/dpvisual/contact\" onClick={() => this.closeNav()}>\r\n              <a href=\"#\">Contact us</a>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{ fontSize: \"50px\", cursor: \"pointer\" }}\r\n          onClick={() => this.openNav()}\r\n        >\r\n          &#9776;{\" \"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideNav;\r\n","import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\n\r\nclass LCSTree extends Component {\r\n  state = {};\r\n  render() {\r\n    const {\r\n      parent,\r\n      str1_idx,\r\n      str2_idx,\r\n      id,\r\n      x,\r\n      y,\r\n      left,\r\n      right,\r\n      value,\r\n      mod,\r\n      thread,\r\n      returned_value,\r\n      calculated,\r\n    } = this.props;\r\n    let color_back = \"white\";\r\n    let color_text = \"black\";\r\n    if (calculated) {\r\n      color_back = \"black\";\r\n      color_text = \"white\";\r\n    }\r\n    return (\r\n      <g>\r\n        <circle\r\n          cx={x * 45 + 50}\r\n          cy={y * 150 + 50}\r\n          r=\"35\"\r\n          fill={color_back}\r\n          stroke=\"black\"\r\n          strokeWidth=\"5px\"\r\n          parent={parent}\r\n          id={id}\r\n          x={x}\r\n          y={y}\r\n          left={left}\r\n          right={right}\r\n          str1_idx={str1_idx}\r\n          str2_idx={str2_idx}\r\n          value={value}\r\n          mod={mod}\r\n          thread={thread}\r\n          returned_value={returned_value}\r\n          calculated={calculated}\r\n        ></circle>\r\n        <text\r\n          x={x * 45 + 50}\r\n          y={y * 150 + 50}\r\n          fill={color_text}\r\n          className=\"treedata\"\r\n        >\r\n          {value}\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LCSTree;\r\n","import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\n\r\nclass LCSEdges extends Component {\r\n  state = {};\r\n  render() {\r\n    const { x_1, y_1, x_2, y_2, value = -1, time } = this.props;\r\n\r\n    if (value != -1) {\r\n      return (\r\n        <g>\r\n          <defs>\r\n            <marker\r\n              id=\"markerArrow1\"\r\n              markerWidth=\"6\"\r\n              markerHeight=\"4\"\r\n              refX=\"5\"\r\n              refY=\"2\"\r\n              orient=\"auto\"\r\n              markerUnits=\"strokeWidth\"\r\n            >\r\n              <path d={`M 2 0 L 2 4 L 6 2 Z`}></path>\r\n            </marker>\r\n          </defs>\r\n          <line\r\n            x1={x_1}\r\n            y1={y_1}\r\n            x2={x_2}\r\n            y2={y_2}\r\n            stroke=\"black\"\r\n            strokeWidth=\"5px\"\r\n            markerEnd=\"url(#markerArrow1)\"\r\n          >\r\n            <animate\r\n              id={`edge ${x_1} ${y_1} ${x_2} ${y_2} 1`}\r\n              attributeName=\"x2\"\r\n              from={`${x_1}`}\r\n              to={`${x_2}`}\r\n              begin=\"indefinite\"\r\n              dur=\"0.15s\"\r\n              repeatCount=\"1\"\r\n              restart=\"whenNotActive\"\r\n            />\r\n            <animate\r\n              id={`edge ${x_1} ${y_1} ${x_2} ${y_2} 2`}\r\n              attributeName=\"y2\"\r\n              from={`${y_1}`}\r\n              to={`${y_2}`}\r\n              begin=\"indefinite\"\r\n              dur=\"0.15s\"\r\n              repeatCount=\"1\"\r\n              restart=\"whenNotActive\"\r\n            />\r\n          </line>\r\n\r\n          <text className=\"lcs_text \" x={(x_1 + x_2) / 2} y={(y_1 + y_2) / 2}>\r\n            {value}\r\n          </text>\r\n        </g>\r\n      );\r\n    } else {\r\n      return (\r\n        <g>\r\n          <defs>\r\n            <marker\r\n              id=\"markerArrow1\"\r\n              markerWidth=\"6\"\r\n              markerHeight=\"4\"\r\n              refX=\"5\"\r\n              refY=\"2\"\r\n              orient=\"auto\"\r\n              markerUnits=\"strokeWidth\"\r\n            >\r\n              <path d={`M 2 0 L 2 4 L 6 2 Z`}></path>\r\n            </marker>\r\n          </defs>\r\n          <line\r\n            x1={x_1}\r\n            y1={y_1}\r\n            x2={x_2}\r\n            y2={y_2}\r\n            stroke=\"black\"\r\n            strokeWidth=\"5px\"\r\n            markerEnd=\"url(#markerArrow1)\"\r\n          >\r\n            <animate\r\n              id={`edge ${x_1} ${y_1} ${x_2} ${y_2} 1`}\r\n              attributeName=\"x2\"\r\n              from={`${x_1}`}\r\n              to={`${x_2}`}\r\n              begin=\"indefinte\"\r\n              dur=\"0.15s\"\r\n              repeatCount=\"1\"\r\n              restart=\"whenNotActive\"\r\n            />\r\n            <animate\r\n              id={`edge ${x_1} ${y_1} ${x_2} ${y_2} 2`}\r\n              attributeName=\"y2\"\r\n              from={`${y_1}`}\r\n              to={`${y_2}`}\r\n              begin=\"indefinite\"\r\n              dur=\"0.15s\"\r\n              repeatCount=\"1\"\r\n              restart=\"whenNotActive\"\r\n            />\r\n          </line>\r\n        </g>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default LCSEdges;\r\n","import React, { Component } from \"react\";\r\nimport LCSTree from \"./LCS_tree\";\r\nimport LCSEdges from \"./lcs_edges\";\r\nlet treearray = [];\r\nlet treeEdge = [];\r\nlet fullrec = [];\r\nlet str1 = \"\";\r\nlet str2 = \"\";\r\nlet timeout_array = [];\r\n\r\nlet parent = node(0, 0);\r\nlet x_place = 0;\r\nlet y_place = 0;\r\n\r\nfunction node(i, j) {\r\n  return {\r\n    parent: null,\r\n    id: `${i}-${j}`,\r\n    x: 0,\r\n    y: 0,\r\n    left: null,\r\n    right: null,\r\n    str1_idx: i,\r\n    str2_idx: j,\r\n    value: `${i},${j}`,\r\n    mod: 0,\r\n    thread: null,\r\n    returned_value: -1,\r\n    calculated: 0,\r\n  };\r\n}\r\n\r\nfunction edge(parent, child) {\r\n  let slope = 0;\r\n  if (parent && child) {\r\n    slope =\r\n      (parent.y * 150 + 50 - (child.y * 150 + 50)) /\r\n      (parent.x * 45 + 50 - (child.x * 45 + 50));\r\n    if (parent.left == child || parent.right == child) {\r\n      /* parent to child*/\r\n\r\n      if (parent.x != child.x && parent.left === child) {\r\n        let temp_x2 = 44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = -35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (-35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      } else if (parent.x != child.x && parent.right === child) {\r\n        let temp_x2 = -44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (-44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = 35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      } else {\r\n        return {\r\n          id: `${parent.x * 45 + 50} ${parent.y * 150 + 50 + 35} ${\r\n            child.x * 45 + 50\r\n          } ${child.y * 150 + 50 - 44}`,\r\n          x1: parent.x * 45 + 50,\r\n          y1: parent.y * 150 + 50 + 35,\r\n          x2: child.x * 45 + 50,\r\n          y2: child.y * 150 + 50 - 44,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      }\r\n    } else {\r\n      /* child to parent*/\r\n\r\n      if (parent.x != child.x && child.left === parent) {\r\n        let temp_x2 = -44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (-44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = 35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      } else if (parent.x != child.x && child.right === parent) {\r\n        let temp_x2 = 44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = -35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (-35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      } else {\r\n        return {\r\n          id: `${parent.x * 45 + 50} ${parent.y * 150 + 50 + 35} ${\r\n            child.x * 45 + 50\r\n          } ${child.y * 150 + 50 - 44}`,\r\n          x1: parent.x * 45 + 50,\r\n          y1: parent.y * 150 + 50 - 35,\r\n          x2: child.x * 45 + 50,\r\n          y2: child.y * 150 + 50 + 44,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction fn(i, j, treenode, dp) {\r\n  fullrec.push(treenode);\r\n  if (i == str1.length || j == str2.length) {\r\n    treenode.returned_value = 0;\r\n    fullrec.push(treenode.parent);\r\n    return 0;\r\n  }\r\n  /*----------------------------------Memory remover---------------------------------------------*/\r\n  if (dp[i][j] != -1) {\r\n    fullrec.push(treenode.parent);\r\n    treenode.returned_value = dp[i][j];\r\n    treenode.calculated = 1;\r\n    return dp[i][j];\r\n  }\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  if (str1[i] == str2[j]) {\r\n    treenode.left = node(i + 1, j + 1);\r\n    treenode.left.parent = treenode;\r\n    treenode.returned_value = 1 + fn(i + 1, j + 1, treenode.left, dp);\r\n    dp[i][j] = treenode.returned_value;\r\n    let temp = treenode.returned_value;\r\n    fullrec.push(treenode.parent);\r\n    return temp;\r\n  }\r\n  treenode.left = node(i, j + 1);\r\n  treenode.left.parent = treenode;\r\n  treenode.right = node(i + 1, j);\r\n  treenode.right.parent = treenode;\r\n  let temp1 = fn(i, j + 1, treenode.left, dp);\r\n  let temp2 = fn(i + 1, j, treenode.right, dp);\r\n  let temp = Math.max(temp1, temp2);\r\n  treenode.returned_value = temp;\r\n  dp[i][j] = treenode.returned_value;\r\n  if (treenode.parent) fullrec.push(treenode.parent);\r\n  return temp;\r\n}\r\n\r\nfunction traverse(xx, yy, treenode) {\r\n  let temp = document.getElementById(\"string_1\").value;\r\n  str1 = temp;\r\n  temp = document.getElementById(\"string_2\").value;\r\n  str2 = temp;\r\n  let dp = new Array(str1.length)\r\n    .fill(-1)\r\n    .map(() => new Array(str2.length).fill(-1));\r\n  let x = fn(xx, yy, treenode, dp);\r\n  //  traversetree(parent);\r\n}\r\n/*-------------------------------------------------------------------------------------------------------*/\r\n\r\nclass LCS extends Component {\r\n  state = {};\r\n  nextright(tree) {\r\n    if (tree.thread) {\r\n      return tree.thread;\r\n    }\r\n    if (tree.left || tree.right) {\r\n      if (tree.right) {\r\n        return tree.right;\r\n      } else {\r\n        return tree.left;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  nextleft(tree) {\r\n    if (tree.thread) {\r\n      return tree.thread;\r\n    }\r\n    if (tree.left || tree.right) {\r\n      if (tree.left) {\r\n        return tree.left;\r\n      } else {\r\n        return tree.right;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  addmod(tree, modsum = 0) {\r\n    tree.x = tree.x + modsum;\r\n    x_place = Math.max(x_place, tree.x);\r\n    y_place = Math.max(y_place, tree.y);\r\n    if (tree.left) {\r\n      this.addmod(tree.left, modsum + tree.mod);\r\n    }\r\n    if (tree.right) {\r\n      this.addmod(tree.right, modsum + tree.mod);\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  layout(tree) {\r\n    return this.addmod(this.setup(tree, 0), 0);\r\n  }\r\n\r\n  setup(tree, depth) {\r\n    if (tree.left == null && tree.right == null) {\r\n      tree.x = 0;\r\n      tree.y = depth;\r\n\r\n      return tree;\r\n    }\r\n    if (tree.left == null && tree.right != null) {\r\n      let temp_tree = this.setup(tree.right, depth + 1);\r\n      tree.x = temp_tree.x;\r\n      tree.y = temp_tree.y - 1;\r\n\r\n      return tree;\r\n    }\r\n    if (tree.right == null && tree.left != null) {\r\n      let temp_tree = this.setup(tree.left, depth + 1);\r\n      tree.x = temp_tree.x;\r\n      tree.y = temp_tree.y - 1;\r\n\r\n      return tree;\r\n    }\r\n    let left_tree = this.setup(tree.left, depth + 1);\r\n    let right_tree = this.setup(tree.right, depth + 1);\r\n\r\n    tree.x = this.fix_subtrees(left_tree, right_tree);\r\n    tree.y = left_tree.y - 1;\r\n\r\n    return tree;\r\n  }\r\n\r\n  fix_subtrees(left_tree, right_tree) {\r\n    let hope = this.contour(left_tree, right_tree, null, 0, 0, null, null);\r\n    let li = hope.li;\r\n    let ri = hope.ri;\r\n    let diff = hope.maxoffset;\r\n    let loffset = hope.loffset;\r\n    let roffset = hope.roffset;\r\n    let lo = hope.left_outer;\r\n    let ro = hope.right_outer;\r\n\r\n    diff += 1;\r\n\r\n    right_tree.mod += diff;\r\n\r\n    right_tree.x += diff;\r\n\r\n    if (right_tree.left || right_tree.right) {\r\n      roffset += diff;\r\n    }\r\n    if (ri && !li) {\r\n      lo.thread = ri;\r\n      lo.mod = roffset - loffset;\r\n    } else if (li && !ri) {\r\n      ro.thread = li;\r\n      ro.mod = loffset - roffset;\r\n    }\r\n    return (left_tree.x + right_tree.x) / 2;\r\n  }\r\n\r\n  contour(\r\n    left_tree,\r\n    right_tree,\r\n    maxoffset,\r\n    loffset,\r\n    roffset,\r\n    left_outer = null,\r\n    right_outer = null\r\n  ) {\r\n    let delta = left_tree.x + loffset - (right_tree.x + roffset) + 1;\r\n    if (!maxoffset || delta > maxoffset) {\r\n      maxoffset = delta;\r\n    }\r\n    if (!left_outer) {\r\n      left_outer = left_tree;\r\n    }\r\n    if (!right_outer) {\r\n      right_outer = right_tree;\r\n    }\r\n    let lo = this.nextleft(left_outer || left_tree);\r\n    let li = this.nextright(left_tree || left_outer);\r\n    let ri = this.nextleft(right_tree || right_outer);\r\n    let ro = this.nextright(right_outer || right_tree);\r\n\r\n    if (li && ri) {\r\n      loffset += left_tree.mod;\r\n      roffset += right_tree.mod;\r\n      return this.contour(li, ri, maxoffset, loffset, roffset, lo, ro);\r\n    }\r\n\r\n    return { li, ri, maxoffset, loffset, roffset, left_outer, right_outer };\r\n  }\r\n\r\n  clearScreen() {\r\n    for (let i = 0; i < timeout_array.length; i++) {\r\n      clearTimeout(timeout_array[i]);\r\n    }\r\n    timeout_array = [];\r\n    treearray = [];\r\n    treeEdge = [];\r\n    fullrec = [];\r\n    x_place = 0;\r\n    y_place = 0;\r\n    parent = node(0, 0);\r\n    this.setState({ nodes: treearray });\r\n    this.setState({ edges: treeEdge });\r\n  }\r\n\r\n  animate() {\r\n    for (let i = 0; i < fullrec.length - 1; i++) {\r\n      let time1 = setTimeout(() => {\r\n        treearray.push(fullrec[i]);\r\n        this.setState({ nodes: treearray });\r\n      }, 250 * i);\r\n      timeout_array.push(time1);\r\n      time1 = setTimeout(() => {\r\n        if (fullrec[i + 1]) {\r\n          let edge_new = edge(fullrec[i], fullrec[i + 1]);\r\n          let temp_id = edge(fullrec[i + 1], fullrec[i]).id;\r\n          let index = -1;\r\n          for (let j = 0; j < treeEdge.length; j++) {\r\n            if (treeEdge[j].id == temp_id) {\r\n              index = j;\r\n              break;\r\n            }\r\n          }\r\n          edge_new.time = i + 2;\r\n          if (index == -1) {\r\n            treeEdge.push(edge_new);\r\n            this.setState({ edges: treeEdge });\r\n            let icon1 = document.getElementById(\r\n              `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 1`\r\n            );\r\n            let icon2 = document.getElementById(\r\n              `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 2`\r\n            );\r\n            if (icon1) icon1.beginElement();\r\n            if (icon2) icon2.beginElement();\r\n          } else {\r\n            treeEdge.splice(index, 1);\r\n            treeEdge.push(edge_new);\r\n            this.setState({ edges: treeEdge });\r\n            let icon1 = document.getElementById(\r\n              `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 1`\r\n            );\r\n            let icon2 = document.getElementById(\r\n              `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 2`\r\n            );\r\n            if (icon1) icon1.beginElement();\r\n            if (icon2) icon2.beginElement();\r\n          }\r\n        }\r\n      }, 250 * i + 50);\r\n      timeout_array.push(time1);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.clearScreen();\r\n  }\r\n\r\n  help() {\r\n    this.clearScreen();\r\n    traverse(0, 0, parent);\r\n    this.layout(parent);\r\n    this.animate();\r\n  }\r\n\r\n  render() {\r\n    const { nodes = [], edges = [] } = this.state;\r\n\r\n    return (\r\n      <div className=\"parent_div\">\r\n        <div className=\"menu\">\r\n          <div>\r\n            <input\r\n              id=\"string_1\"\r\n              className=\"input_lcs font_input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"String 1\"\r\n              spellCheck={false}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"string_2\"\r\n              className=\"input_lcs font_input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"String 2\"\r\n              spellCheck={false}\r\n            />\r\n          </div>\r\n          <div>\r\n            <button className=\"lcs-visual\" onClick={() => this.help()}>\r\n              Visualize\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"hope\">\r\n          <div className=\"padding_style\">\r\n            <svg\r\n              className=\"svg\"\r\n              viewBox={`0 0 ${x_place * 45 + 100} ${y_place * 150 + 100}`}\r\n            >\r\n              {nodes.map((node, nodeidx) => {\r\n                const {\r\n                  parent,\r\n                  id,\r\n                  x,\r\n                  y,\r\n                  left,\r\n                  right,\r\n                  str1_idx,\r\n                  str2_idx,\r\n                  value,\r\n                  mod,\r\n                  thread,\r\n                  calculated,\r\n                } = node;\r\n                return (\r\n                  <LCSTree\r\n                    key={nodeidx}\r\n                    parent={parent}\r\n                    id={id}\r\n                    x={x}\r\n                    y={y}\r\n                    left={left}\r\n                    right={right}\r\n                    str1_idx={str1_idx}\r\n                    str2_idx={str2_idx}\r\n                    value={value}\r\n                    mod={mod}\r\n                    thread={thread}\r\n                    calculated={calculated}\r\n                  >\r\n                    {value}\r\n                  </LCSTree>\r\n                );\r\n              })}\r\n\r\n              {edges.map((edge, edgeidx) => {\r\n                const { x1, y1, x2, y2, value, time } = edge;\r\n                return (\r\n                  <LCSEdges\r\n                    key={edgeidx}\r\n                    x_1={x1}\r\n                    y_1={y1}\r\n                    x_2={x2}\r\n                    y_2={y2}\r\n                    value={value}\r\n                    time={time}\r\n                  ></LCSEdges>\r\n                );\r\n              })}\r\n            </svg>\r\n          </div>\r\n          <div className=\"footer\">made by yatharth katyayan</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LCS;\r\n","import React, { Component } from \"react\";\r\nclass LIS_array extends Component {\r\n  state = {};\r\n  render() {\r\n    const { value, x1, y1, font, incheck = false } = this.props;\r\n    let b_color = \"white\";\r\n    if (incheck) {\r\n      b_color = \"yellow\";\r\n    } else {\r\n      b_color = \"white\";\r\n    }\r\n    return (\r\n      <g>\r\n        <rect\r\n          width=\"75\"\r\n          height=\"75\"\r\n          fill={b_color}\r\n          stroke=\"black\"\r\n          strokeWidth=\"4px\"\r\n          y={y1}\r\n          x={x1}\r\n        ></rect>\r\n        <text\r\n          x={x1 + 35}\r\n          y={y1 + 35}\r\n          className=\"LISdata\"\r\n          fontSize={`${font}px`}\r\n        >\r\n          {value}\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LIS_array;\r\n","import React, { Component } from \"react\";\r\nclass LIScurve extends Component {\r\n  state = {};\r\n  render() {\r\n    const { curve = \"\", midpx, midpy, font, check } = this.props;\r\n\r\n    let comp = \"\";\r\n    if (check == 0) {\r\n      comp = \"=\";\r\n    } else if (check == 1) {\r\n      comp = \"<\";\r\n    } else {\r\n      comp = \">\";\r\n    }\r\n    return (\r\n      <g>\r\n        <path\r\n          d={curve}\r\n          stroke=\"black\"\r\n          strokeWidth=\"1px\"\r\n          strokeWidth=\"4px\"\r\n          fill=\"transparent\"\r\n        ></path>\r\n        <text\r\n          x={midpx}\r\n          y={midpy}\r\n          fontSize={`${font}px`}\r\n          stroke=\"black\"\r\n          strokeWidth=\"1px\"\r\n          className=\"LISdata\"\r\n        >\r\n          {comp}\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LIScurve;\r\n","import React, { Component } from \"react\";\r\nimport LIS_array from \"./LIS_array\";\r\nimport \"../../App.css\";\r\nimport LIScurve from \"./LIS_SVG\";\r\n\r\nlet numbers = [];\r\nlet timeout_array = [];\r\nlet font_size = 0;\r\nclass LIS extends Component {\r\n  state = {};\r\n\r\n  setArray(n) {\r\n    let DP_array = new Array(n);\r\n    for (let i = 0; i < n; i++) {\r\n      DP_array[i] = this.createobj(null);\r\n    }\r\n    return DP_array;\r\n  }\r\n\r\n  curveSetter(i, j) {\r\n    let p1x = i * 75 + 35 + 40;\r\n    let p1y = numbers.length * 25 - 15 + 75;\r\n    let p2x = j * 75 + 35 + 40;\r\n    let p2y = p1y;\r\n\r\n    let midpx = (p2x + p1x) * 0.5;\r\n    let midpy = (p2y + p1y) * 0.5;\r\n\r\n    let theta = Math.atan2(p2y - p1y, p2x - p1x) - Math.PI / 2;\r\n    let offset = 60;\r\n\r\n    let c1x = midpx + offset * Math.cos(theta);\r\n    let c1y = midpy + offset * Math.sin(theta);\r\n    //  let curve = `M${p1x} ${p1y} Q ${c1x} ${c1y} ${p2x} ${p2y}`;\r\n    let curve =\r\n      \"M\" + p1x + \" \" + p1y + \" Q \" + c1x + \" \" + c1y + \" \" + p2x + \" \" + p2y;\r\n    let comp = 0;\r\n    if (numbers[i].value > numbers[j].value) {\r\n      comp = 1;\r\n    } else if (numbers[i].value < numbers[j].value) {\r\n      comp = -1;\r\n    }\r\n    return { curve: curve, midpx: c1x, midpy: c1y, comp: comp };\r\n  }\r\n\r\n  lis(arr, n, DP_array) {\r\n    if (n) {\r\n      let count = 0;\r\n      let dp = new Array(n);\r\n      DP_array[0].value = 1;\r\n      dp[0] = 1;\r\n      let temp_curve_array = [];\r\n      for (let i = 1; i < n; i++) {\r\n        let maxval = 0;\r\n\r\n        let time1 = setTimeout(() => {\r\n          numbers[i].incheck = true;\r\n          this.setState({ numbers_array: numbers });\r\n        }, 1000 * count + 500);\r\n        timeout_array.push(time1);\r\n        for (let j = 0; j < i; j++) {\r\n          count++;\r\n\r\n          time1 = setTimeout(() => {\r\n            numbers[j].incheck = true;\r\n            this.setState({ numbers_array: numbers });\r\n            DP_array[j].incheck = true;\r\n            this.setState({ dp_array: DP_array });\r\n            let curve_obj = this.curveSetter(i, j);\r\n\r\n            temp_curve_array.push(curve_obj);\r\n            this.setState({ svg_array: temp_curve_array });\r\n          }, count * 1000);\r\n          timeout_array.push(time1);\r\n          time1 = setTimeout(() => {\r\n            numbers[j].incheck = false;\r\n            this.setState({ numbers_array: numbers });\r\n            DP_array[j].incheck = false;\r\n            this.setState({ dp_array: DP_array });\r\n            temp_curve_array.pop();\r\n            this.setState({ svg_array: temp_curve_array });\r\n          }, count * 1000 + 500);\r\n          timeout_array.push(time1);\r\n          if (arr[i].value > arr[j].value) {\r\n            maxval = Math.max(maxval, dp[j]);\r\n          }\r\n        }\r\n\r\n        dp[i] = maxval + 1;\r\n        time1 = setTimeout(() => {\r\n          DP_array[i].value = dp[i];\r\n          this.setState({ dp_array: DP_array });\r\n          numbers[i].incheck = false;\r\n          this.setState({ numbers_array: numbers });\r\n        }, count * 1000 + 500);\r\n        timeout_array.push(time1);\r\n      }\r\n      return DP_array;\r\n    }\r\n  }\r\n\r\n  createobj(value) {\r\n    return {\r\n      value: value,\r\n      incheck: false,\r\n    };\r\n  }\r\n\r\n  takeValues() {\r\n    let val = document.getElementById(\"Input_1\").value;\r\n    let number_pattern = /-?\\d*\\.{0,1}\\d+/g;\r\n    let maximum = -100000000;\r\n    numbers = val.match(number_pattern);\r\n    if (numbers) {\r\n      for (let i = 0; i < numbers.length; i++) {\r\n        numbers[i] = parseInt(numbers[i], 10);\r\n        if (numbers[i] > maximum) {\r\n          maximum = numbers[i];\r\n        }\r\n      }\r\n      for (let i = 0; i < numbers.length; i++) {\r\n        numbers[i] = this.createobj(numbers[i]);\r\n      }\r\n    }\r\n\r\n    font_size = 0;\r\n\r\n    while (maximum >= 1) {\r\n      font_size += 1;\r\n      maximum = maximum / 10;\r\n    }\r\n\r\n    if (font_size <= 3) {\r\n      font_size = 40;\r\n    } else if (font_size > 3 && font_size <= 4) {\r\n      font_size = 30;\r\n    } else if (font_size > 4 && font_size <= 7) {\r\n      font_size = 20;\r\n    } else if (font_size > 7 && font_size <= 9) {\r\n      font_size = 15;\r\n    } else {\r\n      font_size = 10;\r\n    }\r\n  }\r\n\r\n  clearScreen() {\r\n    numbers = [];\r\n    this.setState({ numbers_array: numbers });\r\n    font_size = 0;\r\n    this.setState({ dp_array: [] });\r\n    this.setState({ svg_array: [] });\r\n    for (let i = 0; i < timeout_array.length; i++) {\r\n      clearTimeout(timeout_array[i]);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.clearScreen();\r\n  }\r\n  visualize() {\r\n    this.clearScreen();\r\n    this.takeValues();\r\n\r\n    if (numbers) {\r\n      let dp = this.setArray(numbers.length);\r\n      this.setState({ dp_array: dp });\r\n      this.setState({ numbers_array: numbers });\r\n      let x = this.lis(numbers, numbers.length, dp);\r\n      this.setState({ dp_array: dp });\r\n    }\r\n  }\r\n  render() {\r\n    const { numbers_array = [], dp_array = [], svg_array = [] } = this.state;\r\n    return (\r\n      <div className=\"parent_div\">\r\n        <div className=\"menu\">\r\n          <div>\r\n            <input\r\n              id=\"Input_1\"\r\n              className=\"input_lcs font_input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"Input Array here\"\r\n              spellCheck={false}\r\n            />\r\n          </div>\r\n          <div>\r\n            <button className=\"lcs-visual\" onClick={() => this.visualize()}>\r\n              Visualize\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"hope\">\r\n          <div className=\"padding_style\">\r\n            <svg\r\n              className=\"svg\"\r\n              viewBox={`0 0 ${numbers.length * 75 + 100} ${\r\n                numbers.length * 75 + 200\r\n              }`}\r\n            >\r\n              <text\r\n                id=\"input_text\"\r\n                x=\"0\"\r\n                y={numbers_array.length * 20 + 35}\r\n                className=\"remove\"\r\n              >\r\n                INPUT\r\n              </text>\r\n              {numbers_array.map((node, nodeidx) => {\r\n                const { value, incheck } = node;\r\n                return (\r\n                  <LIS_array\r\n                    key={nodeidx}\r\n                    value={value}\r\n                    x1={nodeidx * 75 + 40}\r\n                    incheck={incheck}\r\n                    y1={numbers_array.length * 25 - 15}\r\n                    font={font_size}\r\n                  ></LIS_array>\r\n                );\r\n              })}\r\n              {dp_array.map((node, nodeidx) => {\r\n                const { value, incheck } = node;\r\n                return (\r\n                  <LIS_array\r\n                    key={nodeidx}\r\n                    incheck={incheck}\r\n                    value={value}\r\n                    x1={nodeidx * 75 + 40}\r\n                    y1={numbers.length * 65 + 100}\r\n                    font={font_size}\r\n                  ></LIS_array>\r\n                );\r\n              })}\r\n              {svg_array.map((node, nodeidx) => {\r\n                const { curve, midpx, midpy, comp } = node;\r\n                return (\r\n                  <LIScurve\r\n                    key={nodeidx}\r\n                    midpx={midpx}\r\n                    midpy={midpy}\r\n                    curve={curve}\r\n                    font={font_size}\r\n                    check={comp}\r\n                  ></LIScurve>\r\n                );\r\n              })}\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LIS;\r\n","import React, { Component } from \"react\";\r\n/* <link\r\n  href=\"https://fonts.googleapis.com/css2?family=Euphoria+Script&display=swap\"\r\n  rel=\"stylesheet\"\r\n></link>; */\r\nclass homepage extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"homepage_screen\">\r\n        <svg viewBox={`0 0 1000 500`} className=\"\">\r\n          <g className=\" home_animation\">\r\n            <text x={300} y={200}>\r\n              D\r\n            </text>\r\n            <text x={350} y={200}>\r\n              Y\r\n            </text>\r\n            <text x={400} y={200}>\r\n              N\r\n            </text>\r\n            <text x={450} y={200}>\r\n              A\r\n            </text>\r\n            <text x={500} y={200}>\r\n              M\r\n            </text>\r\n            <text x={550} y={200}>\r\n              I\r\n            </text>\r\n            <text x={600} y={200}>\r\n              C\r\n            </text>\r\n          </g>\r\n          <g className=\" home_animation\">\r\n            <text x={200} y={280}>\r\n              P\r\n            </text>\r\n            <text x={250} y={280}>\r\n              R\r\n            </text>\r\n            <text x={300} y={280}>\r\n              O\r\n            </text>\r\n            <text x={350} y={280}>\r\n              G\r\n            </text>\r\n            <text x={400} y={280}>\r\n              R\r\n            </text>\r\n            <text x={450} y={280}>\r\n              A\r\n            </text>\r\n            <text x={500} y={280}>\r\n              M\r\n            </text>\r\n            <text x={550} y={280}>\r\n              M\r\n            </text>\r\n            <text x={600} y={280}>\r\n              I\r\n            </text>\r\n            <text x={650} y={280}>\r\n              N\r\n            </text>\r\n            <text x={700} y={280}>\r\n              G\r\n            </text>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default homepage;\r\n","import React, { Component } from \"react\";\r\nclass DpInfo extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>please wait I am working on it</h1>;\r\n  }\r\n}\r\n\r\nexport default DpInfo;\r\n","import React, { Component } from \"react\";\r\nclass ContactUs extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>contact us</h1>;\r\n  }\r\n}\r\n\r\nexport default ContactUs;\r\n","import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\n\r\nclass EDTree extends Component {\r\n  state = {};\r\n  render() {\r\n    const {\r\n      parent,\r\n      str1_idx,\r\n      str2_idx,\r\n      id,\r\n      x,\r\n      y,\r\n      left,\r\n      right,\r\n      middle,\r\n      value,\r\n      mod,\r\n      thread,\r\n      returned_value,\r\n      calculated,\r\n    } = this.props;\r\n    let color_back = \"white\";\r\n    let color_text = \"black\";\r\n    if (calculated) {\r\n      color_back = \"black\";\r\n      color_text = \"white\";\r\n    }\r\n    return (\r\n      <g>\r\n        <circle\r\n          cx={x * 45 + 50}\r\n          cy={y * 150 + 50}\r\n          r=\"35\"\r\n          fill={color_back}\r\n          stroke=\"black\"\r\n          strokeWidth=\"5px\"\r\n          parent={parent}\r\n          id={id}\r\n          x={x}\r\n          y={y}\r\n          left={left}\r\n          right={right}\r\n          middle={middle}\r\n          str1_idx={str1_idx}\r\n          str2_idx={str2_idx}\r\n          value={value}\r\n          mod={mod}\r\n          thread={thread}\r\n          returned_value={returned_value}\r\n          calculated={calculated}\r\n        ></circle>\r\n        <text\r\n          x={x * 45 + 50}\r\n          y={y * 150 + 50}\r\n          fill={color_text}\r\n          className=\"treedata\"\r\n        >\r\n          {value}\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EDTree;\r\n","import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\n\r\nclass EDEdges extends Component {\r\n  state = {};\r\n  render() {\r\n    const { x_1, y_1, x_2, y_2, value = -1, time } = this.props;\r\n\r\n    if (value != -1) {\r\n      return (\r\n        <g>\r\n          <defs>\r\n            <marker\r\n              id=\"markerArrow1\"\r\n              markerWidth=\"6\"\r\n              markerHeight=\"4\"\r\n              refX=\"5\"\r\n              refY=\"2\"\r\n              orient=\"auto\"\r\n              markerUnits=\"strokeWidth\"\r\n            >\r\n              <path d={`M 2 0 L 2 4 L 6 2 Z`}></path>\r\n            </marker>\r\n          </defs>\r\n          <line\r\n            x1={x_1}\r\n            y1={y_1}\r\n            x2={x_2}\r\n            y2={y_2}\r\n            stroke=\"black\"\r\n            strokeWidth=\"5px\"\r\n            markerEnd=\"url(#markerArrow1)\"\r\n          >\r\n            <animate\r\n              id={`edge ${x_1} ${y_1} ${x_2} ${y_2} 1`}\r\n              attributeName=\"x2\"\r\n              from={`${x_1}`}\r\n              to={`${x_2}`}\r\n              begin=\"indefinite\"\r\n              dur=\"0.15s\"\r\n              repeatCount=\"1\"\r\n              restart=\"whenNotActive\"\r\n            />\r\n            <animate\r\n              id={`edge ${x_1} ${y_1} ${x_2} ${y_2} 2`}\r\n              attributeName=\"y2\"\r\n              from={`${y_1}`}\r\n              to={`${y_2}`}\r\n              begin=\"indefinite\"\r\n              dur=\"0.15s\"\r\n              repeatCount=\"1\"\r\n              restart=\"whenNotActive\"\r\n            />\r\n          </line>\r\n\r\n          <text className=\"lcs_text \" x={(x_1 + x_2) / 2} y={(y_1 + y_2) / 2}>\r\n            {value}\r\n          </text>\r\n        </g>\r\n      );\r\n    } else {\r\n      return (\r\n        <g>\r\n          <defs>\r\n            <marker\r\n              id=\"markerArrow1\"\r\n              markerWidth=\"6\"\r\n              markerHeight=\"4\"\r\n              refX=\"5\"\r\n              refY=\"2\"\r\n              orient=\"auto\"\r\n              markerUnits=\"strokeWidth\"\r\n            >\r\n              <path d={`M 2 0 L 2 4 L 6 2 Z`}></path>\r\n            </marker>\r\n          </defs>\r\n          <line\r\n            x1={x_1}\r\n            y1={y_1}\r\n            x2={x_2}\r\n            y2={y_2}\r\n            stroke=\"black\"\r\n            strokeWidth=\"5px\"\r\n            markerEnd=\"url(#markerArrow1)\"\r\n          >\r\n            <animate\r\n              id={`edge ${x_1} ${y_1} ${x_2} ${y_2} 1`}\r\n              attributeName=\"x2\"\r\n              from={`${x_1}`}\r\n              to={`${x_2}`}\r\n              begin=\"indefinte\"\r\n              dur=\"0.15s\"\r\n              repeatCount=\"1\"\r\n              restart=\"whenNotActive\"\r\n            />\r\n            <animate\r\n              id={`edge ${x_1} ${y_1} ${x_2} ${y_2} 2`}\r\n              attributeName=\"y2\"\r\n              from={`${y_1}`}\r\n              to={`${y_2}`}\r\n              begin=\"indefinite\"\r\n              dur=\"0.15s\"\r\n              repeatCount=\"1\"\r\n              restart=\"whenNotActive\"\r\n            />\r\n          </line>\r\n        </g>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default EDEdges;\r\n","import React, { Component } from \"react\";\r\nimport EDTree from \"./ED_tree\";\r\nimport EDEdges from \"./ED_edges\";\r\n\r\nlet treearray = [];\r\nlet treeEdge = [];\r\nlet fullrec = [];\r\nlet str1 = \"\";\r\nlet str2 = \"\";\r\nlet timeout_array = [];\r\nlet pos = 10;\r\n\r\nlet x_place = 0;\r\nlet y_place = 0;\r\n\r\nfunction node(i, j) {\r\n  return {\r\n    parent: null,\r\n    id: `${i}-${j}`,\r\n    x: 0,\r\n    y: 0,\r\n    left: null,\r\n    right: null,\r\n    middle: null,\r\n    str1_idx: i,\r\n    str2_idx: j,\r\n    value: `${i},${j}`,\r\n    mod: 0,\r\n    thread: null,\r\n    returned_value: -1,\r\n    calculated: 0,\r\n  };\r\n}\r\n\r\nfunction edge(parent, child) {\r\n  let slope = 0;\r\n  if (parent && child) {\r\n    slope =\r\n      (parent.y * 150 + 50 - (child.y * 150 + 50)) /\r\n      (parent.x * 45 + 50 - (child.x * 45 + 50));\r\n    if (\r\n      parent.left == child ||\r\n      parent.right == child ||\r\n      parent.middle == child\r\n    ) {\r\n      /* parent to child*/\r\n\r\n      if (\r\n        parent.x > child.x &&\r\n        (parent.left === child || parent.middle === child)\r\n      ) {\r\n        let temp_x2 = 44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = -35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (-35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      } else if (\r\n        parent.x < child.x &&\r\n        (parent.right === child || parent.middle === child)\r\n      ) {\r\n        let temp_x2 = -44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (-44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = 35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      } else if (parent.x == child.x) {\r\n        return {\r\n          id: `${parent.x * 45 + 50} ${parent.y * 150 + 50 + 35} ${\r\n            child.x * 45 + 50\r\n          } ${child.y * 150 + 50 - 44}`,\r\n          x1: parent.x * 45 + 50,\r\n          y1: parent.y * 150 + 50 + 35,\r\n          x2: child.x * 45 + 50,\r\n          y2: child.y * 150 + 50 - 44,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      }\r\n    } else {\r\n      /* child to parent*/\r\n\r\n      if (\r\n        parent.x < child.x &&\r\n        (child.left === parent || child.middle === parent)\r\n      ) {\r\n        let temp_x2 = -44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (-44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = 35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      } else if (\r\n        parent.x > child.x &&\r\n        (child.right === parent || child.middle === parent)\r\n      ) {\r\n        let temp_x2 = 44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = -35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (-35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      } else if (parent.x == child.x) {\r\n        return {\r\n          id: `${parent.x * 45 + 50} ${parent.y * 150 + 50 + 35} ${\r\n            child.x * 45 + 50\r\n          } ${child.y * 150 + 50 - 44}`,\r\n          x1: parent.x * 45 + 50,\r\n          y1: parent.y * 150 + 50 - 35,\r\n          x2: child.x * 45 + 50,\r\n          y2: child.y * 150 + 50 + 44,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction fn(i, j, treenode, dp) {\r\n  fullrec.push(treenode);\r\n  if (i == 0) {\r\n    treenode.returned_value = j;\r\n    fullrec.push(treenode.parent);\r\n    return j;\r\n  }\r\n  if (j == 0) {\r\n    treenode.returned_value = i;\r\n    fullrec.push(treenode.parent);\r\n    return i;\r\n  }\r\n  /*----------------------------------Memory remover---------------------------------------------*/\r\n  if (dp[i - 1][j - 1] != -1) {\r\n    fullrec.push(treenode.parent);\r\n    treenode.returned_value = dp[i - 1][j - 1];\r\n    treenode.calculated = 1;\r\n    return dp[i - 1][j - 1];\r\n  }\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  if (str1[i - 1] == str2[j - 1]) {\r\n    treenode.left = node(i - 1, j - 1);\r\n    treenode.left.parent = treenode;\r\n    treenode.returned_value = fn(i - 1, j - 1, treenode.left, dp);\r\n    dp[i - 1][j - 1] = treenode.returned_value;\r\n    let temp = treenode.returned_value;\r\n    fullrec.push(treenode.parent);\r\n    return temp;\r\n  }\r\n  treenode.left = node(i, j - 1);\r\n  treenode.left.parent = treenode;\r\n  treenode.middle = node(i - 1, j);\r\n  treenode.middle.parent = treenode;\r\n  treenode.right = node(i - 1, j - 1);\r\n  treenode.right.parent = treenode;\r\n  let temp1 = fn(i, j - 1, treenode.left, dp);\r\n  let temp2 = fn(i - 1, j, treenode.middle, dp);\r\n  let temp3 = fn(i - 1, j - 1, treenode.right, dp);\r\n  let temp = 1 + Math.min(Math.min(temp1, temp2), temp3);\r\n  treenode.returned_value = temp;\r\n  dp[i - 1][j - 1] = treenode.returned_value;\r\n  if (treenode.parent) fullrec.push(treenode.parent);\r\n  return temp;\r\n}\r\n\r\n/*-------------------------------------------------------------------------------------------------------*/\r\n\r\nclass ED extends Component {\r\n  state = {};\r\n  traverse(xx, yy) {\r\n    let temp = document.getElementById(\"string_1\").value;\r\n    str1 = temp;\r\n    temp = document.getElementById(\"string_2\").value;\r\n    str2 = temp;\r\n    let parent = node(str1.length, str2.length);\r\n    let dp = new Array(str1.length)\r\n      .fill(-1)\r\n      .map(() => new Array(str2.length).fill(-1));\r\n    let x = fn(str1.length, str2.length, parent, dp);\r\n    this.layout(parent);\r\n    // console.log(\"ans :\", x);\r\n  }\r\n\r\n  nextright(tree) {\r\n    if (tree.thread) {\r\n      return tree.thread;\r\n    }\r\n    if (tree.left || tree.right || tree.middle) {\r\n      if (tree.right) {\r\n        return tree.right;\r\n      } else if (tree.middle) {\r\n        return tree.middle;\r\n      } else {\r\n        return tree.left;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  nextleft(tree) {\r\n    if (tree.thread) {\r\n      return tree.thread;\r\n    }\r\n    if (tree.left || tree.right || tree.middle) {\r\n      if (tree.left) {\r\n        return tree.left;\r\n      } else if (tree.middle) {\r\n        return tree.middle;\r\n      } else {\r\n        return tree.right;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  addmod(tree, modsum = 0) {\r\n    tree.x = tree.x + modsum;\r\n    x_place = Math.max(x_place, tree.x);\r\n    y_place = Math.max(y_place, tree.y);\r\n    if (tree.left) {\r\n      this.addmod(tree.left, modsum + tree.mod);\r\n    }\r\n    if (tree.middle) {\r\n      this.addmod(tree.middle, modsum + tree.mod);\r\n    }\r\n    if (tree.right) {\r\n      this.addmod(tree.right, modsum + tree.mod);\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  layout(tree) {\r\n    return this.addmod(this.setup(tree, 0), 0);\r\n  }\r\n\r\n  setup(tree, depth) {\r\n    if (tree.left == null && tree.right == null && tree.middle == null) {\r\n      tree.x = 0;\r\n      tree.y = depth;\r\n\r\n      return tree;\r\n    }\r\n    if (tree.left == null && tree.right != null && tree.middle == null) {\r\n      let temp_tree = this.setup(tree.right, depth + 1);\r\n      tree.x = temp_tree.x;\r\n      tree.y = temp_tree.y - 1;\r\n\r\n      return tree;\r\n    }\r\n    if (tree.middle != null && tree.left == null && tree.right == null) {\r\n      let temp_tree = this.setup(tree.middle, depth + 1);\r\n      tree.x = temp_tree.x;\r\n      tree.y = temp_tree.y - 1;\r\n    }\r\n    if (tree.right == null && tree.left != null && tree.middle == null) {\r\n      let temp_tree = this.setup(tree.left, depth + 1);\r\n      tree.x = temp_tree.x;\r\n      tree.y = temp_tree.y - 1;\r\n\r\n      return tree;\r\n    }\r\n    if (tree.middle == null && tree.left && tree.right) {\r\n      let left_tree = this.setup(tree.left, depth + 1);\r\n      let right_tree = this.setup(tree.right, depth + 1);\r\n      tree.x = this.fix_subtrees(left_tree, right_tree);\r\n      tree.y = left_tree.y - 1;\r\n    } else if (tree.left == null && tree.middle && tree.right) {\r\n      let left_tree = this.setup(tree.middle, depth + 1);\r\n      let right_tree = this.setup(tree.right, depth + 1);\r\n      tree.x = this.fix_subtrees(left_tree, right_tree);\r\n      tree.y = left_tree.y - 1;\r\n    } else if (tree.left && tree.middle && tree.right == null) {\r\n      let left_tree = this.setup(tree.left, depth + 1);\r\n      let right_tree = this.setup(tree.middle, depth + 1);\r\n      tree.x = this.fix_subtrees(left_tree, right_tree);\r\n      tree.y = left_tree.y - 1;\r\n    } else {\r\n      let left_tree = this.setup(tree.left, depth + 1);\r\n      let right_tree = this.setup(tree.middle, depth + 1);\r\n      tree.x = this.fix_subtrees(left_tree, right_tree);\r\n      left_tree = this.setup(tree.right, depth + 1);\r\n      tree.x = this.fix_subtrees(right_tree, left_tree);\r\n      tree.x = (tree.left.x + tree.right.x) / 2;\r\n      tree.y = left_tree.y - 1;\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  fix_subtrees(left_tree, right_tree) {\r\n    let hope = this.contour(left_tree, right_tree, null, 0, 0, null, null);\r\n    let li = hope.li;\r\n    let ri = hope.ri;\r\n    let diff = hope.maxoffset;\r\n    let loffset = hope.loffset;\r\n    let roffset = hope.roffset;\r\n    let lo = hope.left_outer;\r\n    let ro = hope.right_outer;\r\n\r\n    diff += 1;\r\n\r\n    right_tree.mod += diff;\r\n\r\n    right_tree.x += diff;\r\n\r\n    if (right_tree.left || right_tree.right) {\r\n      roffset += diff;\r\n    }\r\n    if (ri && !li) {\r\n      lo.thread = ri;\r\n      lo.mod = roffset - loffset;\r\n    } else if (li && !ri) {\r\n      ro.thread = li;\r\n      ro.mod = loffset - roffset;\r\n    }\r\n    return (left_tree.x + right_tree.x) / 2;\r\n  }\r\n\r\n  contour(\r\n    left_tree,\r\n    right_tree,\r\n    maxoffset,\r\n    loffset,\r\n    roffset,\r\n    left_outer = null,\r\n    right_outer = null\r\n  ) {\r\n    let delta = left_tree.x + loffset - (right_tree.x + roffset) + 1;\r\n    if (!maxoffset || delta > maxoffset) {\r\n      maxoffset = delta;\r\n    }\r\n    if (!left_outer) {\r\n      left_outer = left_tree;\r\n    }\r\n    if (!right_outer) {\r\n      right_outer = right_tree;\r\n    }\r\n    let lo = this.nextleft(left_outer || left_tree);\r\n    let li = this.nextright(left_tree || left_outer);\r\n    let ri = this.nextleft(right_tree || right_outer);\r\n    let ro = this.nextright(right_outer || right_tree);\r\n\r\n    if (li && ri) {\r\n      loffset += left_tree.mod;\r\n      roffset += right_tree.mod;\r\n      return this.contour(li, ri, maxoffset, loffset, roffset, lo, ro);\r\n    }\r\n\r\n    return { li, ri, maxoffset, loffset, roffset, left_outer, right_outer };\r\n  }\r\n\r\n  clearScreen() {\r\n    for (let i = 0; i < timeout_array.length; i++) {\r\n      clearTimeout(timeout_array[i]);\r\n    }\r\n    timeout_array = [];\r\n    treearray = [];\r\n    treeEdge = [];\r\n    fullrec = [];\r\n    x_place = 0;\r\n    y_place = 0;\r\n    //    parent = node(0, 0);\r\n    this.setState({ nodes: treearray });\r\n    this.setState({ edges: treeEdge });\r\n  }\r\n\r\n  animate() {\r\n    for (let i = 0; i < fullrec.length - 1; i++) {\r\n      let time1 = setTimeout(() => {\r\n        treearray.push(fullrec[i]);\r\n        this.setState({ nodes: treearray });\r\n      }, 250 * i);\r\n      timeout_array.push(time1);\r\n\r\n      time1 = setTimeout(() => {\r\n        if (fullrec[i + 1]) {\r\n          let edge_new = edge(fullrec[i], fullrec[i + 1]);\r\n          let temp_id = edge(fullrec[i + 1], fullrec[i]).id;\r\n          let index = -1;\r\n          for (let j = 0; j < treeEdge.length; j++) {\r\n            if (treeEdge[j].id == temp_id) {\r\n              index = j;\r\n              break;\r\n            }\r\n          }\r\n          edge_new.time = i + 2;\r\n          if (index == -1) {\r\n            treeEdge.push(edge_new);\r\n            this.setState({ edges: treeEdge });\r\n            let icon1 = document.getElementById(\r\n              `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 1`\r\n            );\r\n            let icon2 = document.getElementById(\r\n              `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 2`\r\n            );\r\n            if (icon1) icon1.beginElement();\r\n            if (icon2) icon2.beginElement();\r\n          } else {\r\n            treeEdge.splice(index, 1);\r\n            treeEdge.push(edge_new);\r\n            this.setState({ edges: treeEdge });\r\n            let icon1 = document.getElementById(\r\n              `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 1`\r\n            );\r\n            let icon2 = document.getElementById(\r\n              `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 2`\r\n            );\r\n            if (icon1) icon1.beginElement();\r\n            if (icon2) icon2.beginElement();\r\n          }\r\n        }\r\n      }, 250 * i + 50);\r\n      timeout_array.push(time1);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.clearScreen();\r\n  }\r\n\r\n  help() {\r\n    this.clearScreen();\r\n    this.traverse(0, 0);\r\n    this.animate();\r\n  }\r\n\r\n  render() {\r\n    const { nodes = [], edges = [] } = this.state;\r\n    return (\r\n      <div className=\"parent_div\">\r\n        <div className=\"menu\">\r\n          <div>\r\n            <input\r\n              id=\"string_1\"\r\n              className=\"input_lcs font_input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"String 1\"\r\n              spellCheck={false}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"string_2\"\r\n              className=\"input_lcs font_input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"String 2\"\r\n              spellCheck={false}\r\n            />\r\n          </div>\r\n          <div>\r\n            <button className=\"lcs-visual\" onClick={() => this.help()}>\r\n              Visualize\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"hope\">\r\n          <div className=\"padding_style\">\r\n            <svg\r\n              className=\"svg\"\r\n              viewBox={`0 0 ${x_place * 45 + 100} ${y_place * 150 + 100}`}\r\n            >\r\n              {nodes.map((node, nodeidx) => {\r\n                const {\r\n                  parent,\r\n                  id,\r\n                  x,\r\n                  y,\r\n                  left,\r\n                  right,\r\n                  middle,\r\n                  str1_idx,\r\n                  str2_idx,\r\n                  value,\r\n                  mod,\r\n                  thread,\r\n                  calculated,\r\n                } = node;\r\n                return (\r\n                  <EDTree\r\n                    key={nodeidx}\r\n                    parent={parent}\r\n                    id={id}\r\n                    x={x}\r\n                    y={y}\r\n                    left={left}\r\n                    right={right}\r\n                    middle={middle}\r\n                    str1_idx={str1_idx}\r\n                    str2_idx={str2_idx}\r\n                    value={value}\r\n                    mod={mod}\r\n                    thread={thread}\r\n                    calculated={calculated}\r\n                  >\r\n                    {value}\r\n                  </EDTree>\r\n                );\r\n              })}\r\n\r\n              {edges.map((edge, edgeidx) => {\r\n                const { x1, y1, x2, y2, value, time } = edge;\r\n                return (\r\n                  <EDEdges\r\n                    key={edgeidx}\r\n                    x_1={x1}\r\n                    y_1={y1}\r\n                    x_2={x2}\r\n                    y_2={y2}\r\n                    value={value}\r\n                    time={time}\r\n                  ></EDEdges>\r\n                );\r\n              })}\r\n            </svg>\r\n          </div>\r\n          <div className=\"footer\">made by yatharth katyayan</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ED;\r\n","import React, { Component } from \"react\";\r\nimport LCSTree from \"../LCS/LCS_tree\";\r\nimport LCSEdges from \"../LCS/lcs_edges\";\r\nlet treearray = [];\r\nlet treeEdge = [];\r\nlet fullrec = [];\r\nlet value_array = [];\r\nlet weight_array = [];\r\nlet timeout_array = [];\r\n\r\nlet x_place = 0;\r\nlet y_place = 0;\r\n\r\nfunction node(i, j) {\r\n  return {\r\n    parent: null,\r\n    id: `${i}-${j}`,\r\n    x: 0,\r\n    y: 0,\r\n    left: null,\r\n    right: null,\r\n    str1_idx: i,\r\n    str2_idx: j,\r\n    value: `${i},${j}`,\r\n    mod: 0,\r\n    thread: null,\r\n    returned_value: -1,\r\n    calculated: 0,\r\n  };\r\n}\r\n\r\nfunction edge(parent, child) {\r\n  let slope = 0;\r\n  if (parent && child) {\r\n    slope =\r\n      (parent.y * 150 + 50 - (child.y * 150 + 50)) /\r\n      (parent.x * 45 + 50 - (child.x * 45 + 50));\r\n    if (parent.left == child || parent.right == child) {\r\n      /* parent to child*/\r\n\r\n      if (parent.x != child.x && parent.left === child) {\r\n        let temp_x2 = 44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = -35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (-35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      } else if (parent.x != child.x && parent.right === child) {\r\n        let temp_x2 = -44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (-44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = 35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      } else {\r\n        return {\r\n          id: `${parent.x * 45 + 50} ${parent.y * 150 + 50 + 35} ${\r\n            child.x * 45 + 50\r\n          } ${child.y * 150 + 50 - 44}`,\r\n          x1: parent.x * 45 + 50,\r\n          y1: parent.y * 150 + 50 + 35,\r\n          x2: child.x * 45 + 50,\r\n          y2: child.y * 150 + 50 - 44,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      }\r\n    } else {\r\n      /* child to parent*/\r\n\r\n      if (parent.x != child.x && child.left === parent) {\r\n        let temp_x2 = -44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (-44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = 35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      } else if (parent.x != child.x && child.right === parent) {\r\n        let temp_x2 = 44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = -35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (-35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      } else {\r\n        return {\r\n          id: `${parent.x * 45 + 50} ${parent.y * 150 + 50 + 35} ${\r\n            child.x * 45 + 50\r\n          } ${child.y * 150 + 50 - 44}`,\r\n          x1: parent.x * 45 + 50,\r\n          y1: parent.y * 150 + 50 - 35,\r\n          x2: child.x * 45 + 50,\r\n          y2: child.y * 150 + 50 + 44,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction fn(i, j, treenode, dp) {\r\n  fullrec.push(treenode);\r\n\r\n  if (i == value_array.length) {\r\n    treenode.returned_value = 0;\r\n    fullrec.push(treenode.parent);\r\n    return 0;\r\n  }\r\n\r\n  if (j < 0) {\r\n    treenode.returned_value = -1000;\r\n    fullrec.push(treenode.parent);\r\n    return -1000;\r\n  }\r\n\r\n  /*----------------------------------Memory remover---------------------------------------------*/\r\n  if (dp[i][j - 1] != -1) {\r\n    fullrec.push(treenode.parent);\r\n    treenode.returned_value = dp[i][j - 1];\r\n    treenode.calculated = 1;\r\n    return dp[i][j - 1];\r\n  }\r\n\r\n  /*------------------------------------------------------------------------------------------------*/\r\n\r\n  treenode.left = node(i + 1, j);\r\n  treenode.left.parent = treenode;\r\n  treenode.right = node(i + 1, j - weight_array[i]);\r\n  treenode.right.parent = treenode;\r\n  let temp1 = fn(i + 1, j, treenode.left, dp);\r\n  let temp2 =\r\n    value_array[i] + fn(i + 1, j - weight_array[i], treenode.right, dp);\r\n  let temp = Math.max(temp1, temp2);\r\n  treenode.returned_value = temp;\r\n  dp[i][j - 1] = treenode.returned_value;\r\n  if (treenode.parent) fullrec.push(treenode.parent);\r\n  return temp;\r\n}\r\nfunction takeValues(val) {\r\n  let number_pattern = /-?\\d*\\.{0,1}\\d+/g;\r\n\r\n  let numbers = val.match(number_pattern);\r\n  if (numbers) {\r\n    for (let i = 0; i < numbers.length; i++) {\r\n      numbers[i] = parseInt(numbers[i], 10);\r\n    }\r\n  }\r\n  return numbers;\r\n}\r\n\r\n/*-------------------------------------------------------------------------------------------------------*/\r\n\r\nclass KS extends Component {\r\n  state = {};\r\n\r\n  traverse(xx, yy) {\r\n    let temp = document.getElementById(\"values\").value;\r\n    value_array = takeValues(temp);\r\n    temp = document.getElementById(\"weights\").value;\r\n    weight_array = takeValues(temp);\r\n    temp = document.getElementById(\"sum\").value;\r\n    let sum = takeValues(temp)[0];\r\n    let dp = new Array(value_array.length)\r\n      .fill(-1)\r\n      .map(() => new Array(sum).fill(-1));\r\n    let parent = node(xx, sum);\r\n    let x = fn(xx, sum, parent, dp);\r\n    this.layout(parent);\r\n    /*\r\n    console.log(dp);\r\n    console.log(value_array);\r\n    console.log(weight_array);\r\n    console.log(x);\r\n    console.log(fullrec);\r\n    */\r\n  }\r\n\r\n  nextright(tree) {\r\n    if (tree.thread) {\r\n      return tree.thread;\r\n    }\r\n    if (tree.left || tree.right) {\r\n      if (tree.right) {\r\n        return tree.right;\r\n      } else {\r\n        return tree.left;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  nextleft(tree) {\r\n    if (tree.thread) {\r\n      return tree.thread;\r\n    }\r\n    if (tree.left || tree.right) {\r\n      if (tree.left) {\r\n        return tree.left;\r\n      } else {\r\n        return tree.right;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  addmod(tree, modsum = 0) {\r\n    tree.x = tree.x + modsum;\r\n    x_place = Math.max(x_place, tree.x);\r\n    y_place = Math.max(y_place, tree.y);\r\n    if (tree.left) {\r\n      this.addmod(tree.left, modsum + tree.mod);\r\n    }\r\n    if (tree.right) {\r\n      this.addmod(tree.right, modsum + tree.mod);\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  layout(tree) {\r\n    return this.addmod(this.setup(tree, 0), 0);\r\n  }\r\n\r\n  setup(tree, depth) {\r\n    if (tree.left == null && tree.right == null) {\r\n      tree.x = 0;\r\n      tree.y = depth;\r\n\r\n      return tree;\r\n    }\r\n    if (tree.left == null && tree.right != null) {\r\n      let temp_tree = this.setup(tree.right, depth + 1);\r\n      tree.x = temp_tree.x;\r\n      tree.y = temp_tree.y - 1;\r\n\r\n      return tree;\r\n    }\r\n    if (tree.right == null && tree.left != null) {\r\n      let temp_tree = this.setup(tree.left, depth + 1);\r\n      tree.x = temp_tree.x;\r\n      tree.y = temp_tree.y - 1;\r\n\r\n      return tree;\r\n    }\r\n    let left_tree = this.setup(tree.left, depth + 1);\r\n    let right_tree = this.setup(tree.right, depth + 1);\r\n\r\n    tree.x = this.fix_subtrees(left_tree, right_tree);\r\n    tree.y = left_tree.y - 1;\r\n\r\n    return tree;\r\n  }\r\n\r\n  fix_subtrees(left_tree, right_tree) {\r\n    let hope = this.contour(left_tree, right_tree, null, 0, 0, null, null);\r\n    let li = hope.li;\r\n    let ri = hope.ri;\r\n    let diff = hope.maxoffset;\r\n    let loffset = hope.loffset;\r\n    let roffset = hope.roffset;\r\n    let lo = hope.left_outer;\r\n    let ro = hope.right_outer;\r\n\r\n    diff += 1;\r\n\r\n    right_tree.mod += diff;\r\n\r\n    right_tree.x += diff;\r\n\r\n    if (right_tree.left || right_tree.right) {\r\n      roffset += diff;\r\n    }\r\n    if (ri && !li) {\r\n      lo.thread = ri;\r\n      lo.mod = roffset - loffset;\r\n    } else if (li && !ri) {\r\n      ro.thread = li;\r\n      ro.mod = loffset - roffset;\r\n    }\r\n    return (left_tree.x + right_tree.x) / 2;\r\n  }\r\n\r\n  contour(\r\n    left_tree,\r\n    right_tree,\r\n    maxoffset,\r\n    loffset,\r\n    roffset,\r\n    left_outer = null,\r\n    right_outer = null\r\n  ) {\r\n    let delta = left_tree.x + loffset - (right_tree.x + roffset) + 1;\r\n    if (!maxoffset || delta > maxoffset) {\r\n      maxoffset = delta;\r\n    }\r\n    if (!left_outer) {\r\n      left_outer = left_tree;\r\n    }\r\n    if (!right_outer) {\r\n      right_outer = right_tree;\r\n    }\r\n    let lo = this.nextleft(left_outer || left_tree);\r\n    let li = this.nextright(left_tree || left_outer);\r\n    let ri = this.nextleft(right_tree || right_outer);\r\n    let ro = this.nextright(right_outer || right_tree);\r\n\r\n    if (li && ri) {\r\n      loffset += left_tree.mod;\r\n      roffset += right_tree.mod;\r\n      return this.contour(li, ri, maxoffset, loffset, roffset, lo, ro);\r\n    }\r\n\r\n    return { li, ri, maxoffset, loffset, roffset, left_outer, right_outer };\r\n  }\r\n\r\n  clearScreen() {\r\n    for (let i = 0; i < timeout_array.length; i++) {\r\n      clearTimeout(timeout_array[i]);\r\n    }\r\n    timeout_array = [];\r\n    treearray = [];\r\n    treeEdge = [];\r\n    fullrec = [];\r\n    x_place = 0;\r\n    y_place = 0;\r\n\r\n    this.setState({ nodes: treearray });\r\n    this.setState({ edges: treeEdge });\r\n  }\r\n\r\n  animate() {\r\n    for (let i = 0; i < fullrec.length - 1; i++) {\r\n      let time1 = setTimeout(() => {\r\n        treearray.push(fullrec[i]);\r\n        this.setState({ nodes: treearray });\r\n      }, 250 * i);\r\n      timeout_array.push(time1);\r\n      time1 = setTimeout(() => {\r\n        if (fullrec[i + 1]) {\r\n          let edge_new = edge(fullrec[i], fullrec[i + 1]);\r\n          let temp_id = edge(fullrec[i + 1], fullrec[i]).id;\r\n          let index = -1;\r\n          for (let j = 0; j < treeEdge.length; j++) {\r\n            if (treeEdge[j].id == temp_id) {\r\n              index = j;\r\n              break;\r\n            }\r\n          }\r\n          edge_new.time = i + 2;\r\n          if (index == -1) {\r\n            treeEdge.push(edge_new);\r\n            this.setState({ edges: treeEdge });\r\n            let icon1 = document.getElementById(\r\n              `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 1`\r\n            );\r\n            let icon2 = document.getElementById(\r\n              `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 2`\r\n            );\r\n            if (icon1) icon1.beginElement();\r\n            if (icon2) icon2.beginElement();\r\n          } else {\r\n            treeEdge.splice(index, 1);\r\n            treeEdge.push(edge_new);\r\n            this.setState({ edges: treeEdge });\r\n            let icon1 = document.getElementById(\r\n              `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 1`\r\n            );\r\n            let icon2 = document.getElementById(\r\n              `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 2`\r\n            );\r\n            if (icon1) icon1.beginElement();\r\n            if (icon2) icon2.beginElement();\r\n          }\r\n        }\r\n      }, 250 * i + 50);\r\n      timeout_array.push(time1);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.clearScreen();\r\n  }\r\n\r\n  help() {\r\n    this.clearScreen();\r\n    this.traverse(0, 0);\r\n    this.animate();\r\n  }\r\n\r\n  render() {\r\n    const { nodes = [], edges = [] } = this.state;\r\n\r\n    return (\r\n      <div className=\"parent_div\">\r\n        <div className=\"menu\">\r\n          <div>\r\n            <input\r\n              id=\"values\"\r\n              className=\"input_lcs font_input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"Values\"\r\n              spellCheck={false}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"weights\"\r\n              className=\"input_lcs font_input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"Weights\"\r\n              spellCheck={false}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"sum\"\r\n              className=\"input_lcs font_input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"Knapsack capacity\"\r\n              spellCheck={false}\r\n            />\r\n          </div>\r\n          <div>\r\n            <button className=\"lcs-visual\" onClick={() => this.help()}>\r\n              Visualize\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"hope\">\r\n          <div className=\"padding_style\">\r\n            <svg\r\n              className=\"svg\"\r\n              viewBox={`0 0 ${x_place * 45 + 100} ${y_place * 150 + 100}`}\r\n            >\r\n              {nodes.map((node, nodeidx) => {\r\n                const {\r\n                  parent,\r\n                  id,\r\n                  x,\r\n                  y,\r\n                  left,\r\n                  right,\r\n                  str1_idx,\r\n                  str2_idx,\r\n                  value,\r\n                  mod,\r\n                  thread,\r\n                  calculated,\r\n                } = node;\r\n                return (\r\n                  <LCSTree\r\n                    key={nodeidx}\r\n                    parent={parent}\r\n                    id={id}\r\n                    x={x}\r\n                    y={y}\r\n                    left={left}\r\n                    right={right}\r\n                    str1_idx={str1_idx}\r\n                    str2_idx={str2_idx}\r\n                    value={value}\r\n                    mod={mod}\r\n                    thread={thread}\r\n                    calculated={calculated}\r\n                  >\r\n                    {value}\r\n                  </LCSTree>\r\n                );\r\n              })}\r\n\r\n              {edges.map((edge, edgeidx) => {\r\n                const { x1, y1, x2, y2, value, time } = edge;\r\n                return (\r\n                  <LCSEdges\r\n                    key={edgeidx}\r\n                    x_1={x1}\r\n                    y_1={y1}\r\n                    x_2={x2}\r\n                    y_2={y2}\r\n                    value={value}\r\n                    time={time}\r\n                  ></LCSEdges>\r\n                );\r\n              })}\r\n            </svg>\r\n          </div>\r\n          <div className=\"footer\">made by yatharth katyayan</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KS;\r\n","import React, { Component } from \"react\";\r\nimport Coins from \"./problems/coin-change/coins_grid\";\r\nimport SideNav from \"./sidenav\";\r\nimport { Link, BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport LCS from \"./problems/LCS/LCS\";\r\nimport LIS from \"./problems/LIS/LIS\";\r\nimport homepage from \"./start_homepage\";\r\nimport DpInfo from \"./dp_info\";\r\nimport ContactUs from \"./contactUS\";\r\nimport ED from \"./problems/ED/ED\";\r\nimport KS from \"./problems/01KS/01_KS\";\r\n\r\nclass Home extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"line\">\r\n        <Router>\r\n          <SideNav />\r\n          <Route path=\"/dpvisual/problem\" exact component={Home}>\r\n            <div className=\"coin_input \">\r\n              <Link to=\"/dpvisual/problem/LCS\">\r\n                <div className=\" homepage_button \">\r\n                  Longest Comman Subsequence\r\n                </div>\r\n              </Link>\r\n\r\n              <Link to=\"/dpvisual/problem/coins_change\">\r\n                <div className=\" homepage_button\">Classical Coin Change</div>\r\n              </Link>\r\n              <Link to=\"/dpvisual/problem/LIS\">\r\n                <div className=\" homepage_button\">\r\n                  Longest Increasing Subsequence\r\n                </div>\r\n              </Link>\r\n              <Link to=\"/dpvisual/problem/ED\">\r\n                <div className=\" homepage_button\">Edit Distance</div>\r\n              </Link>\r\n              <Link to=\"/dpvisual/problem/KS\">\r\n                <div className=\" homepage_button\">0-1 Knapsack</div>\r\n              </Link>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/dpvisual/problem/LCS\" exact component={LCS} />\r\n          <Route\r\n            path=\"/dpvisual/problem/coins_change\"\r\n            exact\r\n            component={Coins}\r\n          />\r\n          <Route path=\"/dpvisual/problem/LIS\" exact component={LIS} />\r\n          <Route path=\"/dpvisual/problem/ED\" exact component={ED} />\r\n          <Route path=\"/dpvisual/problem/KS\" exact component={KS} />\r\n\r\n          <Route path=\"/dpvisual\" exact component={homepage} />\r\n          <Route path=\"/dpvisual/info\" exact component={DpInfo} />\r\n          <Route path=\"/dpvisual/contact\" exact component={ContactUs} />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport Home from \"./homepage\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}