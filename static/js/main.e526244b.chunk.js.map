{"version":3,"sources":["logo.svg","serviceWorker.js","problems/coin-change/coins.jsx","problems/coin-change/coins_grid.jsx","sidenav.jsx","problems/LCS/LCS_tree.jsx","problems/LCS/lcs_edges.jsx","problems/LCS/LCS_string.jsx","problems/LCS/LCS.jsx","problems/LIS/LIS_array.jsx","problems/LIS/LIS_SVG.jsx","problems/LIS/LIS.jsx","start_homepage.jsx","dp_info.jsx","contactUS.jsx","problems/ED/ED_tree.jsx","problems/ED/ED_edges.jsx","problems/ED/ED.jsx","problems/01KS/01_KS.jsx","problems/rod_cutting.jsx","homepage.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","CoinDiv","state","this","props","value","id","reachable","isvisited","coin_values","onClick","classes","className","Component","timeoutArray","Coins","coinArray","coin_we_have","idx","x","temp","i","length","push","setState","coin_combo","j","myvar","setTimeout","node","document","getElementById","classList","remove","add","node1","hope1","slice","style","borderColor","placeholder_1","hope","placeholder_2","parseInt","sort","a","b","new_hope","coin_array","coinMaker_given","coin_taker","remover","coin_Array","total_coins","coinMaker_all","clearTimeout","type","required","placeholder","setCoin","map","valueidx","key","details","visualize","clearCoins","SideNav","width","href","closeNav","to","fontSize","cursor","openNav","LCSTree","parent","str1_idx","str2_idx","y","left","right","mod","thread","returned_value","calculated","size","Math","min","color_back","color_text","cx","cy","r","fill","stroke","strokeWidth","transform","LCSEdges","x_1","y_1","x_2","y_2","time","markerWidth","markerHeight","refX","refY","orient","markerUnits","d","x1","y1","x2","y2","markerEnd","attributeName","from","begin","dur","repeatCount","restart","LCS_string","check","temp_color","color","treearray","treeEdge","fullrec","str1","str2","string1_array","string2_array","timeout_array","toggle","x_place","y_place","edge","child","slope","temp_x2","sqrt","temp_y2","temp_x1","temp_y1","traverse","xx","yy","treenode","fn","dp","temp1","temp2","max","Array","LCS","tree","modsum","addmod","setup","depth","temp_tree","left_tree","right_tree","fix_subtrees","contour","li","ri","diff","maxoffset","loffset","roffset","lo","left_outer","ro","right_outer","delta","nextleft","nextright","nodes","edges","string_obj","string_data_1","string_data_2","delay_time","delay_edge","time1","edge_new","temp_id","index","icon1","icon2","beginElement","splice","traversetree","res","LCS_TOP_DOWN","ans","printLCS","LCS_length","LCS_data","X","Y","n","m","dp1","common","result","clearScreen","layout","string_data_setter","animate","spellCheck","autoComplete","defaultChecked","content","nextElementSibling","maxHeight","scrollHeight","codeShow","help","nodeidx","viewBox","edgeidx","LIS_array","font","incheck","b_color","height","LIScurve","curve","midpx","midpy","comp","numbers","font_size","LIS","DP_array","createobj","p1x","p1y","p2x","p2y","theta","atan2","PI","c1x","cos","c1y","sin","arr","delay_curve","count","temp_curve_array","maxval","numbers_array","dp_array","curve_obj","curveSetter","svg_array","pop","time2","lis_seq","max_lis","LIS_ans","LIS_length","LIS_data","val","maximum","takeValues","setArray","lis","greet","middle1","middle2","middle3","last1","last2","last3","last4","last5","homepage","gg","scrollIntoView","starter","midder","mid1","midder1","mid2","midder2","mid3","midder3","here","laster","last_1","laster1","last_2","laster2","last_3","laster3","last_4","laster4","bye","laster5","clear","DpInfo","ContactUs","EDTree","middle","EDEdges","ED","temp3","time_delay","time_curve","value_array","weight_array","KS","sum","Infinity","Knapsack_ans","price_array","rod_length","children","ROD","price","k","cost","console","log","firstChild","leftChild","rightChild","Home","path","exact","component","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e526244b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\nclass CoinDiv extends Component {\r\n  state = {};\r\n  render() {\r\n    const {\r\n      value,\r\n      id,\r\n      reachable,\r\n      isvisited,\r\n      coin_values,\r\n      onClick,\r\n    } = this.props;\r\n    let classes = \"coin-color\";\r\n    if (isvisited == 1) {\r\n      if (reachable) {\r\n        classes = \"coinreachable\";\r\n      } else {\r\n        classes = \"coinunreachable\";\r\n      }\r\n    } else if (isvisited == 2) {\r\n      if (reachable) {\r\n        classes = \"coinreachable_done\";\r\n      } else {\r\n        classes = \"coinunreachable_done\";\r\n      }\r\n    }\r\n    return (\r\n      <div\r\n        id={id}\r\n        value={value}\r\n        className={`coin  ${classes}`}\r\n        coin_values={coin_values}\r\n        onClick={() => onClick()}\r\n      >\r\n        {value}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CoinDiv;\r\n","import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\nimport CoinDiv from \"./coins\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\n\r\n//let total_coins = 10;\r\nlet timeoutArray = [];\r\nfunction coinMaker_all(total_coins) {\r\n  let coinArray = [];\r\n  for (let i = 0; i <= total_coins; i++) {\r\n    coinArray.push(coin1(i));\r\n  }\r\n  return coinArray;\r\n}\r\nfunction coinMaker_given(coin_array) {\r\n  let coinArray = [];\r\n  for (let i = 0; i < coin_array.length; i++) {\r\n    coinArray.push(coin2(coin_array[i]));\r\n  }\r\n  return coinArray;\r\n}\r\nfunction coin1(value) {\r\n  return {\r\n    value: value,\r\n    coin_values: [],\r\n    id: `coin1-${value}`,\r\n    reachable: false,\r\n    isvisited: 0,\r\n  };\r\n}\r\nfunction coin2(value) {\r\n  return {\r\n    value: value,\r\n    coin_values: [],\r\n    id: `coin2-${value}`,\r\n    reachable: false,\r\n    isvisited: 0,\r\n  };\r\n}\r\nclass Coins extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      coinArray: [],\r\n      coin_we_have: [],\r\n    };\r\n  }\r\n  details(idx, coinArray) {\r\n    let x = coinArray[idx];\r\n    if (x.isvisited) {\r\n      let temp = [];\r\n      for (let i = 0; i < x.coin_values.length; i++) {\r\n        temp.push(x.coin_values[i]);\r\n        if (i != x.coin_values.length - 1) {\r\n          temp.push(\",\");\r\n        }\r\n      }\r\n      this.setState({ coin_combo: temp });\r\n    }\r\n  }\r\n  visualize(coinArray, coin_we_have) {\r\n    coinArray[0].isvisited = 0;\r\n    coinArray[0].reachable = true;\r\n\r\n    for (let i = 0; i < coinArray.length; i++) {\r\n      for (let j = 0; j < coin_we_have.length; j++) {\r\n        if (coinArray[i].value - coin_we_have[j].value >= 0) {\r\n          coinArray[i].reachable =\r\n            coinArray[coinArray[i].value - coin_we_have[j].value].reachable;\r\n          let x = coinArray[coinArray[i].value - coin_we_have[j].value];\r\n\r\n          let myvar = setTimeout(() => {\r\n            x.isvisited = 0;\r\n            this.setState({ coinArray });\r\n          }, 500 * i);\r\n          timeoutArray.push(myvar);\r\n          myvar = setTimeout(() => {\r\n            const node = coinArray[coinArray[i].value - coin_we_have[j].value];\r\n            document\r\n              .getElementById(`${node.id}`)\r\n              .classList.remove(\"coin-color\");\r\n            document.getElementById(`${node.id}`).classList.add(\"visited\");\r\n            const node1 = coin_we_have[j];\r\n            document\r\n              .getElementById(`${node1.id}`)\r\n              .classList.remove(\"coin-color\");\r\n            document.getElementById(`${node1.id}`).classList.add(\"visited\");\r\n          }, 500 * i);\r\n          timeoutArray.push(myvar);\r\n          this.setState({ coinArray });\r\n\r\n          myvar = setTimeout(() => {\r\n            const node = coinArray[coinArray[i].value - coin_we_have[j].value];\r\n            document.getElementById(`${node.id}`).classList.remove(\"visited\");\r\n            const node1 = coin_we_have[j];\r\n            document.getElementById(`${node1.id}`).classList.remove(\"visited\");\r\n            document.getElementById(`${node1.id}`).classList.add(\"coin-color\");\r\n          }, 500 * i + 500);\r\n          timeoutArray.push(myvar);\r\n          this.setState({ coinArray });\r\n\r\n          myvar = setTimeout(() => {\r\n            x.isvisited = 2;\r\n            this.setState({ coinArray });\r\n          }, 500 * i + 500);\r\n          timeoutArray.push(myvar);\r\n          if (coinArray[i].reachable) {\r\n            let hope =\r\n              coinArray[coinArray[i].value - coin_we_have[j].value].coin_values;\r\n\r\n            let hope1 = hope.slice();\r\n            hope1.push(coin_we_have[j].value);\r\n            coinArray[i].coin_values = hope1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      let myvar = setTimeout(() => {\r\n        coinArray[i].isvisited = 1;\r\n        this.setState({ coinArray });\r\n      }, 500 * i + 600);\r\n      timeoutArray.push(myvar);\r\n    }\r\n  }\r\n  /*\r\n\r\n*/\r\n  setCoin() {\r\n    /*----------------------input 1--------------------------------*/\r\n    let x = document.getElementById(\"input_number_1\").value;\r\n    if (x === \"\") {\r\n      let z = document.getElementById(\"input_number_1\");\r\n      z.style.borderColor = \"red\";\r\n      let y = document.getElementById(\"input_number_1\");\r\n      y.classList.add(\"danger\");\r\n      let text = \"this field is required\";\r\n      this.setState({ placeholder_1: text });\r\n      let ele = document.getElementById(\"input_number_1\");\r\n      ele.value = \"\";\r\n    } else if (x < 0) {\r\n      let z = document.getElementById(\"input_number_1\");\r\n      z.style.borderColor = \"red\";\r\n      let y = document.getElementById(\"input_number_1\");\r\n      y.classList.add(\"danger\");\r\n      let text = \"value must be a positive number\";\r\n      this.setState({ placeholder_1: text });\r\n      let ele = document.getElementById(\"input_number_1\");\r\n      ele.value = \"\";\r\n    } else if (x > 100) {\r\n      let z = document.getElementById(\"input_number_1\");\r\n      z.style.borderColor = \"red\";\r\n      let y = document.getElementById(\"input_number_1\");\r\n      y.classList.add(\"danger\");\r\n      let text = \"value should be less than 100\";\r\n      this.setState({ placeholder_1: text });\r\n      let ele = document.getElementById(\"input_number_1\");\r\n      ele.value = \"\";\r\n    } else {\r\n      /*-----------------------input 2---------------------------------*/\r\n      let val = document.getElementById(\"input_number_2\").value;\r\n      let number_pattern = /\\d+/g;\r\n      let hope = val.match(number_pattern);\r\n      if (hope === null) {\r\n        let temp = document.getElementById(\"input_number_2\");\r\n        temp.classList.add(\"danger\");\r\n        temp.style.borderColor = \"red\";\r\n        this.setState({ placeholder_2: \"invalid values\" });\r\n      } else {\r\n        for (let i = 0; i < hope.length; i++) {\r\n          hope[i] = parseInt(hope[i], 10);\r\n        }\r\n        hope.sort(function (a, b) {\r\n          return a - b;\r\n        });\r\n        let new_hope = coinMaker_given(hope);\r\n        this.setState({ coin_we_have: new_hope });\r\n        this.setState({\r\n          placeholder_2:\r\n            \"enter values of coins you have seperated by comma (,)\",\r\n        });\r\n        //  console.log(new_hope, hope);\r\n\r\n        this.setState({ coin_taker: <div></div> });\r\n        let remover = document.getElementById(\"back_button\");\r\n        remover.classList.remove(\"remove\");\r\n        remover = document.getElementById(\"visualize_button\");\r\n        remover.classList.remove(\"remove\");\r\n        remover = document.getElementById(\"color_helper\");\r\n        remover.classList.remove(\"remove\");\r\n        let coin_Array = coinMaker_all(x);\r\n        this.setState({ coinArray: coin_Array });\r\n        this.setState({\r\n          placeholder_1: \"enter coin value you want to check\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  clearCoins() {\r\n    for (let i = 0; i < timeoutArray.length; i++) {\r\n      clearTimeout(timeoutArray[i]);\r\n    }\r\n    this.setState({ coinArray: [] });\r\n    this.setState({ coin_we_have: [] });\r\n    let remover = document.getElementById(\"back_button\");\r\n    remover.classList.add(\"remove\");\r\n    remover = document.getElementById(\"visualize_button\");\r\n    remover.classList.add(\"remove\");\r\n    remover = document.getElementById(\"color_helper\");\r\n    remover.classList.add(\"remove\");\r\n    let x = (\r\n      <div id=\"coin_input\" className=\"coin_input\">\r\n        <div className=\"input_item\">\r\n          <input\r\n            className=\"input_field_size\"\r\n            type=\"number\"\r\n            required={true}\r\n            id=\"input_number_1\"\r\n            placeholder=\"enter coin value you want to check\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"input_item\">\r\n          <input\r\n            className=\"input_field_size\"\r\n            type=\"text\"\r\n            required={true}\r\n            id=\"input_number_2\"\r\n            placeholder=\"enter values of coins you have seperated by comma (,)\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"input_item\">\r\n          <button onClick={() => this.setCoin()} className=\"create_coin_button\">\r\n            <b>create coins</b>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n    this.setState({ coin_taker: x });\r\n  }\r\n  render() {\r\n    const {\r\n      coinArray = [],\r\n      placeholder_1 = \"enter coin value you want to check\",\r\n      placeholder_2 = \"enter values of coins you have seperated by comma (,)\",\r\n      coin_taker = (\r\n        <div id=\"coin_input\" className=\"coin_input\">\r\n          <div className=\"input_item\">\r\n            <input\r\n              className=\"input_field_size\"\r\n              type=\"number\"\r\n              required\r\n              id=\"input_number_1\"\r\n              placeholder={placeholder_1}\r\n            ></input>\r\n          </div>\r\n          <div className=\"input_item\">\r\n            <input\r\n              className=\"input_field_size\"\r\n              type=\"text\"\r\n              required\r\n              id=\"input_number_2\"\r\n              placeholder={placeholder_2}\r\n            ></input>\r\n          </div>\r\n          <div className=\"input_item\">\r\n            <button\r\n              onClick={() => this.setCoin()}\r\n              className=\"create_coin_button\"\r\n            >\r\n              <b> create coins</b>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ),\r\n      coin_we_have = [],\r\n      coin_combo = [],\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"problem\">\r\n          <p>\r\n            <h1> PROBLEM STATEMENT :-</h1>\r\n            <h2>\r\n              Given an unlimited supply of coins of given denominations, find if\r\n              it is possible to the desired change(sum) from these coins.\r\n            </h2>\r\n          </p>\r\n        </div>\r\n        <div className=\"problem remove\" id=\"color_helper\">\r\n          <div className=\"coin visited marginer row\"></div>\r\n          <div className=\"row square rightgap\">\r\n            <h1>= visited</h1>\r\n          </div>\r\n          <div className=\"coin coinreachable marginer row\"></div>\r\n          <div className=\"row square rightgap\">\r\n            <h1>= reachable</h1>\r\n          </div>\r\n          <div className=\"coin coinunreachable marginer row\"></div>\r\n          <div className=\"row square rightgap\">\r\n            <h1>= unreachable</h1>\r\n          </div>\r\n          <div className=\"coin coin-color marginer row\"></div>\r\n          <div className=\"row square rightgap\">\r\n            <h1>= unchecked</h1>\r\n          </div>\r\n          <div>\r\n            <h1>Possible coin combinational sum = [{this.state.coin_combo}]</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"next\">\r\n          {coinArray.map((idx, valueidx) => {\r\n            const { coin_values, value, id, reachable, isvisited } = idx;\r\n            return (\r\n              <div className=\"row padder\">\r\n                <CoinDiv\r\n                  key={valueidx}\r\n                  coin_values={coin_values}\r\n                  id={id}\r\n                  value={value}\r\n                  reachable={reachable}\r\n                  isvisited={isvisited}\r\n                  onClick={() => this.details(idx.value, coinArray)}\r\n                >\r\n                  {value}\r\n                </CoinDiv>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"next\">\r\n          {coin_we_have.map((idx, valueidx) => {\r\n            const { coin_values, value, id, reachable, isvisited } = idx;\r\n            return (\r\n              <div className=\"row padder\">\r\n                <CoinDiv\r\n                  key={valueidx}\r\n                  coin_values={coin_values}\r\n                  id={id}\r\n                  value={value}\r\n                  reachable={reachable}\r\n                  isvisited={isvisited}\r\n                  onClick={() => this.details(idx.value, coinArray)}\r\n                >\r\n                  {value}\r\n                </CoinDiv>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"next\">{coin_taker}</div>\r\n\r\n        <div className=\"next\">\r\n          <div className=\"button_div\">\r\n            <button\r\n              onClick={() =>\r\n                this.visualize(this.state.coinArray, this.state.coin_we_have)\r\n              }\r\n              id=\"visualize_button\"\r\n              className=\"remove visualize_button\"\r\n            >\r\n              <b>visualize</b>\r\n            </button>\r\n          </div>\r\n          <div className=\"button_div\">\r\n            <button\r\n              onClick={() => this.clearCoins()}\r\n              id=\"back_button\"\r\n              className=\"remove back_button\"\r\n            >\r\n              <b> Back</b>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Coins;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\n\r\nclass SideNav extends Component {\r\n  state = {};\r\n  openNav() {\r\n    document.getElementById(\"myNav\").style.width = \"100%\";\r\n  }\r\n\r\n  closeNav() {\r\n    let x = document.getElementById(\"myNav\");\r\n    x.style.width = \"0%\";\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div id=\"myNav\" className=\"overlay\">\r\n          <a\r\n            href=\"javascript:void(0)\"\r\n            className=\"closebtn\"\r\n            onClick={() => this.closeNav()}\r\n          >\r\n            &times;\r\n          </a>\r\n          <div className=\"overlay-content\">\r\n            <Link to=\"/dpvisual\" onClick={() => this.closeNav()}>\r\n              <a href=\"#\">HomePage</a>\r\n            </Link>\r\n            <Link to=\"/dpvisual/info\" onClick={() => this.closeNav()}>\r\n              <a href=\"#\">What is Dynamic Programming(DP)</a>\r\n            </Link>\r\n            <Link to=\"/dpvisual/problem\" onClick={() => this.closeNav()}>\r\n              <a href=\"#\">Visualize Dynamic Programming</a>\r\n            </Link>\r\n            <Link to=\"/dpvisual/contact\" onClick={() => this.closeNav()}>\r\n              <a href=\"#\">Contact us</a>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{ fontSize: \"50px\", cursor: \"pointer\" }}\r\n          onClick={() => this.openNav()}\r\n        >\r\n          &#9776;{\" \"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideNav;\r\n","import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\n\r\nclass LCSTree extends Component {\r\n  state = {};\r\n  render() {\r\n    const {\r\n      parent,\r\n      str1_idx,\r\n      str2_idx,\r\n      id,\r\n      x,\r\n      y,\r\n      left,\r\n      right,\r\n      value,\r\n      mod,\r\n      thread,\r\n      returned_value,\r\n      calculated,\r\n    } = this.props;\r\n    let size = Math.min(15 / (value.length * 6), 1);\r\n    let color_back = \"white\";\r\n    let color_text = \"black\";\r\n    if (calculated) {\r\n      color_back = \"black\";\r\n      color_text = \"white\";\r\n    }\r\n\r\n    return (\r\n      <g>\r\n        <circle\r\n          cx={x * 45 + 50}\r\n          cy={y * 150 + 50}\r\n          r=\"35\"\r\n          fill={color_back}\r\n          stroke=\"black\"\r\n          strokeWidth=\"5px\"\r\n          parent={parent}\r\n          id={id}\r\n          x={x}\r\n          y={y}\r\n          left={left}\r\n          right={right}\r\n          str1_idx={str1_idx}\r\n          str2_idx={str2_idx}\r\n          value={value}\r\n          mod={mod}\r\n          thread={thread}\r\n          returned_value={returned_value}\r\n          calculated={calculated}\r\n        ></circle>\r\n        <text\r\n          x={x * 45 + 50}\r\n          y={y * 150 + 50}\r\n          fill={color_text}\r\n          className=\"treedata\"\r\n          transform={`scale( ${size})`}\r\n        >\r\n          {value}\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LCSTree;\r\n","import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\n\r\nclass LCSEdges extends Component {\r\n  state = {};\r\n  render() {\r\n    const { x_1, y_1, x_2, y_2, value = -1, time } = this.props;\r\n\r\n    if (value != -1) {\r\n      return (\r\n        <g>\r\n          <defs>\r\n            <marker\r\n              id=\"markerArrow1\"\r\n              markerWidth=\"6\"\r\n              markerHeight=\"4\"\r\n              refX=\"5\"\r\n              refY=\"2\"\r\n              orient=\"auto\"\r\n              markerUnits=\"strokeWidth\"\r\n            >\r\n              <path d={`M 2 0 L 2 4 L 6 2 Z`}></path>\r\n            </marker>\r\n          </defs>\r\n          <line\r\n            x1={x_1}\r\n            y1={y_1}\r\n            x2={x_2}\r\n            y2={y_2}\r\n            stroke=\"black\"\r\n            strokeWidth=\"5px\"\r\n            markerEnd=\"url(#markerArrow1)\"\r\n          >\r\n            <animate\r\n              id={`edge ${x_1} ${y_1} ${x_2} ${y_2} 1`}\r\n              attributeName=\"x2\"\r\n              from={`${x_1}`}\r\n              to={`${x_2}`}\r\n              begin=\"indefinite\"\r\n              dur=\"0.15s\"\r\n              repeatCount=\"1\"\r\n              restart=\"whenNotActive\"\r\n            />\r\n            <animate\r\n              id={`edge ${x_1} ${y_1} ${x_2} ${y_2} 2`}\r\n              attributeName=\"y2\"\r\n              from={`${y_1}`}\r\n              to={`${y_2}`}\r\n              begin=\"indefinite\"\r\n              dur=\"0.15s\"\r\n              repeatCount=\"1\"\r\n              restart=\"whenNotActive\"\r\n            />\r\n          </line>\r\n\r\n          <text className=\"lcs_text \" x={(x_1 + x_2) / 2} y={(y_1 + y_2) / 2}>\r\n            {value}\r\n          </text>\r\n        </g>\r\n      );\r\n    } else {\r\n      return (\r\n        <g>\r\n          <defs>\r\n            <marker\r\n              id=\"markerArrow1\"\r\n              markerWidth=\"6\"\r\n              markerHeight=\"4\"\r\n              refX=\"5\"\r\n              refY=\"2\"\r\n              orient=\"auto\"\r\n              markerUnits=\"strokeWidth\"\r\n            >\r\n              <path d={`M 2 0 L 2 4 L 6 2 Z`}></path>\r\n            </marker>\r\n          </defs>\r\n          <line\r\n            x1={x_1}\r\n            y1={y_1}\r\n            x2={x_2}\r\n            y2={y_2}\r\n            stroke=\"black\"\r\n            strokeWidth=\"5px\"\r\n            markerEnd=\"url(#markerArrow1)\"\r\n          >\r\n            <animate\r\n              id={`edge ${x_1} ${y_1} ${x_2} ${y_2} 1`}\r\n              attributeName=\"x2\"\r\n              from={`${x_1}`}\r\n              to={`${x_2}`}\r\n              begin=\"indefinte\"\r\n              dur=\"0.15s\"\r\n              repeatCount=\"1\"\r\n              restart=\"whenNotActive\"\r\n            />\r\n            <animate\r\n              id={`edge ${x_1} ${y_1} ${x_2} ${y_2} 2`}\r\n              attributeName=\"y2\"\r\n              from={`${y_1}`}\r\n              to={`${y_2}`}\r\n              begin=\"indefinite\"\r\n              dur=\"0.15s\"\r\n              repeatCount=\"1\"\r\n              restart=\"whenNotActive\"\r\n            />\r\n          </line>\r\n        </g>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default LCSEdges;\r\n","import React, { Component } from \"react\";\r\nclass LCS_string extends Component {\r\n  state = {};\r\n  render() {\r\n    const { id, value, check } = this.props;\r\n    let temp_color = \"black\";\r\n    if (check == -1) {\r\n      temp_color = \"#2196f3\";\r\n    } else if (check == 2) {\r\n      temp_color = \"red\";\r\n    }\r\n    return (\r\n      <div\r\n        className=\"string_font\"\r\n        id={id}\r\n        check={check}\r\n        style={{ color: `${temp_color}` }}\r\n      >\r\n        {value}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LCS_string;\r\n","import React, { Component } from \"react\";\r\nimport LCSTree from \"./LCS_tree\";\r\nimport LCSEdges from \"./lcs_edges\";\r\nimport LCS_string from \"./LCS_string\";\r\nlet treearray = [];\r\nlet treeEdge = [];\r\nlet fullrec = [];\r\nlet str1 = \"\";\r\nlet str2 = \"\";\r\nlet string1_array = [];\r\nlet string2_array = [];\r\nlet timeout_array = [];\r\nlet toggle = 1;\r\nlet parent = node(0, 0);\r\nlet x_place = 0;\r\nlet y_place = 0;\r\n\r\nfunction node(i, j) {\r\n  return {\r\n    parent: null,\r\n    id: `${i}-${j}`,\r\n    x: 0,\r\n    y: 0,\r\n    left: null,\r\n    right: null,\r\n    str1_idx: i,\r\n    str2_idx: j,\r\n    value: `${i},${j}`,\r\n    mod: 0,\r\n    thread: null,\r\n    returned_value: -1,\r\n    calculated: 0,\r\n  };\r\n}\r\nfunction toggled() {\r\n  toggle = !toggle;\r\n}\r\nfunction edge(parent, child) {\r\n  let slope = 0;\r\n  if (parent && child) {\r\n    slope =\r\n      (parent.y * 150 + 50 - (child.y * 150 + 50)) /\r\n      (parent.x * 45 + 50 - (child.x * 45 + 50));\r\n    if (parent.left == child || parent.right == child) {\r\n      /* parent to child*/\r\n\r\n      if (parent.x != child.x && parent.left === child) {\r\n        let temp_x2 = 44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = -35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (-35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      } else if (parent.x != child.x && parent.right === child) {\r\n        let temp_x2 = -44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (-44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = 35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      } else {\r\n        return {\r\n          id: `${parent.x * 45 + 50} ${parent.y * 150 + 50 + 35} ${\r\n            child.x * 45 + 50\r\n          } ${child.y * 150 + 50 - 44}`,\r\n          x1: parent.x * 45 + 50,\r\n          y1: parent.y * 150 + 50 + 35,\r\n          x2: child.x * 45 + 50,\r\n          y2: child.y * 150 + 50 - 44,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      }\r\n    } else {\r\n      /* child to parent*/\r\n\r\n      if (parent.x != child.x && child.left === parent) {\r\n        let temp_x2 = -44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (-44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = 35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      } else if (parent.x != child.x && child.right === parent) {\r\n        let temp_x2 = 44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = -35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (-35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      } else {\r\n        return {\r\n          id: `${parent.x * 45 + 50} ${parent.y * 150 + 50 + 35} ${\r\n            child.x * 45 + 50\r\n          } ${child.y * 150 + 50 - 44}`,\r\n          x1: parent.x * 45 + 50,\r\n          y1: parent.y * 150 + 50 - 35,\r\n          x2: child.x * 45 + 50,\r\n          y2: child.y * 150 + 50 + 44,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction fn(i, j, treenode, dp) {\r\n  fullrec.push(treenode);\r\n  if (i == str1.length || j == str2.length) {\r\n    treenode.returned_value = 0;\r\n    fullrec.push(treenode.parent);\r\n    return 0;\r\n  }\r\n  /*----------------------------------Memory remover---------------------------------------------*/\r\n  if (dp[i][j] != -1) {\r\n    fullrec.push(treenode.parent);\r\n    treenode.returned_value = dp[i][j];\r\n    treenode.calculated = 1;\r\n    return dp[i][j];\r\n  }\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  if (str1[i] == str2[j]) {\r\n    treenode.left = node(i + 1, j + 1);\r\n    treenode.left.parent = treenode;\r\n    treenode.returned_value = 1 + fn(i + 1, j + 1, treenode.left, dp);\r\n    dp[i][j] = treenode.returned_value;\r\n    let temp = treenode.returned_value;\r\n    fullrec.push(treenode.parent);\r\n    return temp;\r\n  }\r\n  treenode.left = node(i, j + 1);\r\n  treenode.left.parent = treenode;\r\n  treenode.right = node(i + 1, j);\r\n  treenode.right.parent = treenode;\r\n  let temp1 = fn(i, j + 1, treenode.left, dp);\r\n  let temp2 = fn(i + 1, j, treenode.right, dp);\r\n  let temp = Math.max(temp1, temp2);\r\n  treenode.returned_value = temp;\r\n  dp[i][j] = treenode.returned_value;\r\n  if (treenode.parent) fullrec.push(treenode.parent);\r\n  return temp;\r\n}\r\n\r\nfunction traverse(xx, yy, treenode) {\r\n  let temp = document.getElementById(\"string_1\").value;\r\n  str1 = temp;\r\n  temp = document.getElementById(\"string_2\").value;\r\n  str2 = temp;\r\n  let dp = new Array(str1.length)\r\n    .fill(-1)\r\n    .map(() => new Array(str2.length).fill(-1));\r\n  let x = fn(xx, yy, treenode, dp);\r\n}\r\n\r\nfunction traversetree(node) {\r\n  treearray.push(node);\r\n  if (node.left) {\r\n    traversetree(node.left);\r\n  }\r\n  if (node.right) {\r\n    traversetree(node.right);\r\n  }\r\n  if (node.parent) {\r\n    treeEdge.push(edge(node, node.parent));\r\n  }\r\n}\r\n\r\nfunction codeShow() {\r\n  let x = document.getElementById(\"codeid\");\r\n  if (x) {\r\n    x.classList.toggle(\"active\");\r\n  }\r\n  let content = x.nextElementSibling;\r\n  if (content.style.maxHeight) {\r\n    content.style.maxHeight = null;\r\n  } else {\r\n    content.style.maxHeight = content.scrollHeight + \"px\";\r\n  }\r\n}\r\n/*-------------------------------------------------------------------------------------------------------*/\r\n\r\nclass LCS extends Component {\r\n  state = {};\r\n  nextright(tree) {\r\n    if (tree.thread) {\r\n      return tree.thread;\r\n    }\r\n    if (tree.left || tree.right) {\r\n      if (tree.right) {\r\n        return tree.right;\r\n      } else {\r\n        return tree.left;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  nextleft(tree) {\r\n    if (tree.thread) {\r\n      return tree.thread;\r\n    }\r\n    if (tree.left || tree.right) {\r\n      if (tree.left) {\r\n        return tree.left;\r\n      } else {\r\n        return tree.right;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  addmod(tree, modsum = 0) {\r\n    tree.x = tree.x + modsum;\r\n    x_place = Math.max(x_place, tree.x);\r\n    y_place = Math.max(y_place, tree.y);\r\n    if (tree.left) {\r\n      this.addmod(tree.left, modsum + tree.mod);\r\n    }\r\n    if (tree.right) {\r\n      this.addmod(tree.right, modsum + tree.mod);\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  layout(tree) {\r\n    return this.addmod(this.setup(tree, 0), 0);\r\n  }\r\n\r\n  setup(tree, depth) {\r\n    if (tree.left == null && tree.right == null) {\r\n      tree.x = 0;\r\n      tree.y = depth;\r\n\r\n      return tree;\r\n    }\r\n    if (tree.left == null && tree.right != null) {\r\n      let temp_tree = this.setup(tree.right, depth + 1);\r\n      tree.x = temp_tree.x;\r\n      tree.y = temp_tree.y - 1;\r\n\r\n      return tree;\r\n    }\r\n    if (tree.right == null && tree.left != null) {\r\n      let temp_tree = this.setup(tree.left, depth + 1);\r\n      tree.x = temp_tree.x;\r\n      tree.y = temp_tree.y - 1;\r\n\r\n      return tree;\r\n    }\r\n    let left_tree = this.setup(tree.left, depth + 1);\r\n    let right_tree = this.setup(tree.right, depth + 1);\r\n\r\n    tree.x = this.fix_subtrees(left_tree, right_tree);\r\n    tree.y = left_tree.y - 1;\r\n\r\n    return tree;\r\n  }\r\n\r\n  fix_subtrees(left_tree, right_tree) {\r\n    let hope = this.contour(left_tree, right_tree, null, 0, 0, null, null);\r\n    let li = hope.li;\r\n    let ri = hope.ri;\r\n    let diff = hope.maxoffset;\r\n    let loffset = hope.loffset;\r\n    let roffset = hope.roffset;\r\n    let lo = hope.left_outer;\r\n    let ro = hope.right_outer;\r\n\r\n    diff += 1;\r\n\r\n    right_tree.mod += diff;\r\n\r\n    right_tree.x += diff;\r\n\r\n    if (right_tree.left || right_tree.right) {\r\n      roffset += diff;\r\n    }\r\n    if (ri && !li) {\r\n      lo.thread = ri;\r\n      lo.mod = roffset - loffset;\r\n    } else if (li && !ri) {\r\n      ro.thread = li;\r\n      ro.mod = loffset - roffset;\r\n      if (li.parent.mod) ro.mod += li.parent.mod;\r\n    }\r\n    return (left_tree.x + right_tree.x) / 2;\r\n  }\r\n\r\n  contour(\r\n    left_tree,\r\n    right_tree,\r\n    maxoffset,\r\n    loffset,\r\n    roffset,\r\n    left_outer = null,\r\n    right_outer = null\r\n  ) {\r\n    let delta = left_tree.x + loffset - (right_tree.x + roffset) + 1;\r\n    if (!maxoffset || delta > maxoffset) {\r\n      maxoffset = delta;\r\n    }\r\n    if (!left_outer) {\r\n      left_outer = left_tree;\r\n    }\r\n    if (!right_outer) {\r\n      right_outer = right_tree;\r\n    }\r\n    let lo = this.nextleft(left_outer || left_tree);\r\n    let li = this.nextright(left_tree || left_outer);\r\n    let ri = this.nextleft(right_tree || right_outer);\r\n    let ro = this.nextright(right_outer || right_tree);\r\n\r\n    if (li && ri) {\r\n      loffset += left_tree.mod;\r\n      roffset += right_tree.mod;\r\n      return this.contour(li, ri, maxoffset, loffset, roffset, lo, ro);\r\n    }\r\n\r\n    return { li, ri, maxoffset, loffset, roffset, left_outer, right_outer };\r\n  }\r\n\r\n  clearScreen() {\r\n    for (let i = 0; i < timeout_array.length; i++) {\r\n      clearTimeout(timeout_array[i]);\r\n    }\r\n\r\n    document.getElementById(\"LCS_data\").classList.add(\"remove\");\r\n    string1_array = [];\r\n    string2_array = [];\r\n    timeout_array = [];\r\n    treearray = [];\r\n    treeEdge = [];\r\n    fullrec = [];\r\n    x_place = 0;\r\n    y_place = 0;\r\n    parent = node(0, 0);\r\n    this.setState({ nodes: treearray });\r\n    this.setState({ edges: treeEdge });\r\n  }\r\n\r\n  string_obj(value, id) {\r\n    return {\r\n      id: id,\r\n      value: value,\r\n      check: 0,\r\n    };\r\n  }\r\n\r\n  string_data_setter() {\r\n    for (let i = 0; i < str1.length; i++) {\r\n      string1_array.push(this.string_obj(str1[i], i));\r\n    }\r\n    this.setState({ string_data_1: string1_array });\r\n\r\n    for (let i = 0; i < str2.length; i++) {\r\n      string2_array.push(this.string_obj(str2[i], i));\r\n    }\r\n    this.setState({ string_data_2: string2_array });\r\n  }\r\n\r\n  animate() {\r\n    let delay_time = 0;\r\n    let delay_edge = 0;\r\n\r\n    if (toggle) {\r\n      delay_time = 400;\r\n      delay_edge = 50;\r\n\r\n      for (let i = 0; i < fullrec.length - 1; i++) {\r\n        let time1 = setTimeout(() => {\r\n          treearray.push(fullrec[i]);\r\n\r\n          for (let j = 0; j < string1_array.length; j++) {\r\n            string1_array[j].check = 0;\r\n          }\r\n          for (let j = 0; j < string2_array.length; j++) {\r\n            string2_array[j].check = 0;\r\n          }\r\n\r\n          if (string1_array[fullrec[i].str1_idx]) {\r\n            string1_array[fullrec[i].str1_idx].check = 2;\r\n\r\n            this.setState({ string_data_1: string1_array });\r\n          }\r\n          if (string2_array[fullrec[i].str2_idx]) {\r\n            string2_array[fullrec[i].str2_idx].check = 2;\r\n\r\n            this.setState({ string_data_2: string2_array });\r\n          }\r\n          this.setState({ nodes: treearray });\r\n        }, delay_time * i);\r\n\r\n        timeout_array.push(time1);\r\n\r\n        time1 = setTimeout(() => {\r\n          if (fullrec[i + 1]) {\r\n            let edge_new = edge(fullrec[i], fullrec[i + 1]);\r\n            let temp_id = edge(fullrec[i + 1], fullrec[i]).id;\r\n            let index = -1;\r\n            for (let j = 0; j < treeEdge.length; j++) {\r\n              if (treeEdge[j].id == temp_id) {\r\n                index = j;\r\n                break;\r\n              }\r\n            }\r\n            edge_new.time = i + 2;\r\n            if (index == -1) {\r\n              treeEdge.push(edge_new);\r\n              this.setState({ edges: treeEdge });\r\n              let icon1 = document.getElementById(\r\n                `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 1`\r\n              );\r\n              let icon2 = document.getElementById(\r\n                `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 2`\r\n              );\r\n              if (icon1) icon1.beginElement();\r\n              if (icon2) icon2.beginElement();\r\n            } else {\r\n              treeEdge.splice(index, 1);\r\n              treeEdge.push(edge_new);\r\n              this.setState({ edges: treeEdge });\r\n              let icon1 = document.getElementById(\r\n                `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 1`\r\n              );\r\n              let icon2 = document.getElementById(\r\n                `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 2`\r\n              );\r\n              if (icon1) icon1.beginElement();\r\n              if (icon2) icon2.beginElement();\r\n            }\r\n          }\r\n        }, delay_time * i + delay_edge);\r\n        timeout_array.push(time1);\r\n      }\r\n    } else {\r\n      traversetree(parent);\r\n      this.setState({ nodes: treearray });\r\n      this.setState({ edges: treeEdge });\r\n    }\r\n\r\n    let time1 = setTimeout(() => {\r\n      let res = this.LCS_TOP_DOWN(str1, str2, str1.length, str2.length);\r\n      let ans = this.printLCS(str1, str2, str1.length, str2.length, res);\r\n      let j = 0;\r\n      for (let i = 0; i < str1.length; i++) {\r\n        if (str1[i] == ans[j]) {\r\n          string1_array[i].check = -1;\r\n          j++;\r\n        } else {\r\n          string1_array[i].check = 0;\r\n        }\r\n      }\r\n      j = 0;\r\n      for (let i = 0; i < str2.length; i++) {\r\n        if (str2[i] == ans[j]) {\r\n          string2_array[i].check = -1;\r\n          j++;\r\n        } else {\r\n          string2_array[i].check = 0;\r\n        }\r\n      }\r\n      //   console.log(ans);\r\n      this.setState({ string_data_1: string1_array });\r\n      this.setState({ string_data_2: string2_array });\r\n      if (document.getElementById(\"LCS_data\"))\r\n        document.getElementById(\"LCS_data\").classList.remove(\"remove\");\r\n      this.setState({ LCS_length: ans.length });\r\n      this.setState({ LCS_data: ans });\r\n    }, fullrec.length * delay_time);\r\n\r\n    timeout_array.push(time1);\r\n  }\r\n\r\n  LCS_TOP_DOWN(X, Y, n, m) {\r\n    let dp1 = new Array(X.length + 1)\r\n      .fill(0)\r\n      .map(() => new Array(Y.length + 1).fill(0));\r\n\r\n    for (let i = 1; i <= n; i++) {\r\n      for (let j = 1; j <= n; j++) {\r\n        if (X[i - 1] == Y[j - 1]) dp1[i][j] = dp1[i - 1][j - 1] + 1;\r\n        else dp1[i][j] = Math.max(dp1[i - 1][j], dp1[i][j - 1]);\r\n      }\r\n    }\r\n    return dp1;\r\n  }\r\n\r\n  printLCS(X, Y, n, m, dp1) {\r\n    let i = n;\r\n    let j = m;\r\n\r\n    let common = [];\r\n    while (i > 0 && j > 0) {\r\n      if (X[i - 1] == Y[j - 1]) {\r\n        common.push(X[i - 1]);\r\n        i--;\r\n        j--;\r\n      } else {\r\n        if (dp1[i - 1][j] > dp1[i][j - 1]) {\r\n          i--;\r\n        } else j--;\r\n      }\r\n    }\r\n    let result = [];\r\n    for (let i = common.length - 1; i >= 0; i--) {\r\n      result.push(common[i]);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.clearScreen();\r\n    toggle = 1;\r\n  }\r\n\r\n  help() {\r\n    this.clearScreen();\r\n    traverse(0, 0, parent);\r\n    this.layout(parent);\r\n    this.string_data_setter();\r\n    this.animate();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      nodes = [],\r\n      edges = [],\r\n      string_data_1 = [],\r\n      string_data_2 = [],\r\n      LCS_length = 0,\r\n      LCS_data = [],\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"parent_div\">\r\n        <div className=\"menu\">\r\n          <div className=\" lcs_prblm\">\r\n            <p>\r\n              Find out the longest common subsequence(LCS) between two given\r\n              strings.\r\n            </p>\r\n            <p>For example :</p>\r\n            <p>String 1 : abcdgh</p>\r\n            <p>String 2 : abedfh</p>\r\n            <p>LCS : abdh</p>\r\n            <p>\r\n              *NOTE : WHITE NODES ARE CALCULATED.\r\n              <br />\r\n              <br />\r\n              *NOTE : BLACK NODES ARE MEMORISED.\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"string_1\"\r\n              className=\"input_lcs font_input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"Enter String 1 \"\r\n              spellCheck={false}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"string_2\"\r\n              className=\"input_lcs font_input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"Enter String 2\"\r\n              spellCheck={false}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div className=\"toggle_check\">\r\n            <label>Enable step-by-step animation</label>\r\n            <label className=\"switch toggle_bar\">\r\n              <input\r\n                type=\"checkbox\"\r\n                defaultChecked\r\n                onClick={() => toggled()}\r\n              ></input>\r\n              <div className=\"slider round \"></div>\r\n            </label>\r\n          </div>\r\n\r\n          <button\r\n            id=\"codeid\"\r\n            className=\"collapsible\"\r\n            onClick={() => {\r\n              codeShow();\r\n            }}\r\n          >\r\n            View Code\r\n          </button>\r\n          <div className=\"content code\">\r\n            <pre>\r\n              {`\r\n/*\r\n\r\ninitialize whole dp matrix to -1;\r\n\r\ndp[String1.length][String2.length] = -1;\r\n\r\n*/\r\n\r\nfunction fn(i,j) {\r\n  // i-th char of String1\r\n  //j-th char of String2\r\n\r\n  if (i == String1.length\r\n   || j == String2.length){\r\n    return 0;\r\n   }\r\n  \r\n  if(dp[i][j] != -1){\r\n    return dp[i][j];\r\n  }\r\n\r\n  if (String1[i] == String2[j]){\r\n    dp[i][j] = 1+fn(i+1, j+1);\r\n    return dp[i][j];\r\n  }\r\n\r\n  dp[i][j] = Math.max(\r\n    fn(i, j+1),\r\n    fn(i+1, j)\r\n  ); \r\n\r\n  return dp[i][j]; \r\n}    \r\n              `}\r\n            </pre>\r\n          </div>\r\n\r\n          <div id=\"LCS_data\" className=\"lcs_length remove\">\r\n            <p>LCS length = {LCS_length}</p>\r\n            <p>LCS String = [\"{LCS_data}\"]</p>\r\n          </div>\r\n\r\n          <div>\r\n            <button className=\"lcs-visual\" onClick={() => this.help()}>\r\n              Visualize\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"hope\">\r\n          <div className=\"padding_style\">\r\n            <div className=\"string_data\">\r\n              <div className=\"string_text\">\r\n                {string_data_1.map((node, nodeidx) => {\r\n                  const { id, value, check } = node;\r\n                  return (\r\n                    <LCS_string\r\n                      key={nodeidx}\r\n                      id={id}\r\n                      value={value}\r\n                      check={check}\r\n                    >\r\n                      {value}\r\n                    </LCS_string>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"string_text\">\r\n                {string_data_2.map((node, nodeidx) => {\r\n                  const { id, value, check } = node;\r\n                  return (\r\n                    <LCS_string\r\n                      key={nodeidx}\r\n                      id={id}\r\n                      value={value}\r\n                      check={check}\r\n                    >\r\n                      {value}\r\n                    </LCS_string>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"graph\">\r\n              <svg\r\n                className=\"svg\"\r\n                viewBox={`0 0 ${x_place * 45 + 100} ${y_place * 150 + 100}`}\r\n              >\r\n                {nodes.map((node, nodeidx) => {\r\n                  const {\r\n                    parent,\r\n                    id,\r\n                    x,\r\n                    y,\r\n                    left,\r\n                    right,\r\n                    str1_idx,\r\n                    str2_idx,\r\n                    value,\r\n                    mod,\r\n                    thread,\r\n                    calculated,\r\n                  } = node;\r\n                  return (\r\n                    <LCSTree\r\n                      key={nodeidx}\r\n                      parent={parent}\r\n                      id={id}\r\n                      x={x}\r\n                      y={y}\r\n                      left={left}\r\n                      right={right}\r\n                      str1_idx={str1_idx}\r\n                      str2_idx={str2_idx}\r\n                      value={value}\r\n                      mod={mod}\r\n                      thread={thread}\r\n                      calculated={calculated}\r\n                    >\r\n                      {value}\r\n                    </LCSTree>\r\n                  );\r\n                })}\r\n\r\n                {edges.map((edge, edgeidx) => {\r\n                  const { x1, y1, x2, y2, value, time } = edge;\r\n                  return (\r\n                    <LCSEdges\r\n                      key={edgeidx}\r\n                      x_1={x1}\r\n                      y_1={y1}\r\n                      x_2={x2}\r\n                      y_2={y2}\r\n                      value={value}\r\n                      time={time}\r\n                    ></LCSEdges>\r\n                  );\r\n                })}\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer\">made by yatharth katyayan</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LCS;\r\n","import React, { Component } from \"react\";\r\nclass LIS_array extends Component {\r\n  state = {};\r\n  render() {\r\n    const { value, x1, y1, font, incheck = 0 } = this.props;\r\n    let b_color = \"white\";\r\n    if (incheck == -1) {\r\n      b_color = \"#2196f3\";\r\n    } else if (incheck == 0) {\r\n      b_color = \"white\";\r\n    } else {\r\n      b_color = \"#4caf50\";\r\n    }\r\n    return (\r\n      <g>\r\n        <rect\r\n          width=\"75\"\r\n          height=\"75\"\r\n          fill={b_color}\r\n          stroke=\"black\"\r\n          strokeWidth=\"4px\"\r\n          y={y1}\r\n          x={x1}\r\n        ></rect>\r\n        <text\r\n          x={x1 + 35}\r\n          y={y1 + 35}\r\n          className=\"LISdata\"\r\n          fontSize={`${font}px`}\r\n        >\r\n          {value}\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LIS_array;\r\n","import React, { Component } from \"react\";\r\nclass LIScurve extends Component {\r\n  state = {};\r\n  render() {\r\n    const { curve = \"\", midpx, midpy, font, check } = this.props;\r\n\r\n    let comp = \"\";\r\n    if (check == 0) {\r\n      comp = \"=\";\r\n    } else if (check == 1) {\r\n      comp = \"<\";\r\n    } else {\r\n      comp = \">\";\r\n    }\r\n    return (\r\n      <g>\r\n        <path\r\n          d={curve}\r\n          stroke=\"black\"\r\n          strokeWidth=\"1px\"\r\n          strokeWidth=\"4px\"\r\n          fill=\"transparent\"\r\n        ></path>\r\n        <text\r\n          x={midpx}\r\n          y={midpy}\r\n          fontSize={`${font}px`}\r\n          stroke=\"black\"\r\n          strokeWidth=\"1px\"\r\n          className=\"LISdata\"\r\n        >\r\n          {comp}\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LIScurve;\r\n","import React, { Component } from \"react\";\r\nimport LIS_array from \"./LIS_array\";\r\nimport \"../../App.css\";\r\nimport LIScurve from \"./LIS_SVG\";\r\nlet toggle = 1;\r\nlet numbers = [];\r\nlet timeout_array = [];\r\nlet font_size = 0;\r\nfunction toggled() {\r\n  toggle = !toggle;\r\n}\r\nfunction codeShow() {\r\n  let x = document.getElementById(\"codeid\");\r\n  if (x) {\r\n    x.classList.toggle(\"active\");\r\n  }\r\n  let content = x.nextElementSibling;\r\n  if (content.style.maxHeight) {\r\n    content.style.maxHeight = null;\r\n  } else {\r\n    content.style.maxHeight = content.scrollHeight + \"px\";\r\n  }\r\n}\r\nclass LIS extends Component {\r\n  state = {};\r\n\r\n  setArray(n) {\r\n    let DP_array = new Array(n);\r\n    for (let i = 0; i < n; i++) {\r\n      DP_array[i] = this.createobj(null);\r\n    }\r\n    return DP_array;\r\n  }\r\n\r\n  curveSetter(i, j) {\r\n    let p1x = i * 75 + 35 + 40;\r\n    let p1y = numbers.length * 25 - 15 + 75;\r\n    let p2x = j * 75 + 35 + 40;\r\n    let p2y = p1y;\r\n\r\n    let midpx = (p2x + p1x) * 0.5;\r\n    let midpy = (p2y + p1y) * 0.5;\r\n\r\n    let theta = Math.atan2(p2y - p1y, p2x - p1x) - Math.PI / 2;\r\n    let offset = 60;\r\n\r\n    let c1x = midpx + offset * Math.cos(theta);\r\n    let c1y = midpy + offset * Math.sin(theta);\r\n    //  let curve = `M${p1x} ${p1y} Q ${c1x} ${c1y} ${p2x} ${p2y}`;\r\n    let curve =\r\n      \"M\" + p1x + \" \" + p1y + \" Q \" + c1x + \" \" + c1y + \" \" + p2x + \" \" + p2y;\r\n    let comp = 0;\r\n    if (numbers[i].value > numbers[j].value) {\r\n      comp = 1;\r\n    } else if (numbers[i].value < numbers[j].value) {\r\n      comp = -1;\r\n    }\r\n    return { curve: curve, midpx: c1x, midpy: c1y, comp: comp };\r\n  }\r\n\r\n  lis(arr, n, DP_array) {\r\n    let delay_time = 0;\r\n    let delay_curve = 0;\r\n    if (toggle) {\r\n      delay_time = 1000;\r\n      delay_curve = 500;\r\n\r\n      if (n) {\r\n        let count = 0;\r\n        let dp = new Array(n);\r\n        DP_array[0].value = 1;\r\n        dp[0] = 1;\r\n        let temp_curve_array = [];\r\n        for (let i = 1; i < n; i++) {\r\n          let maxval = 0;\r\n\r\n          let time1 = setTimeout(() => {\r\n            numbers[i].incheck = 1;\r\n            this.setState({ numbers_array: numbers });\r\n          }, delay_time * count + delay_curve);\r\n          timeout_array.push(time1);\r\n\r\n          for (let j = 0; j < i; j++) {\r\n            count++;\r\n            time1 = setTimeout(() => {\r\n              numbers[j].incheck = 1;\r\n              this.setState({ numbers_array: numbers });\r\n              DP_array[j].incheck = 1;\r\n              this.setState({ dp_array: DP_array });\r\n              let curve_obj = this.curveSetter(i, j);\r\n              temp_curve_array.push(curve_obj);\r\n              this.setState({ svg_array: temp_curve_array });\r\n            }, count * delay_time);\r\n\r\n            timeout_array.push(time1);\r\n\r\n            time1 = setTimeout(() => {\r\n              numbers[j].incheck = 0;\r\n              this.setState({ numbers_array: numbers });\r\n              DP_array[j].incheck = 0;\r\n              this.setState({ dp_array: DP_array });\r\n              temp_curve_array.pop();\r\n              this.setState({ svg_array: temp_curve_array });\r\n            }, count * delay_time + delay_curve);\r\n\r\n            timeout_array.push(time1);\r\n            if (arr[i].value > arr[j].value) {\r\n              maxval = Math.max(maxval, dp[j]);\r\n            }\r\n          }\r\n\r\n          dp[i] = maxval + 1;\r\n\r\n          time1 = setTimeout(() => {\r\n            DP_array[i].value = dp[i];\r\n            this.setState({ dp_array: DP_array });\r\n            numbers[i].incheck = 0;\r\n            this.setState({ numbers_array: numbers });\r\n          }, count * delay_time + delay_curve);\r\n          timeout_array.push(time1);\r\n        }\r\n      }\r\n    } else {\r\n      DP_array[0].value = 1;\r\n      for (let i = 0; i < n; i++) {\r\n        DP_array[i].value = 1;\r\n        for (let j = 0; j < i; j++) {\r\n          if (\r\n            arr[i].value > arr[j].value &&\r\n            DP_array[i].value < DP_array[j].value + 1\r\n          ) {\r\n            DP_array[i].value = DP_array[j].value + 1;\r\n          }\r\n        }\r\n      }\r\n      this.setState({ dp_array: DP_array });\r\n    }\r\n    let time2 = setTimeout(() => {\r\n      let lis_seq = new Array(n).fill(-1).map(() => new Array());\r\n\r\n      lis_seq[0].push(arr[0]);\r\n\r\n      for (let i = 1; i < n; i++) {\r\n        for (let j = 0; j < i; j++) {\r\n          if (\r\n            arr[i].value > arr[j].value &&\r\n            lis_seq[i].length < lis_seq[j].length + 1\r\n          ) {\r\n            lis_seq[i] = lis_seq[j].slice();\r\n          }\r\n        }\r\n\r\n        lis_seq[i].push(arr[i]);\r\n      }\r\n\r\n      let max_lis = lis_seq[0].slice();\r\n\r\n      for (let i = 0; i < n; i++) {\r\n        if (lis_seq[i].length > max_lis.length) {\r\n          max_lis = lis_seq[i].slice();\r\n        }\r\n      }\r\n      let LIS_ans = [];\r\n      for (let i = 0; i < max_lis.length; i++) {\r\n        numbers[max_lis[i].id].incheck = -1;\r\n        LIS_ans.push(max_lis[i].value);\r\n        if (i != max_lis.length - 1) LIS_ans.push(\",\");\r\n      }\r\n      if (document.getElementById(\"LCS_data\"))\r\n        document.getElementById(\"LIS_data\").classList.remove(\"remove\");\r\n      this.setState({ LIS_length: max_lis.length });\r\n      this.setState({ LIS_data: LIS_ans });\r\n      this.setState({ numbers_array: numbers });\r\n    }, ((n * (n - 1)) / 2) * delay_time + delay_curve);\r\n    timeout_array.push(time2);\r\n    return DP_array;\r\n  }\r\n\r\n  createobj(value, id) {\r\n    return {\r\n      id: id,\r\n      value: value,\r\n      incheck: 0,\r\n    };\r\n  }\r\n\r\n  takeValues() {\r\n    let val = document.getElementById(\"Input_1\").value;\r\n    let number_pattern = /-?\\d*\\.{0,1}\\d+/g;\r\n    let maximum = -100000000;\r\n    numbers = val.match(number_pattern);\r\n    if (numbers) {\r\n      for (let i = 0; i < numbers.length; i++) {\r\n        numbers[i] = parseInt(numbers[i], 10);\r\n        if (numbers[i] > maximum) {\r\n          maximum = numbers[i];\r\n        }\r\n      }\r\n      for (let i = 0; i < numbers.length; i++) {\r\n        numbers[i] = this.createobj(numbers[i], i);\r\n      }\r\n    }\r\n\r\n    font_size = 0;\r\n\r\n    while (maximum >= 1) {\r\n      font_size += 1;\r\n      maximum = maximum / 10;\r\n    }\r\n\r\n    if (font_size <= 3) {\r\n      font_size = 40;\r\n    } else if (font_size > 3 && font_size <= 4) {\r\n      font_size = 30;\r\n    } else if (font_size > 4 && font_size <= 7) {\r\n      font_size = 20;\r\n    } else if (font_size > 7 && font_size <= 9) {\r\n      font_size = 15;\r\n    } else {\r\n      font_size = 10;\r\n    }\r\n  }\r\n\r\n  clearScreen() {\r\n    for (let i = 0; i < timeout_array.length; i++) {\r\n      clearTimeout(timeout_array[i]);\r\n    }\r\n    numbers = [];\r\n    this.setState({ numbers_array: numbers });\r\n    font_size = 0;\r\n    this.setState({ dp_array: [] });\r\n    this.setState({ svg_array: [] });\r\n\r\n    document.getElementById(\"LIS_data\").classList.add(\"remove\");\r\n  }\r\n  componentDidMount() {\r\n    this.clearScreen();\r\n    toggle = 1;\r\n  }\r\n\r\n  visualize() {\r\n    this.clearScreen();\r\n    this.takeValues();\r\n\r\n    if (numbers) {\r\n      let dp = this.setArray(numbers.length);\r\n      this.setState({ dp_array: dp });\r\n      this.setState({ numbers_array: numbers });\r\n      let x = 0;\r\n      x = this.lis(numbers, numbers.length, dp);\r\n      this.setState({ dp_array: dp });\r\n    } else {\r\n      this.setState({ dp_array: [] });\r\n      this.setState({ numbers_array: [] });\r\n    }\r\n  }\r\n  render() {\r\n    const {\r\n      numbers_array = [],\r\n      dp_array = [],\r\n      svg_array = [],\r\n      LIS_data = [],\r\n      LIS_length = 0,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"parent_div\">\r\n        <div className=\"menu\">\r\n          <div className=\" lcs_prblm\">\r\n            <p>\r\n              Find out the longest increasing subsequence(LIS) in a given array.\r\n            </p>\r\n            <p>For example :</p>\r\n            <p>Array : [10,22,9,33,103,50,80]</p>\r\n            <p>LIS : [10,22,33,50,80]</p>\r\n            <p>*NOTE : GREEN NODES ARE BEING COMPARED.</p>\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"Input_1\"\r\n              className=\"input_lcs font_input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"Input Array here\"\r\n              spellCheck={false}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div className=\"toggle_check\">\r\n            <label>Enable step-by-step animation</label>\r\n            <label className=\"switch toggle_bar\">\r\n              <input\r\n                type=\"checkbox\"\r\n                defaultChecked\r\n                onClick={() => toggled()}\r\n              ></input>\r\n              <div className=\"slider round \"></div>\r\n            </label>\r\n          </div>\r\n\r\n          <button\r\n            id=\"codeid\"\r\n            className=\"collapsible\"\r\n            onClick={() => {\r\n              codeShow();\r\n            }}\r\n          >\r\n            View Code\r\n          </button>\r\n          <div className=\"content code\">\r\n            <pre>\r\n              {`\r\nint lis( int arr[], int n )  \r\n{  \r\n  int lis[n]; \r\n   \r\n  lis[0] = 1;    \r\n  \r\n  /* Compute optimized LIS values in  \r\n     bottom up manner */\r\n  \r\n     for (int i = 1; i < n; i++ ){\r\n    lis[i] = 1; \r\n    \r\n    for (int j = 0; j < i; j++ ){  \r\n\r\n        if ( arr[i] > arr[j] \r\n          && lis[i] < lis[j] + 1){  \r\n            lis[i] = lis[j] + 1;  \r\n        }\r\n\r\n    }\r\n\r\n  }\r\n    // Return maximum value in lis[] \r\n    \r\n    return *max_element(lis, lis+n); \r\n}  \r\n              `}\r\n            </pre>\r\n          </div>\r\n\r\n          <div id=\"LIS_data\" className=\"lcs_length remove\">\r\n            <p>LIS length = {LIS_length}</p>\r\n            <p>LIS subsequence = [{LIS_data}]</p>\r\n          </div>\r\n\r\n          <div>\r\n            <button className=\"lcs-visual\" onClick={() => this.visualize()}>\r\n              Visualize\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"hope\">\r\n          <div className=\"padding_style\">\r\n            <svg\r\n              className=\"svg\"\r\n              viewBox={`0 0 ${numbers_array.length * 75 + 100} ${\r\n                numbers_array.length * 75 + 200\r\n              }`}\r\n            >\r\n              <text\r\n                id=\"input_text\"\r\n                x=\"0\"\r\n                y={numbers_array.length * 20 + 35}\r\n                className=\"remove\"\r\n              >\r\n                INPUT\r\n              </text>\r\n              {numbers_array.map((node, nodeidx) => {\r\n                const { value, incheck } = node;\r\n                return (\r\n                  <LIS_array\r\n                    key={nodeidx}\r\n                    value={value}\r\n                    x1={nodeidx * 75 + 40}\r\n                    incheck={incheck}\r\n                    y1={numbers_array.length * 25 - 15}\r\n                    font={font_size}\r\n                  ></LIS_array>\r\n                );\r\n              })}\r\n              {dp_array.map((node, nodeidx) => {\r\n                const { value, incheck } = node;\r\n                return (\r\n                  <LIS_array\r\n                    key={nodeidx}\r\n                    incheck={incheck}\r\n                    value={value}\r\n                    x1={nodeidx * 75 + 40}\r\n                    y1={numbers.length * 65 + 100}\r\n                    font={font_size}\r\n                  ></LIS_array>\r\n                );\r\n              })}\r\n              {svg_array.map((node, nodeidx) => {\r\n                const { curve, midpx, midpy, comp } = node;\r\n                return (\r\n                  <LIScurve\r\n                    key={nodeidx}\r\n                    midpx={midpx}\r\n                    midpy={midpy}\r\n                    curve={curve}\r\n                    font={font_size}\r\n                    check={comp}\r\n                  ></LIScurve>\r\n                );\r\n              })}\r\n            </svg>\r\n          </div>\r\n          <div className=\"footer\">made by yatharth katyayan</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LIS;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n/* <link\r\n  href=\"https://fonts.googleapis.com/css2?family=Euphoria+Script&display=swap\"\r\n  rel=\"stylesheet\"\r\n></link>; */\r\nlet greet = [];\r\nlet middle1 = [];\r\nlet middle2 = [];\r\nlet middle3 = [];\r\nlet last1 = [];\r\nlet last2 = [];\r\nlet last3 = [];\r\nlet last4 = [];\r\nlet last5 = [];\r\nlet timeout_array = [];\r\nlet time = 100;\r\nclass homepage extends Component {\r\n  state = {};\r\n\r\n  starter() {\r\n    let time1;\r\n    let gg = \"Hi there, I hope you are doing well in these tough times. \";\r\n    for (let i = 0; i < gg.length; i++) {\r\n      time1 = setTimeout(() => {\r\n        greet.push(gg[i]);\r\n        document.getElementById(\"1\").scrollIntoView();\r\n        this.setState({ starter: greet });\r\n      }, time * i);\r\n      timeout_array.push(time1);\r\n    }\r\n    time1 = setTimeout(() => {\r\n      this.midder();\r\n    }, time * gg.length + 500);\r\n    timeout_array.push(time1);\r\n  }\r\n  midder() {\r\n    let time1;\r\n    let mid1 =\r\n      \"This is my practice project for learning and visualizing 'Dynamic Programming'. \";\r\n    for (let i = 0; i < mid1.length; i++) {\r\n      time1 = setTimeout(() => {\r\n        middle1.push(mid1[i]);\r\n        document.getElementById(\"2\").scrollIntoView();\r\n        this.setState({ midder1: middle1 });\r\n      }, time * i);\r\n      timeout_array.push(time1);\r\n    }\r\n    middle2 = [];\r\n    let mid2 = \"Ohh.. if you don't know what is 'Dynamic Programming' ....\";\r\n\r\n    time1 = setTimeout(() => {\r\n      for (let i = 0; i < mid2.length; i++) {\r\n        let time2 = setTimeout(() => {\r\n          middle2.push(mid2[i]);\r\n          document.getElementById(\"3\").scrollIntoView();\r\n          this.setState({ midder2: middle2 });\r\n        }, time * i);\r\n        timeout_array.push(time2);\r\n      }\r\n    }, time * mid1.length);\r\n\r\n    timeout_array.push(time1);\r\n\r\n    middle3 = [];\r\n    let mid3 = \"Well... Don't you worry i got your back, just click \";\r\n\r\n    time1 = setTimeout(() => {\r\n      for (let i = 0; i < mid3.length; i++) {\r\n        let time2 = setTimeout(() => {\r\n          middle3.push(mid3[i]);\r\n          document.getElementById(\"4\").scrollIntoView();\r\n          this.setState({ midder3: middle3 });\r\n        }, time * i);\r\n        timeout_array.push(time2);\r\n      }\r\n    }, time * mid1.length + time * mid2.length);\r\n\r\n    timeout_array.push(time1);\r\n    let here = (\r\n      <Link to=\"/dpvisual/info\" style={{ color: \"#2196f3\" }}>\r\n        here\r\n      </Link>\r\n    );\r\n\r\n    time1 = setTimeout(() => {\r\n      middle3.push(here);\r\n      document.getElementById(\"4\").scrollIntoView();\r\n      this.setState({ midder3: middle3 });\r\n    }, time * (mid1.length + mid2.length + mid3.length) + 100);\r\n    timeout_array.push(time1);\r\n    time1 = setTimeout(() => {\r\n      this.laster();\r\n    }, time * (mid1.length + mid2.length + mid3.length) + 3500);\r\n    timeout_array.push(time1);\r\n  }\r\n\r\n  laster() {\r\n    let time1;\r\n    let last_1 =\r\n      \"Ahh.. you are a pro ... seems like you know all about 'Dynamic Programming'. \";\r\n    for (let i = 0; i < last_1.length; i++) {\r\n      time1 = setTimeout(() => {\r\n        last1.push(last_1[i]);\r\n        document.getElementById(\"5\").scrollIntoView();\r\n        this.setState({ laster1: last1 });\r\n      }, time * i);\r\n      timeout_array.push(time1);\r\n    }\r\n    last2 = [];\r\n    let last_2 =\r\n      \"Well, I hope you enjoy this project and learn something new ...\";\r\n    let time2 = setTimeout(() => {\r\n      for (let i = 0; i < last_2.length; i++) {\r\n        setTimeout(() => {\r\n          last2.push(last_2[i]);\r\n          document.getElementById(\"6\").scrollIntoView();\r\n          this.setState({ laster2: last2 });\r\n        }, time * i);\r\n        timeout_array.push(time1);\r\n      }\r\n    }, last_1.length * time);\r\n    timeout_array.push(time2);\r\n    last3 = [];\r\n    let last_3 = \"We will meet soon ...\";\r\n    time2 = setTimeout(() => {\r\n      for (let i = 0; i < last_3.length; i++) {\r\n        time1 = setTimeout(() => {\r\n          last3.push(last_3[i]);\r\n          document.getElementById(\"7\").scrollIntoView();\r\n          this.setState({ laster3: last3 });\r\n        }, time * i);\r\n        timeout_array.push(time1);\r\n      }\r\n    }, (last_1.length + last_2.length) * time + 2500);\r\n    timeout_array.push(time2);\r\n    last4 = [];\r\n    let last_4 = \"With Regards ..\";\r\n    time2 = setTimeout(() => {\r\n      for (let i = 0; i < last_4.length; i++) {\r\n        time1 = setTimeout(() => {\r\n          last4.push(last_4[i]);\r\n          document.getElementById(\"8\").scrollIntoView();\r\n          this.setState({ laster4: last4 });\r\n        }, time * i);\r\n        timeout_array.push(time1);\r\n      }\r\n    }, (last_1.length + last_2.length + last_3.length) * time + 2500);\r\n    timeout_array.push(time2);\r\n    last5 = [];\r\n    let bye = \"- Yatharth Katyayan\";\r\n    time2 = setTimeout(() => {\r\n      for (let i = 0; i < bye.length; i++) {\r\n        time1 = setTimeout(() => {\r\n          last5.push(bye[i]);\r\n          document.getElementById(\"9\").scrollIntoView();\r\n          this.setState({ laster5: last5 });\r\n        }, time * i);\r\n        timeout_array.push(time1);\r\n      }\r\n    }, (last_1.length + last_2.length + last_3.length + last_4.length) * time + 2500);\r\n    timeout_array.push(time2);\r\n  }\r\n  clear() {\r\n    for (let i = 0; i < timeout_array.length; i++) {\r\n      clearTimeout(timeout_array[i]);\r\n    }\r\n    greet = [];\r\n    middle1 = [];\r\n    middle2 = [];\r\n    middle3 = [];\r\n    last1 = [];\r\n    last2 = [];\r\n    last3 = [];\r\n    last4 = [];\r\n    last5 = [];\r\n    this.setState({ starter: [] });\r\n    this.setState({ midder1: [] });\r\n    this.setState({ midder2: [] });\r\n    this.setState({ midder3: [] });\r\n    this.setState({ laster1: [] });\r\n    this.setState({ laster2: [] });\r\n    this.setState({ laster3: [] });\r\n    this.setState({ laster4: [] });\r\n    this.setState({ laster5: [] });\r\n  }\r\n  componentDidMount() {\r\n    this.clear();\r\n    setTimeout(() => {\r\n      this.starter();\r\n    }, 3000);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      starter = [],\r\n      midder1 = [],\r\n      midder2 = [],\r\n      midder3 = [],\r\n      laster1 = [],\r\n      laster2 = [],\r\n      laster3 = [],\r\n      laster4 = [],\r\n      laster5 = [],\r\n    } = this.state;\r\n    return (\r\n      <div className=\"homepage_screen\">\r\n        <div id=\"1\" className=\"home_div\">\r\n          {starter}\r\n        </div>\r\n        <div id=\"2\" className=\"home_div\">\r\n          {midder1}\r\n        </div>\r\n\r\n        <div id=\"3\" className=\"home_div\">\r\n          {midder2}\r\n        </div>\r\n        <div id=\"4\" className=\"home_div\">\r\n          {midder3}\r\n        </div>\r\n        <div id=\"5\" className=\"home_div\">\r\n          {laster1}\r\n        </div>\r\n        <div id=\"6\" className=\"home_div\">\r\n          {laster2}\r\n        </div>\r\n        <div id=\"7\" className=\"home_div\">\r\n          {laster3}\r\n        </div>\r\n        <div id=\"8\" className=\"home_div\">\r\n          {laster4}\r\n        </div>\r\n        <div id=\"9\" className=\"home_div\">\r\n          {laster5}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default homepage;\r\n","import React, { Component } from \"react\";\r\nclass DpInfo extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>please wait I am working on it</h1>;\r\n  }\r\n}\r\n\r\nexport default DpInfo;\r\n","import React, { Component } from \"react\";\r\nclass ContactUs extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>contact us</h1>;\r\n  }\r\n}\r\n\r\nexport default ContactUs;\r\n","import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\n\r\nclass EDTree extends Component {\r\n  state = {};\r\n  render() {\r\n    const {\r\n      parent,\r\n      str1_idx,\r\n      str2_idx,\r\n      id,\r\n      x,\r\n      y,\r\n      left,\r\n      right,\r\n      middle,\r\n      value,\r\n      mod,\r\n      thread,\r\n      returned_value,\r\n      calculated,\r\n    } = this.props;\r\n    let size = Math.min(15 / (value.length * 6), 1);\r\n    let color_back = \"white\";\r\n    let color_text = \"black\";\r\n    if (calculated) {\r\n      color_back = \"black\";\r\n      color_text = \"white\";\r\n    }\r\n    return (\r\n      <g>\r\n        <circle\r\n          cx={x * 45 + 50}\r\n          cy={y * 150 + 50}\r\n          r=\"35\"\r\n          fill={color_back}\r\n          stroke=\"black\"\r\n          strokeWidth=\"5px\"\r\n          parent={parent}\r\n          id={id}\r\n          x={x}\r\n          y={y}\r\n          left={left}\r\n          right={right}\r\n          middle={middle}\r\n          str1_idx={str1_idx}\r\n          str2_idx={str2_idx}\r\n          value={value}\r\n          mod={mod}\r\n          thread={thread}\r\n          returned_value={returned_value}\r\n          calculated={calculated}\r\n        ></circle>\r\n        <text\r\n          x={x * 45 + 50}\r\n          y={y * 150 + 50}\r\n          fill={color_text}\r\n          className=\"treedata\"\r\n          transform={`scale( ${size})`}\r\n        >\r\n          {value}\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EDTree;\r\n","import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\n\r\nclass EDEdges extends Component {\r\n  state = {};\r\n  render() {\r\n    const { x_1, y_1, x_2, y_2, value = -1, time } = this.props;\r\n\r\n    if (value != -1) {\r\n      return (\r\n        <g>\r\n          <defs>\r\n            <marker\r\n              id=\"markerArrow1\"\r\n              markerWidth=\"6\"\r\n              markerHeight=\"4\"\r\n              refX=\"5\"\r\n              refY=\"2\"\r\n              orient=\"auto\"\r\n              markerUnits=\"strokeWidth\"\r\n            >\r\n              <path d={`M 2 0 L 2 4 L 6 2 Z`}></path>\r\n            </marker>\r\n          </defs>\r\n          <line\r\n            x1={x_1}\r\n            y1={y_1}\r\n            x2={x_2}\r\n            y2={y_2}\r\n            stroke=\"black\"\r\n            strokeWidth=\"5px\"\r\n            markerEnd=\"url(#markerArrow1)\"\r\n          >\r\n            <animate\r\n              id={`edge ${x_1} ${y_1} ${x_2} ${y_2} 1`}\r\n              attributeName=\"x2\"\r\n              from={`${x_1}`}\r\n              to={`${x_2}`}\r\n              begin=\"indefinite\"\r\n              dur=\"0.15s\"\r\n              repeatCount=\"1\"\r\n              restart=\"whenNotActive\"\r\n            />\r\n            <animate\r\n              id={`edge ${x_1} ${y_1} ${x_2} ${y_2} 2`}\r\n              attributeName=\"y2\"\r\n              from={`${y_1}`}\r\n              to={`${y_2}`}\r\n              begin=\"indefinite\"\r\n              dur=\"0.15s\"\r\n              repeatCount=\"1\"\r\n              restart=\"whenNotActive\"\r\n            />\r\n          </line>\r\n\r\n          <text className=\"lcs_text \" x={(x_1 + x_2) / 2} y={(y_1 + y_2) / 2}>\r\n            {value}\r\n          </text>\r\n        </g>\r\n      );\r\n    } else {\r\n      return (\r\n        <g>\r\n          <defs>\r\n            <marker\r\n              id=\"markerArrow1\"\r\n              markerWidth=\"6\"\r\n              markerHeight=\"4\"\r\n              refX=\"5\"\r\n              refY=\"2\"\r\n              orient=\"auto\"\r\n              markerUnits=\"strokeWidth\"\r\n            >\r\n              <path d={`M 2 0 L 2 4 L 6 2 Z`}></path>\r\n            </marker>\r\n          </defs>\r\n          <line\r\n            x1={x_1}\r\n            y1={y_1}\r\n            x2={x_2}\r\n            y2={y_2}\r\n            stroke=\"black\"\r\n            strokeWidth=\"5px\"\r\n            markerEnd=\"url(#markerArrow1)\"\r\n          >\r\n            <animate\r\n              id={`edge ${x_1} ${y_1} ${x_2} ${y_2} 1`}\r\n              attributeName=\"x2\"\r\n              from={`${x_1}`}\r\n              to={`${x_2}`}\r\n              begin=\"indefinte\"\r\n              dur=\"0.15s\"\r\n              repeatCount=\"1\"\r\n              restart=\"whenNotActive\"\r\n            />\r\n            <animate\r\n              id={`edge ${x_1} ${y_1} ${x_2} ${y_2} 2`}\r\n              attributeName=\"y2\"\r\n              from={`${y_1}`}\r\n              to={`${y_2}`}\r\n              begin=\"indefinite\"\r\n              dur=\"0.15s\"\r\n              repeatCount=\"1\"\r\n              restart=\"whenNotActive\"\r\n            />\r\n          </line>\r\n        </g>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default EDEdges;\r\n","import React, { Component } from \"react\";\r\nimport EDTree from \"./ED_tree\";\r\nimport EDEdges from \"./ED_edges\";\r\nimport LCS_string from \"../LCS/LCS_string\";\r\n\r\nlet treearray = [];\r\nlet treeEdge = [];\r\nlet fullrec = [];\r\nlet string1_array = [];\r\nlet string2_array = [];\r\nlet str1 = \"\";\r\nlet str2 = \"\";\r\nlet timeout_array = [];\r\nlet pos = 10;\r\nlet toggle = 1;\r\nlet x_place = 0;\r\nlet y_place = 0;\r\n\r\nfunction node(i, j) {\r\n  return {\r\n    parent: null,\r\n    id: `${i}-${j}`,\r\n    x: 0,\r\n    y: 0,\r\n    left: null,\r\n    right: null,\r\n    middle: null,\r\n    str1_idx: i,\r\n    str2_idx: j,\r\n    value: `${i},${j}`,\r\n    mod: 0,\r\n    thread: null,\r\n    returned_value: -1,\r\n    calculated: 0,\r\n  };\r\n}\r\n\r\nfunction edge(parent, child) {\r\n  let slope = 0;\r\n  if (parent && child) {\r\n    slope =\r\n      (parent.y * 150 + 50 - (child.y * 150 + 50)) /\r\n      (parent.x * 45 + 50 - (child.x * 45 + 50));\r\n    if (\r\n      parent.left == child ||\r\n      parent.right == child ||\r\n      parent.middle == child\r\n    ) {\r\n      /* parent to child*/\r\n\r\n      if (\r\n        parent.x > child.x &&\r\n        (parent.left === child || parent.middle === child)\r\n      ) {\r\n        let temp_x2 = 44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = -35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (-35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      } else if (\r\n        parent.x < child.x &&\r\n        (parent.right === child || parent.middle === child)\r\n      ) {\r\n        let temp_x2 = -44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (-44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = 35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      } else if (parent.x == child.x) {\r\n        return {\r\n          id: `${parent.x * 45 + 50} ${parent.y * 150 + 50 + 35} ${\r\n            child.x * 45 + 50\r\n          } ${child.y * 150 + 50 - 44}`,\r\n          x1: parent.x * 45 + 50,\r\n          y1: parent.y * 150 + 50 + 35,\r\n          x2: child.x * 45 + 50,\r\n          y2: child.y * 150 + 50 - 44,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      }\r\n    } else {\r\n      /* child to parent*/\r\n\r\n      if (\r\n        parent.x < child.x &&\r\n        (child.left === parent || child.middle === parent)\r\n      ) {\r\n        let temp_x2 = -44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (-44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = 35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      } else if (\r\n        parent.x > child.x &&\r\n        (child.right === parent || child.middle === parent)\r\n      ) {\r\n        let temp_x2 = 44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = -35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (-35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      } else if (parent.x == child.x) {\r\n        return {\r\n          id: `${parent.x * 45 + 50} ${parent.y * 150 + 50 + 35} ${\r\n            child.x * 45 + 50\r\n          } ${child.y * 150 + 50 - 44}`,\r\n          x1: parent.x * 45 + 50,\r\n          y1: parent.y * 150 + 50 - 35,\r\n          x2: child.x * 45 + 50,\r\n          y2: child.y * 150 + 50 + 44,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction fn(i, j, treenode, dp) {\r\n  fullrec.push(treenode);\r\n  if (i == 0) {\r\n    treenode.returned_value = j;\r\n    fullrec.push(treenode.parent);\r\n    return j;\r\n  }\r\n  if (j == 0) {\r\n    treenode.returned_value = i;\r\n    fullrec.push(treenode.parent);\r\n    return i;\r\n  }\r\n  /*----------------------------------Memory remover---------------------------------------------*/\r\n  if (dp[i - 1][j - 1] != -1) {\r\n    fullrec.push(treenode.parent);\r\n    treenode.returned_value = dp[i - 1][j - 1];\r\n    treenode.calculated = 1;\r\n    return dp[i - 1][j - 1];\r\n  }\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  if (str1[i - 1] == str2[j - 1]) {\r\n    treenode.left = node(i - 1, j - 1);\r\n    treenode.left.parent = treenode;\r\n    treenode.returned_value = fn(i - 1, j - 1, treenode.left, dp);\r\n    dp[i - 1][j - 1] = treenode.returned_value;\r\n    let temp = treenode.returned_value;\r\n    fullrec.push(treenode.parent);\r\n    return temp;\r\n  }\r\n  treenode.left = node(i, j - 1);\r\n  treenode.left.parent = treenode;\r\n  treenode.middle = node(i - 1, j);\r\n  treenode.middle.parent = treenode;\r\n  treenode.right = node(i - 1, j - 1);\r\n  treenode.right.parent = treenode;\r\n  let temp1 = fn(i, j - 1, treenode.left, dp);\r\n  let temp2 = fn(i - 1, j, treenode.middle, dp);\r\n  let temp3 = fn(i - 1, j - 1, treenode.right, dp);\r\n  let temp = 1 + Math.min(Math.min(temp1, temp2), temp3);\r\n  treenode.returned_value = temp;\r\n  dp[i - 1][j - 1] = treenode.returned_value;\r\n  if (treenode.parent) fullrec.push(treenode.parent);\r\n  return temp;\r\n}\r\n\r\nfunction toggled() {\r\n  toggle = !toggle;\r\n}\r\n\r\nfunction codeShow() {\r\n  let x = document.getElementById(\"codeid\");\r\n  if (x) {\r\n    x.classList.toggle(\"active\");\r\n  }\r\n  let content = x.nextElementSibling;\r\n  if (content.style.maxHeight) {\r\n    content.style.maxHeight = null;\r\n  } else {\r\n    content.style.maxHeight = content.scrollHeight + \"px\";\r\n  }\r\n}\r\n\r\nfunction traversetree(node) {\r\n  treearray.push(node);\r\n  if (node.left) {\r\n    traversetree(node.left);\r\n  }\r\n  if (node.middle) {\r\n    traversetree(node.middle);\r\n  }\r\n  if (node.right) {\r\n    traversetree(node.right);\r\n  }\r\n  if (node.parent) {\r\n    treeEdge.push(edge(node, node.parent));\r\n  }\r\n}\r\n/*-------------------------------------------------------------------------------------------------------*/\r\n\r\nclass ED extends Component {\r\n  state = {};\r\n  traverse(xx, yy) {\r\n    let temp = document.getElementById(\"string_1\").value;\r\n    str1 = temp;\r\n    temp = document.getElementById(\"string_2\").value;\r\n    str2 = temp;\r\n    let parent = node(str1.length, str2.length);\r\n    let dp = new Array(str1.length)\r\n      .fill(-1)\r\n      .map(() => new Array(str2.length).fill(-1));\r\n    let x = fn(str1.length, str2.length, parent, dp);\r\n    this.layout(parent);\r\n    if (toggle == 0) traversetree(parent);\r\n    return x;\r\n  }\r\n\r\n  nextright(tree) {\r\n    if (tree.thread) {\r\n      return tree.thread;\r\n    }\r\n    if (tree.left || tree.right || tree.middle) {\r\n      if (tree.right) {\r\n        return tree.right;\r\n      } else if (tree.middle) {\r\n        return tree.middle;\r\n      } else {\r\n        return tree.left;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  nextleft(tree) {\r\n    if (tree.thread) {\r\n      return tree.thread;\r\n    }\r\n    if (tree.left || tree.right || tree.middle) {\r\n      if (tree.left) {\r\n        return tree.left;\r\n      } else if (tree.middle) {\r\n        return tree.middle;\r\n      } else {\r\n        return tree.right;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  addmod(tree, modsum = 0) {\r\n    tree.x = tree.x + modsum;\r\n    x_place = Math.max(x_place, tree.x);\r\n    y_place = Math.max(y_place, tree.y);\r\n    if (tree.left) {\r\n      this.addmod(tree.left, modsum + tree.mod);\r\n    }\r\n    if (tree.middle) {\r\n      this.addmod(tree.middle, modsum + tree.mod);\r\n    }\r\n    if (tree.right) {\r\n      this.addmod(tree.right, modsum + tree.mod);\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  layout(tree) {\r\n    return this.addmod(this.setup(tree, 0), 0);\r\n  }\r\n\r\n  setup(tree, depth) {\r\n    if (tree.left == null && tree.right == null && tree.middle == null) {\r\n      tree.x = 0;\r\n      tree.y = depth;\r\n\r\n      return tree;\r\n    }\r\n    if (tree.left == null && tree.right != null && tree.middle == null) {\r\n      let temp_tree = this.setup(tree.right, depth + 1);\r\n      tree.x = temp_tree.x;\r\n      tree.y = temp_tree.y - 1;\r\n\r\n      return tree;\r\n    }\r\n    if (tree.middle != null && tree.left == null && tree.right == null) {\r\n      let temp_tree = this.setup(tree.middle, depth + 1);\r\n      tree.x = temp_tree.x;\r\n      tree.y = temp_tree.y - 1;\r\n    }\r\n    if (tree.right == null && tree.left != null && tree.middle == null) {\r\n      let temp_tree = this.setup(tree.left, depth + 1);\r\n      tree.x = temp_tree.x;\r\n      tree.y = temp_tree.y - 1;\r\n\r\n      return tree;\r\n    }\r\n    if (tree.middle == null && tree.left && tree.right) {\r\n      let left_tree = this.setup(tree.left, depth + 1);\r\n      let right_tree = this.setup(tree.right, depth + 1);\r\n      tree.x = this.fix_subtrees(left_tree, right_tree);\r\n      tree.y = left_tree.y - 1;\r\n    } else if (tree.left == null && tree.middle && tree.right) {\r\n      let left_tree = this.setup(tree.middle, depth + 1);\r\n      let right_tree = this.setup(tree.right, depth + 1);\r\n      tree.x = this.fix_subtrees(left_tree, right_tree);\r\n      tree.y = left_tree.y - 1;\r\n    } else if (tree.left && tree.middle && tree.right == null) {\r\n      let left_tree = this.setup(tree.left, depth + 1);\r\n      let right_tree = this.setup(tree.middle, depth + 1);\r\n      tree.x = this.fix_subtrees(left_tree, right_tree);\r\n      tree.y = left_tree.y - 1;\r\n    } else {\r\n      let left_tree = this.setup(tree.left, depth + 1);\r\n      let right_tree = this.setup(tree.middle, depth + 1);\r\n      tree.x = this.fix_subtrees(left_tree, right_tree);\r\n      left_tree = this.setup(tree.right, depth + 1);\r\n      tree.x = this.fix_subtrees(right_tree, left_tree);\r\n      tree.x = (tree.left.x + tree.right.x) / 2;\r\n      tree.y = left_tree.y - 1;\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  fix_subtrees(left_tree, right_tree) {\r\n    let hope = this.contour(left_tree, right_tree, null, 0, 0, null, null);\r\n    let li = hope.li;\r\n    let ri = hope.ri;\r\n    let diff = hope.maxoffset;\r\n    let loffset = hope.loffset;\r\n    let roffset = hope.roffset;\r\n    let lo = hope.left_outer;\r\n    let ro = hope.right_outer;\r\n\r\n    diff += 1;\r\n\r\n    right_tree.mod += diff;\r\n\r\n    right_tree.x += diff;\r\n\r\n    if (right_tree.left || right_tree.right || right_tree.middle) {\r\n      roffset += diff;\r\n    }\r\n    if (ri && !li) {\r\n      lo.thread = ri;\r\n      lo.mod = roffset - loffset;\r\n    } else if (li && !ri) {\r\n      ro.thread = li;\r\n      ro.mod = loffset - roffset;\r\n      if (li.parent.mod) ro.mod += li.parent.mod;\r\n    }\r\n    return (left_tree.x + right_tree.x) / 2;\r\n  }\r\n\r\n  contour(\r\n    left_tree,\r\n    right_tree,\r\n    maxoffset,\r\n    loffset,\r\n    roffset,\r\n    left_outer = null,\r\n    right_outer = null\r\n  ) {\r\n    let delta = left_tree.x + loffset - (right_tree.x + roffset) + 1;\r\n    if (!maxoffset || delta > maxoffset) {\r\n      maxoffset = delta;\r\n    }\r\n    if (!left_outer) {\r\n      left_outer = left_tree;\r\n    }\r\n    if (!right_outer) {\r\n      right_outer = right_tree;\r\n    }\r\n    let lo = this.nextleft(left_outer || left_tree);\r\n    let li = this.nextright(left_tree || left_outer);\r\n    let ri = this.nextleft(right_tree || right_outer);\r\n    let ro = this.nextright(right_outer || right_tree);\r\n\r\n    if (li && ri) {\r\n      loffset += left_tree.mod;\r\n      roffset += right_tree.mod;\r\n      return this.contour(li, ri, maxoffset, loffset, roffset, lo, ro);\r\n    }\r\n\r\n    return { li, ri, maxoffset, loffset, roffset, left_outer, right_outer };\r\n  }\r\n\r\n  clearScreen() {\r\n    for (let i = 0; i < timeout_array.length; i++) {\r\n      clearTimeout(timeout_array[i]);\r\n    }\r\n    document.getElementById(\"ED_data\").classList.add(\"remove\");\r\n    timeout_array = [];\r\n    string1_array = [];\r\n    string2_array = [];\r\n    treearray = [];\r\n    treeEdge = [];\r\n    fullrec = [];\r\n    x_place = 0;\r\n    y_place = 0;\r\n    this.setState({ nodes: treearray });\r\n    this.setState({ edges: treeEdge });\r\n  }\r\n\r\n  string_obj(value, id) {\r\n    return {\r\n      id: id,\r\n      value: value,\r\n      check: 0,\r\n    };\r\n  }\r\n\r\n  string_data_setter() {\r\n    for (let i = 0; i < str1.length; i++) {\r\n      string1_array.push(this.string_obj(str1[i], i));\r\n    }\r\n    this.setState({ string_data_1: string1_array });\r\n\r\n    for (let i = 0; i < str2.length; i++) {\r\n      string2_array.push(this.string_obj(str2[i], i));\r\n    }\r\n    this.setState({ string_data_2: string2_array });\r\n  }\r\n\r\n  animate(ans) {\r\n    let time_delay = 0;\r\n    let time_curve = 0;\r\n    if (toggle) {\r\n      treeEdge = [];\r\n      treearray = [];\r\n      time_delay = 400;\r\n      time_curve = 50;\r\n      for (let i = 0; i < fullrec.length - 1; i++) {\r\n        let time1 = setTimeout(() => {\r\n          treearray.push(fullrec[i]);\r\n\r\n          for (let j = 0; j < string1_array.length; j++) {\r\n            string1_array[j].check = 0;\r\n          }\r\n          for (let j = 0; j < string2_array.length; j++) {\r\n            string2_array[j].check = 0;\r\n          }\r\n\r\n          if (string1_array[fullrec[i].str1_idx]) {\r\n            string1_array[fullrec[i].str1_idx].check = 2;\r\n\r\n            this.setState({ string_data_1: string1_array });\r\n          }\r\n          if (string2_array[fullrec[i].str2_idx]) {\r\n            string2_array[fullrec[i].str2_idx].check = 2;\r\n\r\n            this.setState({ string_data_2: string2_array });\r\n          }\r\n\r\n          this.setState({ nodes: treearray });\r\n        }, time_delay * i);\r\n        timeout_array.push(time1);\r\n\r\n        time1 = setTimeout(() => {\r\n          if (fullrec[i + 1]) {\r\n            let edge_new = edge(fullrec[i], fullrec[i + 1]);\r\n            let temp_id = edge(fullrec[i + 1], fullrec[i]).id;\r\n            let index = -1;\r\n            for (let j = 0; j < treeEdge.length; j++) {\r\n              if (treeEdge[j].id == temp_id) {\r\n                index = j;\r\n                break;\r\n              }\r\n            }\r\n            edge_new.time = i + 2;\r\n            if (index == -1) {\r\n              treeEdge.push(edge_new);\r\n              this.setState({ edges: treeEdge });\r\n              let icon1 = document.getElementById(\r\n                `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 1`\r\n              );\r\n              let icon2 = document.getElementById(\r\n                `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 2`\r\n              );\r\n              if (icon1) icon1.beginElement();\r\n              if (icon2) icon2.beginElement();\r\n            } else {\r\n              treeEdge.splice(index, 1);\r\n              treeEdge.push(edge_new);\r\n              this.setState({ edges: treeEdge });\r\n              let icon1 = document.getElementById(\r\n                `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 1`\r\n              );\r\n              let icon2 = document.getElementById(\r\n                `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 2`\r\n              );\r\n              if (icon1) icon1.beginElement();\r\n              if (icon2) icon2.beginElement();\r\n            }\r\n          }\r\n        }, time_delay * i + time_curve);\r\n        timeout_array.push(time1);\r\n      }\r\n    } else {\r\n      if (toggle == 0) {\r\n        this.setState({ nodes: treearray });\r\n        this.setState({ edges: treeEdge });\r\n      }\r\n    }\r\n    let time2 = setTimeout(() => {\r\n      if (document.getElementById(\"ED_data\"))\r\n        document.getElementById(\"ED_data\").classList.remove(\"remove\");\r\n      this.setState({ ans: ans });\r\n    }, fullrec.length * time_delay);\r\n    timeout_array.push(time2);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.clearScreen();\r\n    toggle = 1;\r\n  }\r\n\r\n  help() {\r\n    this.clearScreen();\r\n    let x = this.traverse(0, 0);\r\n    this.string_data_setter();\r\n    this.animate(x);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      nodes = [],\r\n      edges = [],\r\n      ans = 0,\r\n      string_data_1 = [],\r\n      string_data_2 = [],\r\n    } = this.state;\r\n    return (\r\n      <div className=\"parent_div\">\r\n        <div className=\"menu\">\r\n          <div className=\" lcs_prblm\">\r\n            <p>\r\n              Given two strings str1 and str2 and below operations that can\r\n              performed on str1. Find minimum number of edits (operations)\r\n              required to convert ‘str1’ into ‘str2’.\r\n            </p>\r\n            <p>\r\n              1. Insert\r\n              <br /> 2. Remove <br /> 3. Replace\r\n            </p>\r\n            <p>All of the above operations are of equal cost. </p>\r\n            <p>For example :</p>\r\n            <p>str1 = \"sunday\" </p>\r\n            <p>str2 = \"saturday\"</p>\r\n            <p>Output: 3</p>\r\n            <p>\r\n              Last three and first characters are same. We basically need to\r\n              convert \"un\" to \"atur\". This can be done using below three\r\n              operations. Replace 'n' with 'r', insert t, insert a\r\n            </p>\r\n            <p>\r\n              *NOTE : WHITE NODES ARE CALCULATED.\r\n              <br />\r\n              <br />\r\n              *NOTE : BLACK NODES ARE MEMORISED.\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"string_1\"\r\n              className=\"input_lcs font_input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"String 1\"\r\n              spellCheck={false}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"string_2\"\r\n              className=\"input_lcs font_input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"String 2\"\r\n              spellCheck={false}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div className=\"toggle_check\">\r\n            <label>Enable step-by-step animation</label>\r\n            <label className=\"switch toggle_bar\">\r\n              <input\r\n                type=\"checkbox\"\r\n                defaultChecked\r\n                onClick={() => toggled()}\r\n              ></input>\r\n              <div className=\"slider round \"></div>\r\n            </label>\r\n          </div>\r\n\r\n          <button\r\n            id=\"codeid\"\r\n            className=\"collapsible\"\r\n            onClick={() => {\r\n              codeShow();\r\n            }}\r\n          >\r\n            View Code\r\n          </button>\r\n          <div className=\"content code\">\r\n            <pre>\r\n              {`\r\n/*\r\n\r\ninitialize whole dp matrix to -1;\r\n\r\ndp[String1.length][String2.length] = -1;\r\n\r\n*/\r\n\r\nfunction fn(i,j) {\r\n  // i-th char of String1\r\n  //j-th char of String2\r\n\r\n  if (i == 0){\r\n    return j;\r\n   }\r\n\r\n  if (j == 0){\r\n    return i;\r\n   }\r\n  \r\n  if(dp[i-1][j-1] != -1){\r\n\r\n    // BLACK NODES ARE MEMORISED...\r\n    \r\n    return dp[i-1][j-1];\r\n  }\r\n\r\n  if (String1[i-1] == String2[j-1]){\r\n    dp[i-1][j-1] = fn(i-1, j-1);\r\n    return dp[i-1][j-1];\r\n  }\r\n\r\n  dp[i-1][j-1] =1+ Math.min(\r\n    fn(i, j-1),\r\n    fn(i-1, j),\r\n    fn(i-1,j-1)\r\n  ); \r\n\r\n  return dp[i-1][j-1]; \r\n}    \r\n              `}\r\n            </pre>\r\n          </div>\r\n          <div id=\"ED_data\" className=\"lcs_length remove\">\r\n            <p>Output = {ans}</p>\r\n          </div>\r\n          <div>\r\n            <button className=\"lcs-visual\" onClick={() => this.help()}>\r\n              Visualize\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"hope\">\r\n          <div className=\"padding_style\">\r\n            <div className=\"string_data\">\r\n              <div className=\"string_text\">\r\n                {string_data_1.map((node, nodeidx) => {\r\n                  const { id, value, check } = node;\r\n                  return (\r\n                    <LCS_string\r\n                      key={nodeidx}\r\n                      id={id}\r\n                      value={value}\r\n                      check={check}\r\n                    >\r\n                      {value}\r\n                    </LCS_string>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"string_text\">\r\n                {string_data_2.map((node, nodeidx) => {\r\n                  const { id, value, check } = node;\r\n                  return (\r\n                    <LCS_string\r\n                      key={nodeidx}\r\n                      id={id}\r\n                      value={value}\r\n                      check={check}\r\n                    >\r\n                      {value}\r\n                    </LCS_string>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"graph\">\r\n              <svg\r\n                className=\"svg\"\r\n                viewBox={`0 0 ${x_place * 45 + 100} ${y_place * 150 + 100}`}\r\n              >\r\n                {nodes.map((node, nodeidx) => {\r\n                  const {\r\n                    parent,\r\n                    id,\r\n                    x,\r\n                    y,\r\n                    left,\r\n                    right,\r\n                    middle,\r\n                    str1_idx,\r\n                    str2_idx,\r\n                    value,\r\n                    mod,\r\n                    thread,\r\n                    calculated,\r\n                  } = node;\r\n                  return (\r\n                    <EDTree\r\n                      key={nodeidx}\r\n                      parent={parent}\r\n                      id={id}\r\n                      x={x}\r\n                      y={y}\r\n                      left={left}\r\n                      right={right}\r\n                      middle={middle}\r\n                      str1_idx={str1_idx}\r\n                      str2_idx={str2_idx}\r\n                      value={value}\r\n                      mod={mod}\r\n                      thread={thread}\r\n                      calculated={calculated}\r\n                    >\r\n                      {value}\r\n                    </EDTree>\r\n                  );\r\n                })}\r\n\r\n                {edges.map((edge, edgeidx) => {\r\n                  const { x1, y1, x2, y2, value, time } = edge;\r\n                  return (\r\n                    <EDEdges\r\n                      key={edgeidx}\r\n                      x_1={x1}\r\n                      y_1={y1}\r\n                      x_2={x2}\r\n                      y_2={y2}\r\n                      value={value}\r\n                      time={time}\r\n                    ></EDEdges>\r\n                  );\r\n                })}\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer\">made by yatharth katyayan</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ED;\r\n","import React, { Component } from \"react\";\r\nimport LCSTree from \"../LCS/LCS_tree\";\r\nimport LCSEdges from \"../LCS/lcs_edges\";\r\nlet treearray = [];\r\nlet treeEdge = [];\r\nlet fullrec = [];\r\nlet value_array = [];\r\nlet weight_array = [];\r\nlet timeout_array = [];\r\nlet toggle = 1;\r\nlet x_place = 0;\r\nlet y_place = 0;\r\n\r\nfunction node(i, j) {\r\n  return {\r\n    parent: null,\r\n    id: `${i}-${j}`,\r\n    x: 0,\r\n    y: 0,\r\n    left: null,\r\n    right: null,\r\n    str1_idx: i,\r\n    str2_idx: j,\r\n    value: `${i},${j}`,\r\n    mod: 0,\r\n    thread: null,\r\n    returned_value: -1,\r\n    calculated: 0,\r\n  };\r\n}\r\n\r\nfunction toggled() {\r\n  toggle = !toggle;\r\n}\r\n\r\nfunction edge(parent, child) {\r\n  let slope = 0;\r\n  if (parent && child) {\r\n    slope =\r\n      (parent.y * 150 + 50 - (child.y * 150 + 50)) /\r\n      (parent.x * 45 + 50 - (child.x * 45 + 50));\r\n    if (parent.left == child || parent.right == child) {\r\n      /* parent to child*/\r\n\r\n      if (parent.x != child.x && parent.left === child) {\r\n        let temp_x2 = 44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = -35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (-35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      } else if (parent.x != child.x && parent.right === child) {\r\n        let temp_x2 = -44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (-44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = 35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      } else {\r\n        return {\r\n          id: `${parent.x * 45 + 50} ${parent.y * 150 + 50 + 35} ${\r\n            child.x * 45 + 50\r\n          } ${child.y * 150 + 50 - 44}`,\r\n          x1: parent.x * 45 + 50,\r\n          y1: parent.y * 150 + 50 + 35,\r\n          x2: child.x * 45 + 50,\r\n          y2: child.y * 150 + 50 - 44,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      }\r\n    } else {\r\n      /* child to parent*/\r\n\r\n      if (parent.x != child.x && child.left === parent) {\r\n        let temp_x2 = -44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (-44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = 35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      } else if (parent.x != child.x && child.right === parent) {\r\n        let temp_x2 = 44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = -35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (-35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      } else {\r\n        return {\r\n          id: `${parent.x * 45 + 50} ${parent.y * 150 + 50 + 35} ${\r\n            child.x * 45 + 50\r\n          } ${child.y * 150 + 50 - 44}`,\r\n          x1: parent.x * 45 + 50,\r\n          y1: parent.y * 150 + 50 - 35,\r\n          x2: child.x * 45 + 50,\r\n          y2: child.y * 150 + 50 + 44,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction fn(i, j, treenode, dp) {\r\n  fullrec.push(treenode);\r\n\r\n  if (j < 0) {\r\n    treenode.returned_value = \"-∞\";\r\n    fullrec.push(treenode.parent);\r\n    return -Infinity;\r\n  }\r\n\r\n  if (i == value_array.length) {\r\n    treenode.returned_value = 0;\r\n    fullrec.push(treenode.parent);\r\n    return 0;\r\n  }\r\n\r\n  /*----------------------------------Memory remover---------------------------------------------*/\r\n  if (dp[i][j - 1] != -1) {\r\n    fullrec.push(treenode.parent);\r\n    treenode.returned_value = dp[i][j - 1];\r\n    treenode.calculated = 1;\r\n    return dp[i][j - 1];\r\n  }\r\n\r\n  /*------------------------------------------------------------------------------------------------*/\r\n\r\n  treenode.left = node(i + 1, j);\r\n  treenode.left.parent = treenode;\r\n  treenode.right = node(i + 1, j - weight_array[i]);\r\n  treenode.right.parent = treenode;\r\n  let temp1 = fn(i + 1, j, treenode.left, dp);\r\n  let temp2 =\r\n    value_array[i] + fn(i + 1, j - weight_array[i], treenode.right, dp);\r\n  let temp = Math.max(temp1, temp2);\r\n  treenode.returned_value = temp;\r\n  dp[i][j - 1] = treenode.returned_value;\r\n  if (treenode.parent) fullrec.push(treenode.parent);\r\n  return temp;\r\n}\r\nfunction takeValues(val) {\r\n  let number_pattern = /-?\\d*\\.{0,1}\\d+/g;\r\n\r\n  let numbers = val.match(number_pattern);\r\n  if (numbers) {\r\n    for (let i = 0; i < numbers.length; i++) {\r\n      numbers[i] = parseInt(numbers[i], 10);\r\n    }\r\n  }\r\n  return numbers;\r\n}\r\n\r\nfunction traversetree(node) {\r\n  treearray.push(node);\r\n  if (node.left) {\r\n    traversetree(node.left);\r\n  }\r\n  if (node.right) {\r\n    traversetree(node.right);\r\n  }\r\n  if (node.parent) {\r\n    treeEdge.push(edge(node, node.parent));\r\n  }\r\n}\r\n\r\nfunction codeShow() {\r\n  let x = document.getElementById(\"codeid\");\r\n  if (x) {\r\n    x.classList.toggle(\"active\");\r\n  }\r\n  let content = x.nextElementSibling;\r\n  if (content.style.maxHeight) {\r\n    content.style.maxHeight = null;\r\n  } else {\r\n    content.style.maxHeight = content.scrollHeight + \"px\";\r\n  }\r\n}\r\n\r\n/*-------------------------------------------------------------------------------------------------------*/\r\n\r\nclass KS extends Component {\r\n  state = {};\r\n\r\n  traverse(xx, yy) {\r\n    let temp = document.getElementById(\"values\").value;\r\n    value_array = takeValues(temp);\r\n    temp = document.getElementById(\"weights\").value;\r\n    weight_array = takeValues(temp);\r\n    temp = document.getElementById(\"sum\").value;\r\n    let sum = 0;\r\n    if (takeValues(temp)) sum = takeValues(temp)[0];\r\n    let dp;\r\n    if (value_array) {\r\n      dp = new Array(value_array.length)\r\n        .fill(-1)\r\n        .map(() => new Array(sum).fill(-1));\r\n    }\r\n    let parent = node(xx, sum);\r\n    let x = 0;\r\n    if (sum > 0) x = fn(xx, sum, parent, dp);\r\n    this.layout(parent);\r\n    if (toggle == 0) {\r\n      traversetree(parent);\r\n    }\r\n    return x;\r\n    /*\r\n    console.log(dp);\r\n    console.log(value_array);\r\n    console.log(weight_array);\r\n    console.log(x);\r\n    console.log(fullrec);\r\n    */\r\n  }\r\n\r\n  nextright(tree) {\r\n    if (tree.thread) {\r\n      return tree.thread;\r\n    }\r\n    if (tree.left || tree.right) {\r\n      if (tree.right) {\r\n        return tree.right;\r\n      } else {\r\n        return tree.left;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  nextleft(tree) {\r\n    if (tree.thread) {\r\n      return tree.thread;\r\n    }\r\n    if (tree.left || tree.right) {\r\n      if (tree.left) {\r\n        return tree.left;\r\n      } else {\r\n        return tree.right;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  addmod(tree, modsum = 0) {\r\n    tree.x = tree.x + modsum;\r\n    x_place = Math.max(x_place, tree.x);\r\n    y_place = Math.max(y_place, tree.y);\r\n    if (tree.left) {\r\n      this.addmod(tree.left, modsum + tree.mod);\r\n    }\r\n    if (tree.right) {\r\n      this.addmod(tree.right, modsum + tree.mod);\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  layout(tree) {\r\n    return this.addmod(this.setup(tree, 0), 0);\r\n  }\r\n\r\n  setup(tree, depth) {\r\n    if (tree.left == null && tree.right == null) {\r\n      tree.x = 0;\r\n      tree.y = depth;\r\n\r\n      return tree;\r\n    }\r\n    if (tree.left == null && tree.right != null) {\r\n      let temp_tree = this.setup(tree.right, depth + 1);\r\n      tree.x = temp_tree.x;\r\n      tree.y = temp_tree.y - 1;\r\n\r\n      return tree;\r\n    }\r\n    if (tree.right == null && tree.left != null) {\r\n      let temp_tree = this.setup(tree.left, depth + 1);\r\n      tree.x = temp_tree.x;\r\n      tree.y = temp_tree.y - 1;\r\n\r\n      return tree;\r\n    }\r\n    let left_tree = this.setup(tree.left, depth + 1);\r\n    let right_tree = this.setup(tree.right, depth + 1);\r\n\r\n    tree.x = this.fix_subtrees(left_tree, right_tree);\r\n    tree.y = left_tree.y - 1;\r\n\r\n    return tree;\r\n  }\r\n\r\n  fix_subtrees(left_tree, right_tree) {\r\n    let hope = this.contour(left_tree, right_tree, null, 0, 0, null, null);\r\n    let li = hope.li;\r\n    let ri = hope.ri;\r\n    let diff = hope.maxoffset;\r\n    let loffset = hope.loffset;\r\n    let roffset = hope.roffset;\r\n    let lo = hope.left_outer;\r\n    let ro = hope.right_outer;\r\n\r\n    diff += 1;\r\n\r\n    right_tree.mod += diff;\r\n\r\n    right_tree.x += diff;\r\n\r\n    if (right_tree.left || right_tree.right) {\r\n      roffset += diff;\r\n    }\r\n    if (ri && !li) {\r\n      lo.thread = ri;\r\n      lo.mod = roffset - loffset;\r\n    } else if (li && !ri) {\r\n      ro.thread = li;\r\n      ro.mod = loffset - roffset;\r\n    }\r\n    return (left_tree.x + right_tree.x) / 2;\r\n  }\r\n\r\n  contour(\r\n    left_tree,\r\n    right_tree,\r\n    maxoffset,\r\n    loffset,\r\n    roffset,\r\n    left_outer = null,\r\n    right_outer = null\r\n  ) {\r\n    let delta = left_tree.x + loffset - (right_tree.x + roffset) + 1;\r\n    if (!maxoffset || delta > maxoffset) {\r\n      maxoffset = delta;\r\n    }\r\n    if (!left_outer) {\r\n      left_outer = left_tree;\r\n    }\r\n    if (!right_outer) {\r\n      right_outer = right_tree;\r\n    }\r\n    let lo = this.nextleft(left_outer || left_tree);\r\n    let li = this.nextright(left_tree || left_outer);\r\n    let ri = this.nextleft(right_tree || right_outer);\r\n    let ro = this.nextright(right_outer || right_tree);\r\n\r\n    if (li && ri) {\r\n      loffset += left_tree.mod;\r\n      roffset += right_tree.mod;\r\n      return this.contour(li, ri, maxoffset, loffset, roffset, lo, ro);\r\n    }\r\n\r\n    return { li, ri, maxoffset, loffset, roffset, left_outer, right_outer };\r\n  }\r\n\r\n  clearScreen() {\r\n    for (let i = 0; i < timeout_array.length; i++) {\r\n      clearTimeout(timeout_array[i]);\r\n    }\r\n    document.getElementById(\"kpsk_data\").classList.add(\"remove\");\r\n    timeout_array = [];\r\n    treearray = [];\r\n    treeEdge = [];\r\n    fullrec = [];\r\n    x_place = 0;\r\n    y_place = 0;\r\n\r\n    this.setState({ nodes: treearray });\r\n    this.setState({ edges: treeEdge });\r\n  }\r\n\r\n  animate(ans) {\r\n    let time_delay = 0;\r\n    let time_curve = 0;\r\n    if (toggle) {\r\n      time_delay = 400;\r\n      time_curve = 50;\r\n      for (let i = 0; i < fullrec.length - 1; i++) {\r\n        let time1 = setTimeout(() => {\r\n          treearray.push(fullrec[i]);\r\n          this.setState({ nodes: treearray });\r\n        }, time_delay * i);\r\n        timeout_array.push(time1);\r\n        time1 = setTimeout(() => {\r\n          if (fullrec[i + 1]) {\r\n            let edge_new = edge(fullrec[i], fullrec[i + 1]);\r\n            let temp_id = edge(fullrec[i + 1], fullrec[i]).id;\r\n            let index = -1;\r\n            for (let j = 0; j < treeEdge.length; j++) {\r\n              if (treeEdge[j].id == temp_id) {\r\n                index = j;\r\n                break;\r\n              }\r\n            }\r\n            edge_new.time = i + 2;\r\n            if (index == -1) {\r\n              treeEdge.push(edge_new);\r\n              this.setState({ edges: treeEdge });\r\n              let icon1 = document.getElementById(\r\n                `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 1`\r\n              );\r\n              let icon2 = document.getElementById(\r\n                `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 2`\r\n              );\r\n              if (icon1) icon1.beginElement();\r\n              if (icon2) icon2.beginElement();\r\n            } else {\r\n              treeEdge.splice(index, 1);\r\n              treeEdge.push(edge_new);\r\n              this.setState({ edges: treeEdge });\r\n              let icon1 = document.getElementById(\r\n                `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 1`\r\n              );\r\n              let icon2 = document.getElementById(\r\n                `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 2`\r\n              );\r\n              if (icon1) icon1.beginElement();\r\n              if (icon2) icon2.beginElement();\r\n            }\r\n          }\r\n        }, time_delay * i + time_curve);\r\n        timeout_array.push(time1);\r\n      }\r\n    } else {\r\n      this.setState({ nodes: treearray });\r\n      this.setState({ edges: treeEdge });\r\n    }\r\n    let time1 = setTimeout(() => {\r\n      if (document.getElementById(\"kpsk_data\"))\r\n        document.getElementById(\"kpsk_data\").classList.remove(\"remove\");\r\n      this.setState({ Knapsack_ans: ans });\r\n    }, fullrec.length * time_delay);\r\n    timeout_array.push(time1);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.clearScreen();\r\n    toggle = 1;\r\n  }\r\n\r\n  help() {\r\n    this.clearScreen();\r\n    let x = this.traverse(0, 0);\r\n    this.animate(x);\r\n  }\r\n\r\n  render() {\r\n    const { nodes = [], edges = [], Knapsack_ans = 0 } = this.state;\r\n\r\n    return (\r\n      <div className=\"parent_div\">\r\n        <div className=\"menu\">\r\n          <div className=\" lcs_prblm\">\r\n            <p>\r\n              Given weights and values of n items, put these items in a knapsack\r\n              of capacity W to get the maximum total value in the knapsack.\r\n            </p>\r\n            <p>\r\n              You cannot break an item, either pick the complete item or don’t\r\n              pick it (0-1 property).\r\n            </p>\r\n            <p>For example :</p>\r\n            <p>Values : [60,100,120]</p>\r\n            <p>Weights : [10,20,30]</p>\r\n            <p>Knapsack Capacity : 50</p>\r\n            <p>Output : 220</p>\r\n            <p>\r\n              *NOTE : WHITE NODES ARE CALCULATED.\r\n              <br />\r\n              <br />\r\n              *NOTE : BLACK NODES ARE MEMORISED.\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"values\"\r\n              className=\"input_lcs font_input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"Values\"\r\n              spellCheck={false}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"weights\"\r\n              className=\"input_lcs font_input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"Weights\"\r\n              spellCheck={false}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"sum\"\r\n              className=\"input_lcs font_input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"Knapsack capacity\"\r\n              spellCheck={false}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"toggle_check\">\r\n            <label>Enable step-by-step animation</label>\r\n            <label className=\"switch toggle_bar\">\r\n              <input\r\n                type=\"checkbox\"\r\n                defaultChecked\r\n                onClick={() => toggled()}\r\n              ></input>\r\n              <div className=\"slider round \"></div>\r\n            </label>\r\n          </div>\r\n\r\n          <button\r\n            id=\"codeid\"\r\n            className=\"collapsible\"\r\n            onClick={() => {\r\n              codeShow();\r\n            }}\r\n          >\r\n            View Code\r\n          </button>\r\n          <div className=\"content code\">\r\n            <pre>\r\n              {`\r\n/*\r\n\r\ninitialize whole dp matrix to -1;\r\n\r\ndp[values.length][KnapsackCapacity] = -1;\r\n\r\n*/\r\n\r\nfunction fn(i,s) {\r\n  // i-th item \r\n  \r\n  //knapsack with available capacity s\r\n  \r\n  if (s < 0) return -Infinity\r\n\r\n  if (i == v.length) return 0\r\n  \r\n  if(dp[i][j-1] != -1){\r\n    return dp[i][j-1];\r\n  }\r\n\r\n  dp[i][j-1] = Math.max(\r\n    fn(i+1, s),\r\n    v[i] + fn(i+1, s-w[i])\r\n  );\r\n\r\n  return dp[i][j-1];\r\n\r\n}\r\n              `}\r\n            </pre>\r\n          </div>\r\n\r\n          <div id=\"kpsk_data\" className=\"lcs_length remove\">\r\n            <p>Output = {Knapsack_ans}</p>\r\n          </div>\r\n\r\n          <div>\r\n            <button className=\"lcs-visual\" onClick={() => this.help()}>\r\n              Visualize\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"hope\">\r\n          <div className=\"padding_style\">\r\n            <svg\r\n              className=\"svg\"\r\n              viewBox={`0 0 ${x_place * 45 + 100} ${y_place * 150 + 100}`}\r\n            >\r\n              {nodes.map((node, nodeidx) => {\r\n                const {\r\n                  parent,\r\n                  id,\r\n                  x,\r\n                  y,\r\n                  left,\r\n                  right,\r\n                  str1_idx,\r\n                  str2_idx,\r\n                  value,\r\n                  mod,\r\n                  thread,\r\n                  calculated,\r\n                } = node;\r\n                return (\r\n                  <LCSTree\r\n                    key={nodeidx}\r\n                    parent={parent}\r\n                    id={id}\r\n                    x={x}\r\n                    y={y}\r\n                    left={left}\r\n                    right={right}\r\n                    str1_idx={str1_idx}\r\n                    str2_idx={str2_idx}\r\n                    value={value}\r\n                    mod={mod}\r\n                    thread={thread}\r\n                    calculated={calculated}\r\n                  >\r\n                    {value}\r\n                  </LCSTree>\r\n                );\r\n              })}\r\n\r\n              {edges.map((edge, edgeidx) => {\r\n                const { x1, y1, x2, y2, value, time } = edge;\r\n                return (\r\n                  <LCSEdges\r\n                    key={edgeidx}\r\n                    x_1={x1}\r\n                    y_1={y1}\r\n                    x_2={x2}\r\n                    y_2={y2}\r\n                    value={value}\r\n                    time={time}\r\n                  ></LCSEdges>\r\n                );\r\n              })}\r\n            </svg>\r\n          </div>\r\n          <div className=\"footer\">made by yatharth katyayan</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KS;\r\n","import React, { Component } from \"react\";\r\nimport LCSTree from \"./LCS/LCS_tree\";\r\nimport LCSEdges from \"./LCS/lcs_edges\";\r\nimport LCS_string from \"./LCS/LCS_string\";\r\nlet treearray = [];\r\nlet treeEdge = [];\r\nlet fullrec = [];\r\nlet length_array = [];\r\nlet price_array = [];\r\nlet rod_length = 0;\r\nlet timeout_array = [];\r\nlet toggle = 1;\r\nlet parent = node(0, 0);\r\nlet x_place = 0;\r\nlet y_place = 0;\r\n\r\nfunction node(i) {\r\n  return {\r\n    parent: null,\r\n    id: `${i}`,\r\n    x: 0,\r\n    y: 0,\r\n    children: [],\r\n    value: `${i}`,\r\n    mod: 0,\r\n    thread: null,\r\n    returned_value: -1,\r\n    calculated: 0,\r\n  };\r\n}\r\nfunction toggled() {\r\n  toggle = !toggle;\r\n}\r\nfunction edge(parent, child) {\r\n  let slope = 0;\r\n  if (parent && child) {\r\n    slope =\r\n      (parent.y * 150 + 50 - (child.y * 150 + 50)) /\r\n      (parent.x * 45 + 50 - (child.x * 45 + 50));\r\n    if (child.parent == parent) {\r\n      /* parent to child*/\r\n\r\n      if (parent.x > child.x) {\r\n        let temp_x2 = 44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = -35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (-35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      } else if (parent.x < child.x) {\r\n        let temp_x2 = -44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (-44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = 35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      } else if (parent.x == child.x) {\r\n        return {\r\n          id: `${parent.x * 45 + 50} ${parent.y * 150 + 50 + 35} ${\r\n            child.x * 45 + 50\r\n          } ${child.y * 150 + 50 - 44}`,\r\n          x1: parent.x * 45 + 50,\r\n          y1: parent.y * 150 + 50 + 35,\r\n          x2: child.x * 45 + 50,\r\n          y2: child.y * 150 + 50 - 44,\r\n          value: -1,\r\n          time: 0,\r\n        };\r\n      }\r\n    } else {\r\n      /* child to parent*/\r\n\r\n      if (parent.x < child.x) {\r\n        let temp_x2 = -44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (-44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = 35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      } else if (parent.x > child.x) {\r\n        let temp_x2 = 44 / Math.sqrt(1 + slope * slope) + (child.x * 45 + 50);\r\n        let temp_y2 =\r\n          (44 * slope) / Math.sqrt(1 + slope * slope) + (child.y * 150 + 50);\r\n        let temp_x1 = -35 / Math.sqrt(1 + slope * slope) + (parent.x * 45 + 50);\r\n        let temp_y1 =\r\n          (-35 * slope) / Math.sqrt(1 + slope * slope) + (parent.y * 150 + 50);\r\n\r\n        return {\r\n          id: `${temp_x1} ${temp_y1} ${temp_x2} ${temp_y2}`,\r\n          x1: temp_x1,\r\n          y1: temp_y1,\r\n          x2: temp_x2,\r\n          y2: temp_y2,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      } else if (parent.x == child.x) {\r\n        return {\r\n          id: `${parent.x * 45 + 50} ${parent.y * 150 + 50 + 35} ${\r\n            child.x * 45 + 50\r\n          } ${child.y * 150 + 50 - 44}`,\r\n          x1: parent.x * 45 + 50,\r\n          y1: parent.y * 150 + 50 - 35,\r\n          x2: child.x * 45 + 50,\r\n          y2: child.y * 150 + 50 + 44,\r\n          value: parent.returned_value,\r\n          time: 0,\r\n        };\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction fn(price, rod_length, treenode, dp) {\r\n  fullrec.push(treenode);\r\n  if (rod_length <= 0) {\r\n    treenode.returned_value = 0;\r\n    fullrec.push(treenode.parent);\r\n    return 0;\r\n  }\r\n  /*----------------------------------Memory remover---------------------------------------------*/\r\n  if (dp[rod_length - 1] != -1) {\r\n    fullrec.push(treenode.parent);\r\n    treenode.returned_value = dp[rod_length - 1];\r\n    treenode.calculated = 1;\r\n    return dp[rod_length - 1];\r\n  }\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  let maxval = -Infinity;\r\n\r\n  for (let k = 1; k <= rod_length; k++) {\r\n    let temp = node(rod_length - k);\r\n\r\n    temp.parent = treenode;\r\n    treenode.children.push(temp);\r\n    let cost = price[k - 1] + fn(price, rod_length - k, temp, dp);\r\n    if (cost > maxval) {\r\n      maxval = cost;\r\n    }\r\n  }\r\n\r\n  dp[rod_length - 1] = maxval;\r\n  treenode.returned_value = dp[rod_length - 1];\r\n  if (treenode.parent) fullrec.push(treenode.parent);\r\n\r\n  return maxval;\r\n}\r\n\r\nfunction takeValues(val) {\r\n  let number_pattern = /-?\\d*\\.{0,1}\\d+/g;\r\n\r\n  let numbers = val.match(number_pattern);\r\n  if (numbers) {\r\n    for (let i = 0; i < numbers.length; i++) {\r\n      numbers[i] = parseInt(numbers[i], 10);\r\n    }\r\n  }\r\n  return numbers;\r\n}\r\n\r\nfunction traversetree(node) {\r\n  treearray.push(node);\r\n  if (node.parent) {\r\n    treeEdge.push(edge(node, node.parent));\r\n  }\r\n  for (let i = 0; i < node.children.length; i++) {\r\n    traversetree(node.children[i]);\r\n  }\r\n}\r\n\r\nfunction codeShow() {\r\n  let x = document.getElementById(\"codeid\");\r\n  if (x) {\r\n    x.classList.toggle(\"active\");\r\n  }\r\n  let content = x.nextElementSibling;\r\n  if (content.style.maxHeight) {\r\n    content.style.maxHeight = null;\r\n  } else {\r\n    content.style.maxHeight = content.scrollHeight + \"px\";\r\n  }\r\n}\r\n/*-------------------------------------------------------------------------------------------------------*/\r\n\r\nclass ROD extends Component {\r\n  state = {};\r\n\r\n  traverse(xx, yy) {\r\n    let temp = document.getElementById(\"price\").value;\r\n    price_array = takeValues(temp);\r\n    temp = document.getElementById(\"rod_length\").value;\r\n    if (takeValues(temp)) rod_length = takeValues(temp)[0];\r\n    let parent = node(rod_length);\r\n    let dp = new Array(rod_length).fill(-1);\r\n    let x = fn(price_array, rod_length, parent, dp);\r\n    console.log(\"ans :\", x);\r\n    console.log(price_array, rod_length);\r\n    this.layout(parent);\r\n    if (toggle == 0) traversetree(parent);\r\n    return x;\r\n  }\r\n\r\n  nextright(tree) {\r\n    if (tree.thread) {\r\n      return tree.thread;\r\n    }\r\n    if (tree.children[tree.children.length - 1]) {\r\n      return tree.children[tree.children.length - 1];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  nextleft(tree) {\r\n    if (tree.thread) {\r\n      return tree.thread;\r\n    }\r\n    if (tree.children[0]) {\r\n      return tree.children[0];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  addmod(tree, modsum = 0) {\r\n    tree.x = tree.x + modsum;\r\n    x_place = Math.max(x_place, tree.x);\r\n    y_place = Math.max(y_place, tree.y);\r\n    for (const child of tree.children) {\r\n      this.addmod(child, modsum + tree.mod);\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  layout(tree) {\r\n    return this.addmod(this.setup(tree, 0), 0);\r\n  }\r\n\r\n  setup(tree, depth) {\r\n    if (tree.children.length === 0) {\r\n      tree.x = 0;\r\n      tree.y = depth;\r\n      return tree;\r\n    }\r\n\r\n    if (tree.children.length === 1) {\r\n      let temp_tree = this.setup(tree.children[0], depth + 1);\r\n      tree.x = temp_tree.x;\r\n      tree.y = temp_tree.y - 1;\r\n      return tree;\r\n    }\r\n\r\n    const [firstChild, ...children] = tree.children;\r\n    let leftChild = this.setup(firstChild, depth + 1);\r\n    tree.y = leftChild.y - 1;\r\n    for (const child of children) {\r\n      const rightChild = this.setup(child, depth + 1);\r\n\r\n      this.fix_subtrees(leftChild, rightChild);\r\n      leftChild = rightChild;\r\n    }\r\n\r\n    tree.x =\r\n      (tree.children[0].x + tree.children[tree.children.length - 1].x) / 2;\r\n    return tree;\r\n  }\r\n\r\n  fix_subtrees(left_tree, right_tree) {\r\n    let hope = this.contour(left_tree, right_tree, null, 0, 0, null, null);\r\n    let li = hope.li;\r\n    let ri = hope.ri;\r\n    let diff = hope.maxoffset;\r\n    let loffset = hope.loffset;\r\n    let roffset = hope.roffset;\r\n    let lo = hope.left_outer;\r\n    let ro = hope.right_outer;\r\n\r\n    diff += 1;\r\n\r\n    right_tree.mod += diff;\r\n\r\n    right_tree.x += diff;\r\n\r\n    if (right_tree.left || right_tree.right) {\r\n      roffset += diff;\r\n    }\r\n    if (ri && !li) {\r\n      lo.thread = ri;\r\n      lo.mod = roffset - loffset;\r\n    } else if (li && !ri) {\r\n      ro.thread = li;\r\n      ro.mod = loffset - roffset;\r\n      if (li.parent.mod) ro.mod += li.parent.mod;\r\n    }\r\n  }\r\n\r\n  contour(\r\n    left_tree,\r\n    right_tree,\r\n    maxoffset,\r\n    loffset,\r\n    roffset,\r\n    left_outer = null,\r\n    right_outer = null\r\n  ) {\r\n    let delta = left_tree.x + loffset - (right_tree.x + roffset) + 1;\r\n    if (!maxoffset || delta > maxoffset) {\r\n      maxoffset = delta;\r\n    }\r\n    if (!left_outer) {\r\n      left_outer = left_tree;\r\n    }\r\n    if (!right_outer) {\r\n      right_outer = right_tree;\r\n    }\r\n    let lo = this.nextleft(left_outer || left_tree);\r\n    let li = this.nextright(left_tree || left_outer);\r\n    let ri = this.nextleft(right_tree || right_outer);\r\n    let ro = this.nextright(right_outer || right_tree);\r\n\r\n    if (li && ri) {\r\n      loffset += left_tree.mod;\r\n      roffset += right_tree.mod;\r\n      return this.contour(li, ri, maxoffset, loffset, roffset, lo, ro);\r\n    }\r\n\r\n    return { li, ri, maxoffset, loffset, roffset, left_outer, right_outer };\r\n  }\r\n\r\n  clearScreen() {\r\n    for (let i = 0; i < timeout_array.length; i++) {\r\n      clearTimeout(timeout_array[i]);\r\n    }\r\n\r\n    document.getElementById(\"ROD_data\").classList.add(\"remove\");\r\n\r\n    timeout_array = [];\r\n    treearray = [];\r\n    treeEdge = [];\r\n    fullrec = [];\r\n    x_place = 0;\r\n    y_place = 0;\r\n    parent = node(0, 0);\r\n    this.setState({ nodes: treearray });\r\n    this.setState({ edges: treeEdge });\r\n  }\r\n\r\n  animate(ans) {\r\n    let delay_time = 0;\r\n    let delay_edge = 0;\r\n\r\n    if (toggle) {\r\n      delay_time = 400;\r\n      delay_edge = 50;\r\n\r\n      for (let i = 0; i < fullrec.length - 1; i++) {\r\n        let time1 = setTimeout(() => {\r\n          treearray.push(fullrec[i]);\r\n\r\n          this.setState({ nodes: treearray });\r\n        }, delay_time * i);\r\n\r\n        timeout_array.push(time1);\r\n\r\n        time1 = setTimeout(() => {\r\n          if (fullrec[i + 1]) {\r\n            let edge_new = edge(fullrec[i], fullrec[i + 1]);\r\n            let temp_id = edge(fullrec[i + 1], fullrec[i]).id;\r\n            let index = -1;\r\n            for (let j = 0; j < treeEdge.length; j++) {\r\n              if (treeEdge[j].id == temp_id) {\r\n                index = j;\r\n                break;\r\n              }\r\n            }\r\n            edge_new.time = i + 2;\r\n            if (index == -1) {\r\n              treeEdge.push(edge_new);\r\n              this.setState({ edges: treeEdge });\r\n              let icon1 = document.getElementById(\r\n                `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 1`\r\n              );\r\n              let icon2 = document.getElementById(\r\n                `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 2`\r\n              );\r\n              if (icon1) icon1.beginElement();\r\n              if (icon2) icon2.beginElement();\r\n            } else {\r\n              treeEdge.splice(index, 1);\r\n              treeEdge.push(edge_new);\r\n              this.setState({ edges: treeEdge });\r\n              let icon1 = document.getElementById(\r\n                `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 1`\r\n              );\r\n              let icon2 = document.getElementById(\r\n                `edge ${edge_new.x1} ${edge_new.y1} ${edge_new.x2} ${edge_new.y2} 2`\r\n              );\r\n              if (icon1) icon1.beginElement();\r\n              if (icon2) icon2.beginElement();\r\n            }\r\n          }\r\n        }, delay_time * i + delay_edge);\r\n        timeout_array.push(time1);\r\n      }\r\n    } else {\r\n      this.setState({ nodes: treearray });\r\n      this.setState({ edges: treeEdge });\r\n    }\r\n    let time2 = setTimeout(() => {\r\n      if (document.getElementById(\"ROD_data\"))\r\n        document.getElementById(\"ROD_data\").classList.remove(\"remove\");\r\n      this.setState({ ans: ans });\r\n    }, fullrec.length * delay_time);\r\n    timeout_array.push(time2);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.clearScreen();\r\n    toggle = 1;\r\n  }\r\n\r\n  help() {\r\n    this.clearScreen();\r\n    let x = this.traverse(0, 0);\r\n\r\n    this.animate(x);\r\n  }\r\n\r\n  render() {\r\n    const { nodes = [], edges = [], ans = 0 } = this.state;\r\n\r\n    return (\r\n      <div className=\"parent_div\">\r\n        <div className=\"menu\">\r\n          <div className=\" lcs_prblm\">\r\n            <p>\r\n              Given a rod of length n inches and an array of prices that\r\n              contains prices of all pieces of size smaller than n. Determine\r\n              the maximum value obtainable by cutting up the rod and selling the\r\n              pieces.\r\n            </p>\r\n            <p>For example :</p>\r\n            <p>Prices : [1, 5, 8, 9, 10, 17, 17, 20]</p>\r\n            <p>Output : 22</p>\r\n            <p>\r\n              The maximum obtainable value is 22 (by cutting in two pieces of\r\n              lengths 2 and 6){\" \"}\r\n            </p>\r\n            <p>\r\n              *NOTE : WHITE NODES ARE CALCULATED.\r\n              <br />\r\n              <br />\r\n              *NOTE : BLACK NODES ARE MEMORISED.\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <input\r\n              id=\"price\"\r\n              className=\"input_lcs font_input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"Prices\"\r\n              spellCheck={false}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              id=\"rod_length\"\r\n              className=\"input_lcs font_input\"\r\n              required={true}\r\n              type=\"text\"\r\n              placeholder=\"Rod length\"\r\n              spellCheck={false}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div className=\"toggle_check\">\r\n            <label>Enable step-by-step animation</label>\r\n            <label className=\"switch toggle_bar\">\r\n              <input\r\n                type=\"checkbox\"\r\n                defaultChecked\r\n                onClick={() => toggled()}\r\n              ></input>\r\n              <div className=\"slider round \"></div>\r\n            </label>\r\n          </div>\r\n\r\n          <button\r\n            id=\"codeid\"\r\n            className=\"collapsible\"\r\n            onClick={() => {\r\n              codeShow();\r\n            }}\r\n          >\r\n            View Code\r\n          </button>\r\n          <div className=\"content code\">\r\n            <pre>\r\n              {`\r\n/*\r\n\r\ninitialize whole dp array to -1;\r\n\r\ndp[Rod_length] = -1;\r\n\r\n*/\r\n\r\nfunction fn(Prices,Rod_length) {\r\n    \r\n  //Prices --> Prices array of rod.\r\n  //Rod_length --> length of rod.\r\n\r\n  if (Rod_length == 0){\r\n    return 0;\r\n   }\r\n  \r\n  if(dp[Rod_length-1] != -1){\r\n    return dp[Rod_length-1];\r\n  }\r\n\r\n  let max_value = -Infinity;\r\n  \r\n  for(let i = 1; i<=Rod_length; i++){\r\n    \r\n    let cost = Prices[i-1]\r\n     + fn(Prices,Rod_length-i);\r\n    \r\n    if(max_value < cost){\r\n        max_value = cost;\r\n    }\r\n\r\n  }\r\n\r\n  dp[Rod_length-1] = max_value;\r\n\r\n}    \r\n              `}\r\n            </pre>\r\n          </div>\r\n\r\n          <div id=\"ROD_data\" className=\"lcs_length remove\">\r\n            <p>Output = {ans}</p>\r\n          </div>\r\n\r\n          <div>\r\n            <button className=\"lcs-visual\" onClick={() => this.help()}>\r\n              Visualize\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"hope\">\r\n          <div className=\"padding_style\">\r\n            <div className=\"graph\">\r\n              <svg\r\n                className=\"svg\"\r\n                viewBox={`0 0 ${x_place * 45 + 100} ${y_place * 150 + 100}`}\r\n              >\r\n                {nodes.map((node, nodeidx) => {\r\n                  const {\r\n                    parent,\r\n                    id,\r\n                    x,\r\n                    y,\r\n                    left,\r\n                    right,\r\n                    str1_idx,\r\n                    str2_idx,\r\n                    value,\r\n                    mod,\r\n                    thread,\r\n                    calculated,\r\n                  } = node;\r\n                  return (\r\n                    <LCSTree\r\n                      key={nodeidx}\r\n                      parent={parent}\r\n                      id={id}\r\n                      x={x}\r\n                      y={y}\r\n                      left={left}\r\n                      right={right}\r\n                      str1_idx={str1_idx}\r\n                      str2_idx={str2_idx}\r\n                      value={value}\r\n                      mod={mod}\r\n                      thread={thread}\r\n                      calculated={calculated}\r\n                    >\r\n                      {value}\r\n                    </LCSTree>\r\n                  );\r\n                })}\r\n\r\n                {edges.map((edge, edgeidx) => {\r\n                  const { x1, y1, x2, y2, value, time } = edge;\r\n                  return (\r\n                    <LCSEdges\r\n                      key={edgeidx}\r\n                      x_1={x1}\r\n                      y_1={y1}\r\n                      x_2={x2}\r\n                      y_2={y2}\r\n                      value={value}\r\n                      time={time}\r\n                    ></LCSEdges>\r\n                  );\r\n                })}\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer\">made by yatharth katyayan</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ROD;\r\n","import React, { Component } from \"react\";\r\nimport Coins from \"./problems/coin-change/coins_grid\";\r\nimport SideNav from \"./sidenav\";\r\nimport { Link, BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport LCS from \"./problems/LCS/LCS\";\r\nimport LIS from \"./problems/LIS/LIS\";\r\nimport homepage from \"./start_homepage\";\r\nimport DpInfo from \"./dp_info\";\r\nimport ContactUs from \"./contactUS\";\r\nimport ED from \"./problems/ED/ED\";\r\nimport KS from \"./problems/01KS/01_KS\";\r\nimport ROD from \"./problems/rod_cutting\";\r\n\r\nclass Home extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"line\">\r\n        <Router>\r\n          <SideNav />\r\n          <Route path=\"/dpvisual/problem\" exact component={Home}>\r\n            <div className=\"coin_input \">\r\n              <Link to=\"/dpvisual/problem/LCS\">\r\n                <div className=\" homepage_button \">\r\n                  Longest Common Subsequence\r\n                </div>\r\n              </Link>\r\n\r\n              <Link to=\"/dpvisual/problem/LIS\">\r\n                <div className=\" homepage_button\">\r\n                  Longest Increasing Subsequence\r\n                </div>\r\n              </Link>\r\n              <Link to=\"/dpvisual/problem/ED\">\r\n                <div className=\" homepage_button\">Edit Distance</div>\r\n              </Link>\r\n              <Link to=\"/dpvisual/problem/KS\">\r\n                <div className=\" homepage_button\">0-1 Knapsack</div>\r\n              </Link>\r\n              <Link to=\"/dpvisual/problem/Rod\">\r\n                <div className=\" homepage_button\">Rod Cutting</div>\r\n              </Link>\r\n\r\n              <Link to=\"/dpvisual/problem/coins_change\">\r\n                <div className=\" homepage_button\">Classical Coin Change</div>\r\n              </Link>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/dpvisual/problem/LCS\" exact component={LCS} />\r\n          <Route\r\n            path=\"/dpvisual/problem/coins_change\"\r\n            exact\r\n            component={Coins}\r\n          />\r\n\r\n          <Route path=\"/dpvisual/problem/LIS\" exact component={LIS} />\r\n          <Route path=\"/dpvisual/problem/ED\" exact component={ED} />\r\n          <Route path=\"/dpvisual/problem/KS\" exact component={KS} />\r\n          <Route path=\"/dpvisual/problem/Rod\" exact component={ROD} />\r\n\r\n          <Route path=\"/dpvisual\" exact component={homepage} />\r\n          <Route path=\"/dpvisual/info\" exact component={DpInfo} />\r\n          <Route path=\"/dpvisual/contact\" exact component={ContactUs} />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport Home from \"./homepage\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}